{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "entryPoint", "type": "address", "internalType": "address" },
        {
          "name": "registry",
          "type": "address",
          "internalType": "contract IERC7484"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "REGISTRY",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC7484" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SUPPORTED_ENTRYPOINT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "accountId",
      "inputs": [],
      "outputs": [
        {
          "name": "accountImplementationId",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "addSafe7579",
      "inputs": [
        { "name": "safe7579", "type": "address", "internalType": "address" },
        {
          "name": "validators",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "executors",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "fallbacks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "hooks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getInitHash",
      "inputs": [],
      "outputs": [
        { "name": "value", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSafeOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "entryPoint", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "operationData", "type": "bytes", "internalType": "bytes" },
        { "name": "validAfter", "type": "uint48", "internalType": "uint48" },
        { "name": "validUntil", "type": "uint48", "internalType": "uint48" },
        { "name": "signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hash",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initSafe7579",
      "inputs": [
        { "name": "safe7579", "type": "address", "internalType": "address" },
        {
          "name": "executors",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "fallbacks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "hooks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "preValidationSetup",
      "inputs": [
        { "name": "initHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "preInit", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "predictSafeAddress",
      "inputs": [
        { "name": "singleton", "type": "address", "internalType": "address" },
        {
          "name": "safeProxyFactory",
          "type": "address",
          "internalType": "address"
        },
        { "name": "creationCode", "type": "bytes", "internalType": "bytes" },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "factoryInitializer",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        { "name": "safeProxy", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "setupSafe",
      "inputs": [
        {
          "name": "initData",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsExecutionMode",
      "inputs": [
        { "name": "encodedMode", "type": "bytes32", "internalType": "ModeCode" }
      ],
      "outputs": [
        { "name": "supported", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "supportsModule",
      "inputs": [
        { "name": "moduleTypeId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "userOpHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ModuleInstalled",
      "inputs": [
        {
          "name": "moduleTypeId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleUninstalled",
      "inputs": [
        {
          "name": "moduleTypeId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "InvalidEntryPoint", "inputs": [] },
    { "type": "error", "name": "InvalidInitHash", "inputs": [] },
    { "type": "error", "name": "InvalidSetup", "inputs": [] },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "InvalidUserOperationData", "inputs": [] },
    { "type": "error", "name": "OnlyDelegatecall", "inputs": [] },
    { "type": "error", "name": "OnlyProxy", "inputs": [] },
    { "type": "error", "name": "PreValidationSetupFailed", "inputs": [] },
    {
      "type": "error",
      "name": "Safe7579LaunchpadAlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WrongContractSignature",
      "inputs": [
        {
          "name": "contractSignature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "WrongContractSignatureFormat",
      "inputs": [
        { "name": "s", "type": "uint256", "internalType": "uint256" },
        {
          "name": "contractSignatureLen",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signaturesLen",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1487:15193:56:-:0;;;2604:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2669:24:56;;2665:56;;2702:19;;-1:-1:-1;;;2702:19:56;;;;;;;;;;;2665:56;2747:4;2732:20;;-1:-1:-1;;;;;2762:33:56;;;;;2805:19;;;1487:15193;;14:131:74;-1:-1:-1;;;;;89:31:74;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:403::-;247:6;255;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;356:9;350:16;375:31;400:5;375:31;:::i;:::-;475:2;460:18;;454:25;425:5;;-1:-1:-1;488:33:74;454:25;488:33;:::i;:::-;540:7;530:17;;;150:403;;;;;:::o;:::-;1487:15193:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1487:15193:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:56;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:56;;;;;;;;;;;2992:41;1487:15193;;;;;2298:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;196:32:74;;;178:51;;166:2;151:18;2298:34:56;;;;;;;;2247:45;;;;;;;;;;;;;;;3486:655;;;;;;;;;;-1:-1:-1;3486:655:56;;;;;:::i;:::-;;:::i;7367:3339::-;;;;;;;;;;-1:-1:-1;7367:3339:56;;;;;:::i;:::-;;:::i;:::-;;;3947:25:74;;;3935:2;3920:18;7367:3339:56;3801:177:74;14600:210:56;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;14773:21:56;14600:210;;5403:552;;;;;;;;;;-1:-1:-1;5403:552:56;;;;;:::i;:::-;;:::i;976:3275:62:-;;;;;;;;;;-1:-1:-1;976:3275:62;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;15307:892:56:-;;;;;;;;;;-1:-1:-1;15307:892:56;;;;;:::i;:::-;;:::i;16312:366::-;;;;;;;;;;-1:-1:-1;16312:366:56;;;;;:::i;:::-;;:::i;541:135:64:-;;;;;;;;;;-1:-1:-1;634:35:64;;;;;;;;;;;;;;;;541:135;;;;634:35;541:135;:::i;682:712::-;;;;;;;;;;-1:-1:-1;682:712:64;;;;;:::i;:::-;;:::i;:::-;;;13563:14:74;;13556:22;13538:41;;13526:2;13511:18;682:712:64;13398:187:74;4259:719:56;;;;;;;;;;-1:-1:-1;4259:719:56;;;;;:::i;:::-;;:::i;12839:1710::-;;;;;;;;;;-1:-1:-1;12839:1710:56;;;;;:::i;:::-;;:::i;1400:373:64:-;;;;;;;;;;-1:-1:-1;1400:373:64;;;;;:::i;:::-;;:::i;4257:150:62:-;;;;;;;;;;;;;:::i;3486:655:56:-;2883:10;2905:4;2883:27;2879:58;;2919:18;;-1:-1:-1;;;2919:18:56;;;;;;;;;;;2879:58;3780:43:::1;::::0;-1:-1:-1;;;3780:43:56;;-1:-1:-1;;;;;196:32:74;;3780:43:56::1;::::0;::::1;178:51:74::0;3794:4:56::1;::::0;3780:33:::1;::::0;151:18:74;;3780:43:56::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3902:19:56::1;::::0;;3919:1:::1;3902:19:::0;;;::::1;::::0;::::1;::::0;;;3851:4:::1;::::0;-1:-1:-1;3833:42:56::1;::::0;-1:-1:-1;3902:19:56;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;3902:19:56::1;;;;;;;;;;;;;;;;3946:9;;3980;;4010:5;;4043:80;;;;;;;;4068:8;-1:-1:-1::0;;;;;4043:80:56::1;;;;;4089:9;;4043:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;4043:80:56;;;-1:-1:-1;4043:80:56::1;::::0;::::1;;::::0;;::::1;::::0;3833:301:::1;::::0;-1:-1:-1;;;;;;3833:301:56::1;::::0;;;;;;::::1;::::0;;;;;;;;;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3486:655:::0;;;;;;;;;;:::o;7367:3339::-;7623:22;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:56;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:56;;;;;;;;;;;2992:41;3106:10:::1;-1:-1:-1::0;;;;;3120:20:56::1;3106:34;;3102:66;;3149:19;;-1:-1:-1::0;;;3149:19:56::1;;;;;;;;;;;3102:66;7699:15:::2;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;7716:1:::2;::::0;7699:19:::2;::::0;::::2;:::i;:::-;7692:27;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;7665:54:56::2;-1:-1:-1::0;;;7665:54:56::2;7661:118;;7742:26;;-1:-1:-1::0;;;7742:26:56::2;;;;;;;;;;;7661:118;7789:24;7827:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;7843:1:::2;::::0;7827:19;;::::2;:::i;:::-;7816:43;;;;;;;:::i;:::-;7789:70;;7989:13;-1:-1:-1::0;;;;;;;;;;;14773:21:56;;14600:210;7989:13:::2;7971:14;7976:8;7971:4;:14::i;:::-;:31;7967:61;;8011:17;;-1:-1:-1::0;;;8011:17:56::2;;;;;;;;;;;7967:61;8084:17;8111:13:::0;8127:6:::2;:12;;;8111:28;;8249:5;8245:2;8241:14;8228:27;;8620:12;8645:8;:17;;;-1:-1:-1::0;;;;;8637:31:56::2;8775:8;:19;;;8716:80;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8716:80:56;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8716:80:56::2;-1:-1:-1::0;;;8716:80:56::2;::::0;;8682:196;;::::2;::::0;8716:80;8828:10:::2;::::0;8682:196:::2;;:::i;:::-;;::::0;;-1:-1:-1;;8682:196:56;;::::2;::::0;;;;;;;8637:251:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8619:269;;;8951:7;8946:47;;8967:26;;-1:-1:-1::0;;;8967:26:56::2;;;;;;;;;;;8946:47;9297:19;::::0;::::2;::::0;:26;9231:29:::2;::::0;;9333:361:::2;9353:16;9349:1;:20;9333:361;;;9390:23;9416:8;:19;;;9436:1;9416:22;;;;;;;;:::i;:::-;;;;;;;:29;;;9390:55;;9470:15;-1:-1:-1::0;;;;;9459:37:56::2;;9497:8;:19;;;9517:1;9497:22;;;;;;;;:::i;:::-;;;;;;;:31;;;9459:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9548:55:56::2;::::0;;276:1:29::2;24192:25:74::0;;-1:-1:-1;;;;;24253:32:74;;24248:2;24233:18;;24226:60;9548:55:56::2;::::0;-1:-1:-1;24165:18:74;;-1:-1:-1;9548:55:56::2;;;;;;;9641:9;-1:-1:-1::0;;;;;9622:28:56::2;:15;-1:-1:-1::0;;;;;9622:28:56::2;::::0;9618:65:::2;;9679:4;9652:31;;9618:65;-1:-1:-1::0;9371:3:56::2;;9333:361;;;;9825:24;9821:602;;;9946:56;::::0;-1:-1:-1;;;9946:56:56;;-1:-1:-1;;;;;9946:36:56;::::2;::::0;::::2;::::0;:56:::2;::::0;9983:6;;9991:10;;9946:56:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9929:73;;9821:602;;;10119:13;10134:17:::0;10153::::2;10190:37;10210:8;10220:6;10190:19;:37::i;:::-;10118:109;;;;;;10259:153;10309:8;10308:9;10347:10;10387;10259:19;:153::i;:::-;10242:170;;10019:404;;;9821:602;10475:23:::0;;10471:229:::2;;10673:1;10670::::0;10667::::2;10664::::0;10643:19:::2;10633:8;10626:5;10621:54;10617:59;10471:229;7651:3055;;;;;;7367:3339:::0;;;;;:::o;5403:552::-;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:56;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:56;;;;;;;;;;;2992:41;5593:1:::1;5568:13;-1:-1:-1::0;;;;;;;;;;;14773:21:56;;14600:210;5568:13:::1;:27;5564:77;;5604:37;;-1:-1:-1::0;;;5604:37:56::1;;;;;;;;;;;5564:77;5679:22;5692:8;-1:-1:-1::0;;;;;;;;;;;15010:29:56;14859:196;5679:22:::1;-1:-1:-1::0;;;;;5803:16:56;::::1;::::0;5799:150:::1;;5836:12;5853:2;-1:-1:-1::0;;;;;5853:15:56::1;5869:7;;5853:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5835:42;;;5896:7;5891:47;;5912:26;;-1:-1:-1::0;;;5912:26:56::1;;;;;;;;;;;5891:47;5821:128;5799:150;5403:552:::0;;;;:::o;976:3275:62:-;1132:26;1172:17;;1132:26;1480:18;1172:17;1501:16;;;;:6;:16;:::i;:::-;1480:37;;-1:-1:-1;1480:37:62;-1:-1:-1;1558:8:62;1564:1;1562;1480:37;;1558:8;:::i;:::-;1551:16;;;:::i;:::-;1544:24;;;-1:-1:-1;1609:9:62;1615:2;1613:1;1609:3;;:9;:::i;:::-;1602:17;;;:::i;:::-;1595:25;;;-1:-1:-1;1647:8:62;:3;1651:2;1647:3;;:8;:::i;:::-;1634:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2706:830:62;;;;;;;;;193:66:70;2706:830:62;;1634:21;;-1:-1:-1;1634:21:62;-1:-1:-1;2706:830:62;;-1:-1:-1;;2706:830:62;;;;;-1:-1:-1;2794:13:62;;-1:-1:-1;2794:13:62;;:6;:13;:::i;:::-;-1:-1:-1;;;;;2706:830:62;;;;;2832:6;:12;;;2706:830;;;;2886:6;:15;;;;;;;;:::i;:::-;2876:26;;;;;;;:::i;:::-;;;;;;;;;2706:830;;;;2944:15;;;;:6;:15;:::i;:::-;2934:26;;;;;;;:::i;:::-;;;;;;;;2706:830;;;;3008:35;:6;:33;:35::i;:::-;-1:-1:-1;;;;;2706:830:62;;;;;3084:27;:6;:25;:27::i;:::-;-1:-1:-1;;;;;2706:830:62;;;;;3150:6;:25;;;2706:830;;;;3223:35;:6;:33;:35::i;:::-;-1:-1:-1;;;;;2706:830:62;;;;;3299:27;:6;:25;:27::i;:::-;-1:-1:-1;;;;;2706:830:62;;;;;3377:23;;;;:6;:23;:::i;:::-;3367:34;;;;;;;:::i;:::-;;;;;;;;;;;2706:830;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2706:830:62;;;;;;;4089:3;4064:29;;2663:873;;-1:-1:-1;;;;;;;4198:17:62;:15;:17::i;:::-;4153:81;;-1:-1:-1;;;;;;27353:15:74;;;4153:81:62;;;27341:28:74;27398:15;;;;27385:11;;;27378:36;27430:11;;;27423:27;27466:12;;;27459:28;;;27503:12;;4153:81:62;;;;;;;;;;;;4121:113;;2185:2060;;976:3275;;;;;;;:::o;15307:892:56:-;15547:17;15624:18;15614:29;;;;;;15645:4;15597:53;;;;;;;;27683:19:74;;;27727:2;27718:12;;27711:28;27764:2;27755:12;;27526:247;15597:53:56;;;;;;;;;;;;;15587:64;;;;;;15580:71;;15837:4;15830:12;;15880:16;15927:4;16021:12;16059:9;-1:-1:-1;;;;;16035:36:56;16004:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15961:141;;;;;;15784:344;;;;;;;;;;-1:-1:-1;;;;;;28389:26:74;;;;28377:39;;28453:2;28449:15;;;;-1:-1:-1;;;;;;28445:53:74;28441:1;28432:11;;28425:74;28524:2;28515:12;;28508:28;28561:2;28552:12;;28545:28;28598:2;28589:12;;28166:441;15784:344:56;;;;-1:-1:-1;;15784:344:56;;;;;;;;;15749:401;;15784:344;15749:401;;;;;15307:892;-1:-1:-1;;;;;;15307:892:56:o;16312:366::-;16446:14;;16478:11;;;;;16507:14;;;;;16539:12;;;;16569:14;;;;16601:13;;;;16632:15;;;;16418:243;;16369:7;;16418:243;;16446:14;;16478:11;16632:15;16418:243;;:::i;:::-;;;;;;;;;;;;;16395:276;;;;;;16388:283;;16312:366;;;:::o;682:712:64:-;758:14;929:11;969:1;965:19;;;-1:-1:-1;;;;;;5542:40:72;;-1:-1:-1;;;5542:40:72;1003:209:64;;1047:4;1035:16;;1003:209;;;-1:-1:-1;;;;;;5542:40:72;;1066:146:64;;1111:4;1099:16;;1066:146;;;-1:-1:-1;;;;;;5542:40:72;;;;1130:82:64;;1181:4;1169:16;;1130:82;;;-1:-1:-1;1207:5:64;;682:712;-1:-1:-1;;;682:712:64:o;1130:82::-;1227:9;:41;;;;-1:-1:-1;;;;;;;5542:40:72;;;1240:28:64;1223:164;;;1270:16;;682:712;;;:::o;1223:164::-;1305:9;:37;;;;-1:-1:-1;;;;;;;5542:40:72;;-1:-1:-1;;;5542:40:72;1318:24:64;1301:86;;;1344:16;;682:712;;;:::o;4259:719:56:-;4567:43;;-1:-1:-1;;;4567:43:56;;-1:-1:-1;;;;;196:32:74;;4567:43:56;;;178:51:74;4581:4:56;;4567:33;;151:18:74;;4567:43:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4620:49:56;;-1:-1:-1;;;4620:49:56;;-1:-1:-1;;;;;196:32:74;;4620:49:56;;;178:51:74;4634:4:56;;-1:-1:-1;4620:39:56;;-1:-1:-1;151:18:74;;4620:49:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:4;-1:-1:-1;;;;;4679:42:56;;4748:10;;4783:9;;4817;;4847:5;;4880:80;;;;;;;;4905:8;-1:-1:-1;;;;;4880:80:56;;;;;4926:9;;4880:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4880:80:56;;;-1:-1:-1;4880:80:56;;;;;;;;4679:292;;-1:-1:-1;;;;;;4679:292:56;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:719;;;;;;;;;;;;:::o;12839:1710::-;3106:10;-1:-1:-1;;;;;3120:20:56;3106:34;;3102:66;;3149:19;;-1:-1:-1;;;3149:19:56;;;;;;;;;;;3102:66;13085:18:::1;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;13061:21;:42:::0;;-1:-1:-1;;;;;;13061:42:56::1;-1:-1:-1::0;;;;;13061:42:56;;::::1;;::::0;;13182:4:::1;13162:24;:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;13162:24:56::1;;13158:51;;13195:14;;-1:-1:-1::0;;;13195:14:56::1;;;;;;;;;;;13158:51;-1:-1:-1::0;;;13294:18:56::1;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;:22;::::0;13314:1:::1;::::0;13294:22:::1;::::0;::::1;:::i;:::-;13287:30;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;13287:60:56::1;;13283:87;;13356:14;;-1:-1:-1::0;;;13356:14:56::1;;;;;;;;;;;13283:87;13423:4;13409:26;13459:15;;::::0;::::1;:8:::0;:15:::1;:::i;:::-;13500:18;::::0;::::1;;13536:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;13572:18;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;13629:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;13683:1;13708::::0;13756::::1;13409:361;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13820:1:56::1;-1:-1:-1::0;;;;;;;;;;;15010:29:56;-1:-1:-1;13807:15:56::1;::::0;-1:-1:-1;14859:196:56;13807:15:::1;14052:12;::::0;14101:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;14093:31:56::1;14172:17;;::::0;::::1;:8:::0;:17:::1;:::i;:::-;14275:4;14138:182;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;14138:182:56;;::::1;::::0;;;;;;;14093:237:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14051:279;;;;14345:7;14340:203;;14507:10;14501:17;14494:4;14482:10;14478:21;14471:48;14340:203;12919:1630;;12839:1710:::0;:::o;1400:373:64:-;1469:4;276:1:29;1489:12:64;:37;1485:281;;-1:-1:-1;1535:4:64;;1400:373;-1:-1:-1;1400:373:64:o;1485:281::-;319:1:29;1558:12:64;:36;1554:212;;-1:-1:-1;1603:4:64;;1400:373;-1:-1:-1;1400:373:64:o;1554:212::-;362:1:29;1626:12:64;:36;1622:144;;-1:-1:-1;1671:4:64;;1400:373;-1:-1:-1;1400:373:64:o;1622:144::-;401:1:29;1694:12:64;:32;1690:76;;-1:-1:-1;1735:4:64;;1400:373;-1:-1:-1;1400:373:64:o;1690:76::-;-1:-1:-1;1761:5:64;;1400:373;-1:-1:-1;1400:373:64:o;1690:76::-;1400:373;;;:::o;4257:150:62:-;4341:58;;;420:66;4341:58;;;34008:25:74;4379:13:62;34049:18:74;;;34042:34;;;;4394:4:62;34092:18:74;;;34085:60;4305:7:62;;33981:18:74;;4341:58:62;;;;;;;;;;;;4331:69;;;;;;4324:76;;4257:150;:::o;10712:1353:56:-;10882:13;10897:17;10916;10949:26;10985:23;11146:17;:26;;;-1:-1:-1;;;;;11138:45:56;;11184:6;11192:20;11138:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11138:75:56;;;;;;;;;;;;:::i;:::-;11239:24;;;;;;11338:27;;;;11072:141;;-1:-1:-1;11072:141:56;;-1:-1:-1;11072:141:56;;-1:-1:-1;11072:141:56;;-1:-1:-1;11239:24:56;11223:13;;11301:65;;11239:24;;11072:141;;11301:24;:65::i;:::-;11274:92;;11376:23;:7;:21;:23::i;:::-;11436:24;;;;11551:22;11436:24;11551:20;:22::i;:::-;11583:23;:6;:21;:23::i;:::-;11640:13;;11617:20;;11691:320;11711:12;11707:1;:16;11691:320;;;11745:10;11760:31;11781:6;11788:1;11781:9;;;;;;;;:::i;:::-;;;;;;;11760:7;:20;;:31;;;;:::i;:::-;11744:47;;;11809:5;11805:196;;;11834:11;;;;:::i;:::-;;;;11880:17;:27;;;11867:9;:40;11863:124;;11939:4;11931:37;;;;;;;;;;;;;11863:124;-1:-1:-1;11725:3:56;;11691:320;;;;12028:5;12020:38;;;;;;;;;10712:1353;;;;;;:::o;2448:248:0:-;2559:7;2683:8;2667:10;2659:19;;:33;;2643:3;2628:10;2620:19;;:26;;2590:9;:17;;2606:1;2590:17;;;2602:1;2590:17;2589:58;;;:104;;2448:248;-1:-1:-1;;;;2448:248:0:o;3410:171:1:-;3510:7;3536:38;3550:6;:23;;;2887:3;2868:22;;2780:117;3536:38;3529:45;3410:171;-1:-1:-1;;3410:171:1:o;3587:162::-;3679:7;-1:-1:-1;;;;;3718:23:1;;;;3039:31;3705:37;2959:118;3083:162;3183:7;3223:14;;;;2887:3;2868:22;3209:29;2780:117;3251:153;3343:7;-1:-1:-1;;;;;3382:14:1;;;;3039:31;3369:28;2959:118;904:3530:22;1080:33;1129:31;1163:23;:18;1184:2;1163:23;:::i;:::-;1223:17;;1129:57;;-1:-1:-1;1283:18:22;-1:-1:-1;;;;;1269:33:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1269:33:22;;1250:52;;1335:23;1316:16;:42;1312:73;;;1367:18;;-1:-1:-1;;;1367:18:22;;;;;;;;;;;1312:73;1401:9;1396:3032;1416:18;1412:1;:22;1396:3032;;;1498:15;1528:7;1537:9;1548;1561:50;1590:10;1607:1;5504:4;5500:14;5538:40;5572:4;5538:40;;5532:47;5637:4;5603:40;;5597:47;5710:4;5676:40;;;5670:47;5313:7;5662:56;;5532:47;;5597;5182:552;1561:50;1527:84;;;;;;1630:1;:6;;1635:1;1630:6;1626:2749;;1876:1;;-1:-1:-1;1876:1:22;;2180:23;2185:18;2180:2;:23;:::i;:::-;2167:36;;2163:136;;;2234:46;;-1:-1:-1;;;2234:46:22;;;;;36576:25:74;;;2263:10:22;36617:18:74;;;36610:34;;;36660:18;;;36653:34;36549:18;;2234:46:22;;;;;;;;2163:136;2339:16;2321:15;2329:1;2334:2;2321:15;:::i;:::-;:34;2317:149;;;2386:61;;-1:-1:-1;;;2386:61:22;;;;;36576:25:74;;;2415:10:22;36617:18:74;;;36610:34;36660:18;;;36653:34;;;36549:18;;2386:61:22;36358:335:74;2317:149:22;2823:4;2803:18;;;2799:29;;2793:36;;2909:16;;2793:36;;2868:15;;2803:18;;2868:15;:::i;:::-;:38;;;;:::i;:::-;:57;2864:237;;;2956:126;;-1:-1:-1;;;2956:126:22;;;;;36576:25:74;;;36617:18;;;36610:34;;;36660:18;;;36653:34;;;36549:18;;2956:126:22;36358:335:74;2864:237:22;3154:30;3504:4;3500:1;3488:10;3484:18;3480:29;3459:50;;168:10;3671:19;;-1:-1:-1;;;;;3569:121:22;;3589:7;-1:-1:-1;;;;;3569:45:22;;3615:8;3625:17;3569:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3569:121:22;;3544:213;;3739:17;3716:41;;-1:-1:-1;;;3716:41:22;;;;;;;;:::i;3544:213::-;1638:2134;;1626:2749;;;3786:2;3782:1;:6;;;3778:597;;;4073:184;4118:38;4147:8;15824:4:50;15817:18;15904:50;15725:14;15891:64;16007:4;16001;15991:21;;15656:409;4118:38:22;4181:5;4185:1;4181;:5;:::i;:::-;4211:1;4237;4073:16;:184::i;:::-;4063:194;;3778:597;;;4306:54;4331:8;4344:1;4350;4356;4306:16;:54::i;:::-;4296:64;;3778:597;4410:7;4388:16;4405:1;4388:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4388:29:22;;;:19;;;;;;;;;;;:29;-1:-1:-1;;1436:3:22;;;;;-1:-1:-1;1396:3032:22;;-1:-1:-1;1396:3032:22;;;1119:3315;;904:3530;;;;;:::o;2083:100:51:-;2150:26;2173:1;2150:13;:26::i;:::-;2083:100;:::o;10119:102::-;10187:27;10211:1;10187:14;:27::i;11107:225::-;11212:10;;11270:55;11293:1;11313:6;-1:-1:-1;;;;;11297:24:51;11323:1;11270:13;:55::i;:::-;11253:72;;;;-1:-1:-1;11107:225:51;-1:-1:-1;;;11107:225:51:o;14080:1040:50:-;14192:14;14303:4;14297:11;14368:4;14362;14355:18;14406:4;14403:1;14399:12;14393:4;14386:26;14438:1;14432:4;14425:15;14466:1;14460:4;14453:15;14789:4;14743;14699;14654;14604:1;14534:5;14502:328;14481:363;14870:1;14864:4;14857:15;15022:16;15016:4;15012:27;15006:34;14996:44;;15066:1;15060:4;15053:15;;14080:1040;;;;;;:::o;776:1034:51:-;924:1;918:8;967:1;964;957:12;1054:1;1051;1047:9;1044:1;1040:17;1093:4;1123;1119:9;1163:1;1160;1156:9;1141:598;1196:9;;1225:8;;;1236:5;1222:21;1275:1;1269:8;1318:1;1315;1311:9;1389:1;1383:8;1445:1;1442;1439:8;1429:32;;1451:8;;;1141:598;;1429:32;1478:210;1519:9;;;1512:20;1558:9;;1612:8;;1651;;;1478:210;1641:29;-1:-1:-1;1712:9:51;;1705:20;1141:598;;;-1:-1:-1;;;1752:12:51;;-1:-1:-1;776:1034:51:o;9124:722::-;9336:1;9332;9326:8;9323:15;9313:517;;9374:4;9371:1;9367:12;9412:4;9409:1;9405:12;9473:1;9469;9463:8;9459:16;9456:1;9452:24;9449:1;9445:32;9494:277;9557:1;9551:8;9547:1;9541:8;9538:22;9528:143;;9600:4;9597:1;9593:12;9588:17;;9646:1;9640:8;9637:1;9630:19;9528:143;9704:4;9701:1;9697:12;9692:17;;9739:3;9736:1;9733:10;9494:277;9730:23;-1:-1:-1;;9805:9:51;;;9802:1;9798:17;9788:28;;9124:722::o;21300:1099::-;21421:10;21433:13;21541:1;21537:6;21565:1;21594;21588:8;21618:1;21660:6;21652;21648:19;21638:29;;21632:453;21716:1;21713;21709:9;21706:1;21702:17;21693:26;;21773:5;21770:1;21766:13;21763:1;21759:21;21753:28;21745:6;21741:41;21736:46;;21821:6;21818:1;21815:13;21811:1;21808;21805:8;21802:27;21832:5;21799:40;21945:1;21937:6;21934:13;21924:112;;21987:1;21980:5;21976:13;21971:18;;21632:453;;21924:112;22069:1;22062:5;22058:13;22053:18;;21632:453;;;22291:13;;22284:21;22253:13;;22370;;;22331;;;;22327:21;;;;-1:-1:-1;21300:1099:51;-1:-1:-1;;;;21300:1099:51:o;557:131:74:-;-1:-1:-1;;;;;632:31:74;;622:42;;612:70;;678:1;675;668:12;693:134;761:20;;790:31;761:20;790:31;:::i;832:386::-;914:8;924:6;978:3;971:4;963:6;959:17;955:27;945:55;;996:1;993;986:12;945:55;-1:-1:-1;1019:20:74;;-1:-1:-1;;;;;1051:30:74;;1048:50;;;1094:1;1091;1084:12;1048:50;1131:4;1123:6;1119:17;1107:29;;1191:3;1184:4;1174:6;1171:1;1167:14;1159:6;1155:27;1151:38;1148:47;1145:67;;;1208:1;1205;1198:12;1145:67;832:386;;;;;:::o;1223:156::-;1289:20;;1349:4;1338:16;;1328:27;;1318:55;;1369:1;1366;1359:12;1384:1719;1687:6;1695;1703;1711;1719;1727;1735;1743;1751;1759;1812:3;1800:9;1791:7;1787:23;1783:33;1780:53;;;1829:1;1826;1819:12;1780:53;1852:29;1871:9;1852:29;:::i;:::-;1842:39;;1932:2;1921:9;1917:18;1904:32;-1:-1:-1;;;;;1996:2:74;1988:6;1985:14;1982:34;;;2012:1;2009;2002:12;1982:34;2051:89;2132:7;2123:6;2112:9;2108:22;2051:89;:::i;:::-;2159:8;;-1:-1:-1;2025:115:74;-1:-1:-1;2247:2:74;2232:18;;2219:32;;-1:-1:-1;2263:16:74;;;2260:36;;;2292:1;2289;2282:12;2260:36;2331:91;2414:7;2403:8;2392:9;2388:24;2331:91;:::i;:::-;2441:8;;-1:-1:-1;2305:117:74;-1:-1:-1;2529:2:74;2514:18;;2501:32;;-1:-1:-1;2545:16:74;;;2542:36;;;2574:1;2571;2564:12;2542:36;2613:91;2696:7;2685:8;2674:9;2670:24;2613:91;:::i;:::-;2723:8;;-1:-1:-1;2587:117:74;-1:-1:-1;2811:3:74;2796:19;;2783:33;;-1:-1:-1;2828:16:74;;;2825:36;;;2857:1;2854;2847:12;2825:36;;2896:91;2979:7;2968:8;2957:9;2953:24;2896:91;:::i;:::-;3006:8;;-1:-1:-1;2870:117:74;-1:-1:-1;3060:37:74;;-1:-1:-1;3092:3:74;3077:19;;3060:37;:::i;:::-;3050:47;;1384:1719;;;;;;;;;;;;;:::o;3108:168::-;3180:5;3225:3;3216:6;3211:3;3207:16;3203:26;3200:46;;;3242:1;3239;3232:12;3200:46;-1:-1:-1;3264:6:74;3108:168;-1:-1:-1;3108:168:74:o;3281:515::-;3396:6;3404;3412;3465:2;3453:9;3444:7;3440:23;3436:32;3433:52;;;3481:1;3478;3471:12;3433:52;3521:9;3508:23;-1:-1:-1;;;;;3546:6:74;3543:30;3540:50;;;3586:1;3583;3576:12;3540:50;3609:79;3680:7;3671:6;3660:9;3656:22;3609:79;:::i;:::-;3599:89;3735:2;3720:18;;3707:32;;-1:-1:-1;3786:2:74;3771:18;;;3758:32;;3281:515;-1:-1:-1;;;;3281:515:74:o;4165:794::-;4253:6;4261;4269;4277;4330:2;4318:9;4309:7;4305:23;4301:32;4298:52;;;4346:1;4343;4336:12;4298:52;4382:9;4369:23;4359:33;;4442:2;4431:9;4427:18;4414:32;4455:31;4480:5;4455:31;:::i;:::-;4505:5;-1:-1:-1;4561:2:74;4546:18;;4533:32;-1:-1:-1;;;;;4614:14:74;;;4611:34;;;4641:1;4638;4631:12;4611:34;4679:6;4668:9;4664:22;4654:32;;4724:7;4717:4;4713:2;4709:13;4705:27;4695:55;;4746:1;4743;4736:12;4695:55;4786:2;4773:16;4812:2;4804:6;4801:14;4798:34;;;4828:1;4825;4818:12;4798:34;4873:7;4868:2;4859:6;4855:2;4851:15;4847:24;4844:37;4841:57;;;4894:1;4891;4884:12;4841:57;4165:794;;;;-1:-1:-1;;4925:2:74;4917:11;;-1:-1:-1;;;4165:794:74:o;4964:514::-;5070:6;5078;5131:2;5119:9;5110:7;5106:23;5102:32;5099:52;;;5147:1;5144;5137:12;5099:52;5187:9;5174:23;-1:-1:-1;;;;;5212:6:74;5209:30;5206:50;;;5252:1;5249;5242:12;5206:50;5275:79;5346:7;5337:6;5326:9;5322:22;5275:79;:::i;:::-;5265:89;;;5404:2;5393:9;5389:18;5376:32;5417:31;5442:5;5417:31;:::i;:::-;5467:5;5457:15;;;4964:514;;;;;:::o;5483:250::-;5568:1;5578:113;5592:6;5589:1;5586:13;5578:113;;;5668:11;;;5662:18;5649:11;;;5642:39;5614:2;5607:10;5578:113;;;-1:-1:-1;;5725:1:74;5707:16;;5700:27;5483:250::o;5738:270::-;5779:3;5817:5;5811:12;5844:6;5839:3;5832:19;5860:76;5929:6;5922:4;5917:3;5913:14;5906:4;5899:5;5895:16;5860:76;:::i;:::-;5990:2;5969:15;-1:-1:-1;;5965:29:74;5956:39;;;;5997:4;5952:50;;5738:270;-1:-1:-1;;5738:270:74:o;6013:568::-;6258:3;6247:9;6240:22;6221:4;6285:45;6325:3;6314:9;6310:19;6302:6;6285:45;:::i;:::-;6349:14;6399:15;;;6394:2;6379:18;;6372:43;6451:15;;6446:2;6431:18;;6424:43;6503:22;;;6498:2;6483:18;;6476:50;6543:32;6507:6;6560;6543:32;:::i;:::-;6535:40;6013:568;-1:-1:-1;;;;;;;6013:568:74:o;6586:127::-;6647:10;6642:3;6638:20;6635:1;6628:31;6678:4;6675:1;6668:15;6702:4;6699:1;6692:15;6718:257;6790:4;6784:11;;;6822:17;;-1:-1:-1;;;;;6854:34:74;;6890:22;;;6851:62;6848:88;;;6916:18;;:::i;:::-;6952:4;6945:24;6718:257;:::o;6980:255::-;7052:2;7046:9;7094:6;7082:19;;-1:-1:-1;;;;;7116:34:74;;7152:22;;;7113:62;7110:88;;;7178:18;;:::i;7240:275::-;7311:2;7305:9;7376:2;7357:13;;-1:-1:-1;;7353:27:74;7341:40;;-1:-1:-1;;;;;7396:34:74;;7432:22;;;7393:62;7390:88;;;7458:18;;:::i;:::-;7494:2;7487:22;7240:275;;-1:-1:-1;7240:275:74:o;7520:186::-;7568:4;-1:-1:-1;;;;;7593:6:74;7590:30;7587:56;;;7623:18;;:::i;:::-;-1:-1:-1;7689:2:74;7668:15;-1:-1:-1;;7664:29:74;7695:4;7660:40;;7520:186::o;7711:462::-;7753:5;7806:3;7799:4;7791:6;7787:17;7783:27;7773:55;;7824:1;7821;7814:12;7773:55;7860:6;7847:20;7891:48;7907:31;7935:2;7907:31;:::i;:::-;7891:48;:::i;:::-;7964:2;7955:7;7948:19;8010:3;8003:4;7998:2;7990:6;7986:15;7982:26;7979:35;7976:55;;;8027:1;8024;8017:12;7976:55;8092:2;8085:4;8077:6;8073:17;8066:4;8057:7;8053:18;8040:55;8140:1;8115:16;;;8133:4;8111:27;8104:38;;;;8119:7;7711:462;-1:-1:-1;;;7711:462:74:o;8178:885::-;8291:6;8299;8307;8315;8323;8376:3;8364:9;8355:7;8351:23;8347:33;8344:53;;;8393:1;8390;8383:12;8344:53;8432:9;8419:23;8451:31;8476:5;8451:31;:::i;:::-;8501:5;-1:-1:-1;8558:2:74;8543:18;;8530:32;8571:33;8530:32;8571:33;:::i;:::-;8623:7;-1:-1:-1;8681:2:74;8666:18;;8653:32;-1:-1:-1;;;;;8734:14:74;;;8731:34;;;8761:1;8758;8751:12;8731:34;8784:49;8825:7;8816:6;8805:9;8801:22;8784:49;:::i;:::-;8774:59;;8880:2;8869:9;8865:18;8852:32;8842:42;;8937:3;8926:9;8922:19;8909:33;8893:49;;8967:2;8957:8;8954:16;8951:36;;;8983:1;8980;8973:12;8951:36;;9006:51;9049:7;9038:8;9027:9;9023:24;9006:51;:::i;:::-;8996:61;;;8178:885;;;;;;;;:::o;9068:183::-;9128:4;-1:-1:-1;;;;;9153:6:74;9150:30;9147:56;;;9183:18;;:::i;:::-;-1:-1:-1;9228:1:74;9224:14;9240:4;9220:25;;9068:183::o;9256:743::-;9310:5;9363:3;9356:4;9348:6;9344:17;9340:27;9330:55;;9381:1;9378;9371:12;9330:55;9417:6;9404:20;9443:4;9467:60;9483:43;9523:2;9483:43;:::i;9467:60::-;9549:3;9573:2;9568:3;9561:15;9601:4;9596:3;9592:14;9585:21;;9658:4;9652:2;9649:1;9645:10;9637:6;9633:23;9629:34;9615:48;;9686:3;9678:6;9675:15;9672:35;;;9703:1;9700;9693:12;9672:35;9739:4;9731:6;9727:17;9753:217;9769:6;9764:3;9761:15;9753:217;;;9849:3;9836:17;9866:31;9891:5;9866:31;:::i;:::-;9910:18;;9948:12;;;;9786;;9753:217;;;-1:-1:-1;9988:5:74;9256:743;-1:-1:-1;;;;;;9256:743:74:o;10004:1525::-;10068:5;10121:3;10114:4;10106:6;10102:17;10098:27;10088:55;;10139:1;10136;10129:12;10088:55;10175:6;10162:20;10201:4;10225:60;10241:43;10281:2;10241:43;:::i;10225:60::-;10319:15;;;10405:1;10401:10;;;;10389:23;;10385:32;;;10350:12;;;;10429:15;;;10426:35;;;10457:1;10454;10447:12;10426:35;10493:2;10485:6;10481:15;10505:995;10521:6;10516:3;10513:15;10505:995;;;10607:3;10594:17;-1:-1:-1;;;;;10684:2:74;10671:11;10668:19;10665:109;;;10728:1;10757:2;10753;10746:14;10665:109;10797:24;;;;10844:4;10872:12;;;-1:-1:-1;;10868:26:74;10864:35;-1:-1:-1;10861:125:74;;;10940:1;10969:2;10965;10958:14;10861:125;11012:22;;:::i;:::-;11083:2;11079;11075:11;11062:25;11100:33;11125:7;11100:33;:::i;:::-;11146:22;;11210:11;;;11197:25;;11238:16;;;11235:106;;;11295:1;11324:2;11320;11313:14;11235:106;11377:49;11422:3;11417:2;11406:8;11402:2;11398:17;11394:26;11377:49;:::i;:::-;11361:14;;;11354:73;11440:18;;-1:-1:-1;;;11478:12:74;;;;10538;;10505:995;;11534:1420;11620:6;11673:2;11661:9;11652:7;11648:23;11644:32;11641:52;;;11689:1;11686;11679:12;11641:52;11729:9;11716:23;-1:-1:-1;;;;;11799:2:74;11791:6;11788:14;11785:34;;;11815:1;11812;11805:12;11785:34;11838:22;;;;11894:6;11876:16;;;11872:29;11869:49;;;11914:1;11911;11904:12;11869:49;11940:22;;:::i;:::-;11985;12004:2;11985:22;:::i;:::-;11978:5;11971:37;12054:2;12050;12046:11;12033:25;12083:2;12073:8;12070:16;12067:36;;;12099:1;12096;12089:12;12067:36;12135:56;12183:7;12172:8;12168:2;12164:17;12135:56;:::i;:::-;12130:2;12123:5;12119:14;12112:80;;12245:2;12241;12237:11;12224:25;12219:2;12212:5;12208:14;12201:49;12282:31;12309:2;12305;12301:11;12282:31;:::i;:::-;12277:2;12270:5;12266:14;12259:55;12360:3;12356:2;12352:12;12339:26;12390:2;12380:8;12377:16;12374:36;;;12406:1;12403;12396:12;12374:36;12443:44;12479:7;12468:8;12464:2;12460:17;12443:44;:::i;:::-;12437:3;12430:5;12426:15;12419:69;;12521:32;12548:3;12544:2;12540:12;12521:32;:::i;:::-;12515:3;12508:5;12504:15;12497:57;12600:3;12596:2;12592:12;12579:26;12630:2;12620:8;12617:16;12614:36;;;12646:1;12643;12636:12;12614:36;12683:66;12741:7;12730:8;12726:2;12722:17;12683:66;:::i;:::-;12677:3;12670:5;12666:15;12659:91;;12796:3;12792:2;12788:12;12775:26;12826:2;12816:8;12813:16;12810:36;;;12842:1;12839;12832:12;12810:36;12879:44;12915:7;12904:8;12900:2;12896:17;12879:44;:::i;:::-;12873:3;12862:15;;12855:69;-1:-1:-1;12866:5:74;11534:1420;-1:-1:-1;;;;;11534:1420:74:o;12959:219::-;13108:2;13097:9;13090:21;13071:4;13128:44;13168:2;13157:9;13153:18;13145:6;13128:44;:::i;:::-;13120:52;12959:219;-1:-1:-1;;;12959:219:74:o;13183:210::-;13272:6;13325:2;13313:9;13304:7;13300:23;13296:32;13293:52;;;13341:1;13338;13331:12;13293:52;-1:-1:-1;13364:23:74;;13183:210;-1:-1:-1;13183:210:74:o;13590:2097::-;13960:6;13968;13976;13984;13992;14000;14008;14016;14024;14032;14040:7;14049;14103:3;14091:9;14082:7;14078:23;14074:33;14071:53;;;14120:1;14117;14110:12;14071:53;14143:29;14162:9;14143:29;:::i;:::-;14133:39;;-1:-1:-1;;;;;14215:2:74;14204:9;14200:18;14187:32;14184:56;14181:76;;;14253:1;14250;14243:12;14181:76;14292:115;14399:7;14392:2;14381:9;14377:18;14364:32;14353:9;14349:48;14292:115;:::i;:::-;14426:8;;-1:-1:-1;14453:8:74;-1:-1:-1;;;;;;14504:2:74;14489:18;;14476:32;14473:56;14470:76;;;14542:1;14539;14532:12;14470:76;14581:115;14688:7;14681:2;14670:9;14666:18;14653:32;14642:9;14638:48;14581:115;:::i;:::-;14715:8;;-1:-1:-1;14742:8:74;-1:-1:-1;;;;;;14793:2:74;14778:18;;14765:32;14762:56;14759:76;;;14831:1;14828;14821:12;14759:76;14870:115;14977:7;14970:2;14959:9;14955:18;14942:32;14931:9;14927:48;14870:115;:::i;:::-;15004:8;;-1:-1:-1;15031:8:74;-1:-1:-1;;;;;;15082:3:74;15067:19;;15054:33;15051:57;15048:77;;;15121:1;15118;15111:12;15048:77;15160:116;15268:7;15260:3;15249:9;15245:19;15232:33;15221:9;15217:49;15160:116;:::i;:::-;15295:8;;-1:-1:-1;15322:8:74;-1:-1:-1;;;;;;15373:3:74;15358:19;;15345:33;15342:57;15339:77;;;15412:1;15409;15402:12;15339:77;15452:116;15560:7;15552:3;15541:9;15537:19;15524:33;15513:9;15509:49;15452:116;:::i;:::-;15587:8;;-1:-1:-1;15615:9:74;-1:-1:-1;15644:37:74;15676:3;15661:19;;15644:37;:::i;:::-;15633:48;;13590:2097;;;;;;;;;;;;;;:::o;15692:389::-;15780:6;15833:2;15821:9;15812:7;15808:23;15804:32;15801:52;;;15849:1;15846;15839:12;15801:52;15889:9;15876:23;-1:-1:-1;;;;;15914:6:74;15911:30;15908:50;;;15954:1;15951;15944:12;15908:50;15977:22;;16033:3;16015:16;;;16011:26;16008:46;;;16050:1;16047;16040:12;16271:824;16334:3;16365;16397:5;16391:12;16424:6;16419:3;16412:19;16450:4;16479:2;16474:3;16470:12;16463:19;;16535:2;16525:6;16522:1;16518:14;16511:5;16507:26;16503:35;16572:2;16565:5;16561:14;16593:1;16603:466;16617:6;16614:1;16611:13;16603:466;;;16682:16;;;-1:-1:-1;;16678:30:74;16666:43;;16732:13;;16802:9;;-1:-1:-1;;;;;16798:35:74;16785:49;;16873:11;;16867:18;16768:4;16905:13;;;16898:25;;;16944:45;16975:13;;;16867:18;16944:45;:::i;:::-;17047:12;;;;16936:53;-1:-1:-1;;;17012:15:74;;;;16639:1;16632:9;16603:466;;;-1:-1:-1;17085:4:74;;16271:824;-1:-1:-1;;;;;;;16271:824:74:o;17100:500::-;17158:5;17165:6;17225:3;17212:17;17311:2;17307:7;17296:8;17280:14;17276:29;17272:43;17252:18;17248:68;17238:96;;17330:1;17327;17320:12;17238:96;17358:33;;17462:4;17449:18;;;-1:-1:-1;17410:21:74;;-1:-1:-1;;;;;;17479:30:74;;17476:50;;;17522:1;17519;17512:12;17476:50;17569:6;17553:14;17549:27;17542:5;17538:39;17535:59;;;17590:1;17587;17580:12;17605:266;17693:6;17688:3;17681:19;17745:6;17738:5;17731:4;17726:3;17722:14;17709:43;-1:-1:-1;17797:1:74;17772:16;;;17790:4;17768:27;;;17761:38;;;;17853:2;17832:15;;;-1:-1:-1;;17828:29:74;17819:39;;;17815:50;;17605:266::o;17876:1189::-;17965:3;17996;18020:6;18015:3;18008:19;18046:4;18075:2;18070:3;18066:12;18059:19;;18131:2;18121:6;18118:1;18114:14;18107:5;18103:26;18099:35;18157:5;18180:1;18201;18211:828;18227:6;18222:3;18219:15;18211:828;;;18296:16;;;-1:-1:-1;;18292:30:74;18280:43;;18362:20;;18437:14;18433:26;;;-1:-1:-1;;18429:40:74;18405:65;;18395:93;;18484:1;18481;18474:12;18395:93;18516:30;;18569:4;18601:21;;18635:33;18601:21;18635:33;:::i;:::-;-1:-1:-1;;;;;18694:33:74;18681:47;;18775:57;18815:16;;;18819:7;18775:57;:::i;:::-;18741:91;;18867:2;18862;18856:4;18852:13;18845:25;18891:68;18955:2;18949:4;18945:13;18931:12;18917;18891:68;:::i;:::-;19017:12;;;;18883:76;-1:-1:-1;;;18982:15:74;;;;-1:-1:-1;18253:1:74;18244:11;18211:828;;;-1:-1:-1;19055:4:74;;17876:1189;-1:-1:-1;;;;;;;;17876:1189:74:o;19070:465::-;19123:3;19161:5;19155:12;19188:6;19183:3;19176:19;19214:4;19243;19238:3;19234:14;19227:21;;19282:4;19275:5;19271:16;19305:1;19315:195;19329:6;19326:1;19323:13;19315:195;;;19394:13;;-1:-1:-1;;;;;19390:39:74;19378:52;;19450:12;;;;19485:15;;;;19426:1;19344:9;19315:195;;;-1:-1:-1;19526:3:74;;19070:465;-1:-1:-1;;;;;19070:465:74:o;19540:385::-;19660:1;19656;19651:3;19647:11;19643:19;19635:5;19629:12;19625:38;19620:3;19613:51;19595:3;19710:4;19703:5;19699:16;19693:23;19748:4;19741;19736:3;19732:14;19725:28;19774:58;19826:4;19821:3;19817:14;19803:12;19774:58;:::i;:::-;19885:4;19874:16;;;19868:23;19893:4;19864:34;19848:14;;;;19841:58;;;;-1:-1:-1;19762:70:74;19540:385;-1:-1:-1;19540:385:74:o;19930:1480::-;20701:3;20690:9;20683:22;20664:4;20728:67;20790:3;20779:9;20775:19;20767:6;20728:67;:::i;:::-;20843:9;20835:6;20831:22;20826:2;20815:9;20811:18;20804:50;20877:80;20950:6;20942;20934;20877:80;:::i;:::-;20863:94;;21005:9;20997:6;20993:22;20988:2;20977:9;20973:18;20966:50;21039:80;21112:6;21104;21096;21039:80;:::i;:::-;21025:94;;21167:9;21159:6;21155:22;21150:2;21139:9;21135:18;21128:50;21201:80;21274:6;21266;21258;21201:80;:::i;:::-;21187:94;;21330:9;21322:6;21318:22;21312:3;21301:9;21297:19;21290:51;21358:46;21397:6;21389;21358:46;:::i;:::-;21350:54;19930:1480;-1:-1:-1;;;;;;;;;;;19930:1480:74:o;21415:521::-;21492:4;21498:6;21558:11;21545:25;21652:2;21648:7;21637:8;21621:14;21617:29;21613:43;21593:18;21589:68;21579:96;;21671:1;21668;21661:12;21579:96;21698:33;;21750:20;;;-1:-1:-1;;;;;;21782:30:74;;21779:50;;;21825:1;21822;21815:12;21779:50;21858:4;21846:17;;-1:-1:-1;21889:14:74;21885:27;;;21875:38;;21872:58;;;21926:1;21923;21916:12;21941:331;22046:9;22057;22099:8;22087:10;22084:24;22081:44;;;22121:1;22118;22111:12;22081:44;22150:6;22140:8;22137:20;22134:40;;;22170:1;22167;22160:12;22134:40;-1:-1:-1;;22196:23:74;;;22241:25;;;;;-1:-1:-1;21941:331:74:o;22277:323::-;-1:-1:-1;;;;;;22397:19:74;;22473:11;;;;22504:1;22496:10;;22493:101;;;22581:2;22575;22568:3;22565:1;22561:11;22558:1;22554:19;22550:28;22546:2;22542:37;22538:46;22529:55;;22493:101;;;22277:323;;;;:::o;22605:329::-;22842:2;22831:9;22824:21;22805:4;22862:66;22924:2;22913:9;22909:18;22901:6;22862:66;:::i;22939:428::-;23096:3;23134:6;23128:13;23150:66;23209:6;23204:3;23197:4;23189:6;23185:17;23150:66;:::i;:::-;23285:2;23281:15;;;;-1:-1:-1;;;;;;23277:53:74;23238:16;;;;23263:68;;;23358:2;23347:14;;22939:428;-1:-1:-1;;22939:428:74:o;23372:287::-;23501:3;23539:6;23533:13;23555:66;23614:6;23609:3;23602:4;23594:6;23590:17;23555:66;:::i;:::-;23637:16;;;;;23372:287;-1:-1:-1;;23372:287:74:o;23664:127::-;23725:10;23720:3;23716:20;23713:1;23706:31;23756:4;23753:1;23746:15;23780:4;23777:1;23770:15;24297:1370;24368:3;24396:6;24411:50;24457:3;24430:25;24449:5;24430:25;:::i;:::-;-1:-1:-1;;;;;306:31:74;294:44;;240:104;24411:50;24517:4;24510:5;24506:16;24493:30;24486:4;24481:3;24477:14;24470:54;24567:55;24616:4;24609:5;24605:16;24598:5;24567:55;:::i;:::-;24654:2;24647:4;24642:3;24638:14;24631:26;24678:67;24741:2;24736:3;24732:12;24718;24704;24678:67;:::i;:::-;24666:79;;;;24792:55;24841:4;24834:5;24830:16;24823:5;24792:55;:::i;:::-;24889:3;24883:4;24879:14;24872:4;24867:3;24863:14;24856:38;24917:63;24975:4;24959:14;24943;24917:63;:::i;:::-;24903:77;;;;25036:4;25029:5;25025:16;25012:30;25005:4;25000:3;24996:14;24989:54;25099:4;25092:5;25088:16;25075:30;25068:4;25063:3;25059:14;25052:54;25162:4;25155:5;25151:16;25138:30;25131:4;25126:3;25122:14;25115:54;25216:55;25265:4;25258:5;25254:16;25247:5;25216:55;:::i;:::-;25315:3;25307:6;25303:16;25296:4;25291:3;25287:14;25280:40;25343:65;25401:6;25385:14;25369;25343:65;:::i;:::-;25329:79;;;;25427:6;25480:53;25529:2;25522:5;25518:14;25511:5;25480:53;:::i;:::-;25575:3;25567:6;25563:16;25558:2;25553:3;25549:12;25542:38;25596:65;25654:6;25638:14;25622;25596:65;:::i;25672:374::-;25903:2;25892:9;25885:21;25866:4;25923:74;25993:2;25982:9;25978:18;25970:6;25923:74;:::i;:::-;25915:82;;26033:6;26028:2;26017:9;26013:18;26006:34;25672:374;;;;;:::o;26051:184::-;26121:6;26174:2;26162:9;26153:7;26149:23;26145:32;26142:52;;;26190:1;26187;26180:12;26142:52;-1:-1:-1;26213:16:74;;26051:184;-1:-1:-1;26051:184:74:o;26240:271::-;26423:6;26415;26410:3;26397:33;26379:3;26449:16;;26474:13;;;26449:16;26240:271;-1:-1:-1;26240:271:74:o;26516:327::-;-1:-1:-1;;;;;;26636:19:74;;26716:11;;;;26747:1;26739:10;;26736:101;;;26808:1;26804:11;;;;26801:1;26797:19;26793:28;;;26785:37;26781:46;;;;26516:327;-1:-1:-1;;26516:327:74:o;26848:247::-;26907:6;26960:2;26948:9;26939:7;26935:23;26931:32;26928:52;;;26976:1;26973;26966:12;26928:52;27015:9;27002:23;27034:31;27059:5;27034:31;:::i;27778:383::-;27935:3;27973:6;27967:13;27989:66;28048:6;28043:3;28036:4;28028:6;28024:17;27989:66;:::i;:::-;28077:16;;;;28102:21;;;-1:-1:-1;28150:4:74;28139:16;;27778:383;-1:-1:-1;27778:383:74:o;28612:1066::-;29067:4;29113:1;29109;29104:3;29100:11;29096:19;29154:2;29146:6;29142:15;29131:9;29124:34;29194:3;29189:2;29178:9;29174:18;29167:31;29221:57;29273:3;29262:9;29258:19;29250:6;29221:57;:::i;:::-;29314:6;29309:2;29298:9;29294:18;29287:34;29369:2;29361:6;29357:15;29352:2;29341:9;29337:18;29330:43;29422:9;29414:6;29410:22;29404:3;29393:9;29389:19;29382:51;29456:32;29481:6;29473;29456:32;:::i;:::-;29442:46;;29537:2;29529:6;29525:15;29519:3;29508:9;29504:19;29497:44;29590:9;29582:6;29578:22;29572:3;29561:9;29557:19;29550:51;29618:54;29665:6;29657;29618:54;:::i;29683:1518::-;30466:3;30455:9;30448:22;30429:4;30493:93;30581:3;30570:9;30566:19;30558:6;30550;30493:93;:::i;:::-;30634:9;30626:6;30622:22;30617:2;30606:9;30602:18;30595:50;30668:80;30741:6;30733;30725;30668:80;:::i;:::-;30654:94;;30796:9;30788:6;30784:22;30779:2;30768:9;30764:18;30757:50;30830:80;30903:6;30895;30887;30830:80;:::i;:::-;30816:94;;30958:9;30950:6;30946:22;30941:2;30930:9;30926:18;30919:50;30992:80;31065:6;31057;31049;30992:80;:::i;:::-;30978:94;;31121:9;31113:6;31109:22;31103:3;31092:9;31088:19;31081:51;31149:46;31188:6;31180;31149:46;:::i;:::-;31141:54;29683:1518;-1:-1:-1;;;;;;;;;;;;29683:1518:74:o;31206:545::-;31299:4;31305:6;31365:11;31352:25;31459:2;31455:7;31444:8;31428:14;31424:29;31420:43;31400:18;31396:68;31386:96;;31478:1;31475;31468:12;31386:96;31505:33;;31557:20;;;-1:-1:-1;;;;;;31589:30:74;;31586:50;;;31632:1;31629;31622:12;31586:50;31665:4;31653:17;;-1:-1:-1;31716:1:74;31712:14;;;31696;31692:35;31682:46;;31679:66;;;31741:1;31738;31731:12;32027:1393;32456:3;32509:21;;;32482:18;;32565:22;;;32427:4;32618:3;32603:19;;32645:6;32427:4;32679:304;32693:6;32690:1;32687:13;32679:304;;;32768:6;32755:20;32788:31;32813:5;32788:31;:::i;:::-;-1:-1:-1;;;;;32844:31:74;32832:44;;32899:4;32923:12;;;;32958:15;;;;;32872:1;32708:9;32679:304;;;32683:3;;33021:6;33014:4;33003:9;32999:20;32992:36;33037:46;33079:2;33068:9;33064:18;33056:6;-1:-1:-1;;;;;306:31:74;294:44;;240:104;33037:46;33128:9;33123:3;33119:19;33114:2;33103:9;33099:18;33092:47;33156:46;33198:3;33190:6;33182;33156:46;:::i;:::-;33148:54;;;33211:47;33253:3;33242:9;33238:19;33230:6;-1:-1:-1;;;;;306:31:74;294:44;;240:104;33211:47;-1:-1:-1;;;;;306:31:74;;33309:3;33294:19;;294:44;33351:6;33345:3;33334:9;33330:19;33323:35;33367:47;33409:3;33398:9;33394:19;33386:6;-1:-1:-1;;;;;306:31:74;294:44;;240:104;33425:360;33636:6;33628;33623:3;33610:33;33706:2;33702:15;;;;-1:-1:-1;;;;;;33698:53:74;33662:16;;33687:65;;;33776:2;33768:11;;33425:360;-1:-1:-1;33425:360:74:o;34156:400::-;34387:2;34376:9;34369:21;34350:4;34407:74;34477:2;34466:9;34462:18;34454:6;34407:74;:::i;:::-;34399:82;;34546:1;34542;34537:3;34533:11;34529:19;34521:6;34517:32;34512:2;34501:9;34497:18;34490:60;34156:400;;;;;:::o;34561:441::-;34614:5;34667:3;34660:4;34652:6;34648:17;34644:27;34634:55;;34685:1;34682;34675:12;34634:55;34714:6;34708:13;34745:48;34761:31;34789:2;34761:31;:::i;34745:48::-;34818:2;34809:7;34802:19;34864:3;34857:4;34852:2;34844:6;34840:15;34836:26;34833:35;34830:55;;;34881:1;34878;34871:12;34830:55;34894:77;34968:2;34961:4;34952:7;34948:18;34941:4;34933:6;34929:17;34894:77;:::i;:::-;34989:7;34561:441;-1:-1:-1;;;;34561:441:74:o;35007:171::-;35085:13;;35138:14;35127:26;;35117:37;;35107:65;;35168:1;35165;35158:12;35183:725;35296:6;35304;35312;35320;35373:3;35361:9;35352:7;35348:23;35344:33;35341:53;;;35390:1;35387;35380:12;35341:53;35423:9;35417:16;-1:-1:-1;;;;;35493:2:74;35485:6;35482:14;35479:34;;;35509:1;35506;35499:12;35479:34;35532:60;35584:7;35575:6;35564:9;35560:22;35532:60;:::i;:::-;35522:70;;35611:48;35655:2;35644:9;35640:18;35611:48;:::i;:::-;35601:58;;35678:48;35722:2;35711:9;35707:18;35678:48;:::i;:::-;35668:58;;35772:2;35761:9;35757:18;35751:25;35735:41;;35801:2;35791:8;35788:16;35785:36;;;35817:1;35814;35807:12;35785:36;;35840:62;35894:7;35883:8;35872:9;35868:24;35840:62;:::i;:::-;35830:72;;;35183:725;;;;;;;:::o;35913:127::-;35974:10;35969:3;35965:20;35962:1;35955:31;36005:4;36002:1;35995:15;36029:4;36026:1;36019:15;36045:135;36084:3;36105:17;;;36102:43;;36125:18;;:::i;:::-;-1:-1:-1;36172:1:74;36161:13;;36045:135::o;36185:168::-;36258:9;;;36289;;36306:15;;;36300:22;;36286:37;36276:71;;36327:18;;:::i;36698:125::-;36763:9;;;36784:10;;;36781:36;;;36797:18;;:::i;37484:288::-;37659:6;37648:9;37641:25;37702:2;37697;37686:9;37682:18;37675:30;37622:4;37722:44;37762:2;37751:9;37747:18;37739:6;37722:44;:::i;37777:290::-;37846:6;37899:2;37887:9;37878:7;37874:23;37870:32;37867:52;;;37915:1;37912;37905:12;37867:52;37941:16;;-1:-1:-1;;;;;;37986:32:74;;37976:43;;37966:71;;38033:1;38030;38023:12;38072:151;38162:4;38155:12;;;38141;;;38137:31;;38180:14;;38177:40;;;38197:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "43194": [
        { "start": 246, "length": 32 },
        { "start": 1385, "length": 32 },
        { "start": 2451, "length": 32 },
        { "start": 4368, "length": 32 }
      ],
      "43196": [
        { "start": 426, "length": 32 },
        { "start": 1470, "length": 32 },
        { "start": 4263, "length": 32 },
        { "start": 5098, "length": 32 }
      ],
      "43199": [
        { "start": 345, "length": 32 },
        { "start": 1168, "length": 32 },
        { "start": 4038, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "REGISTRY()": "06433b1b",
    "SUPPORTED_ENTRYPOINT()": "137e051e",
    "accountId()": "9cfd7cff",
    "addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": "d78343d9",
    "domainSeparator()": "f698da25",
    "getInitHash()": "3c9de1b8",
    "getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)": "55d559f4",
    "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "928107f9",
    "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": "15cca638",
    "preValidationSetup(bytes32,address,bytes)": "4fff40e1",
    "predictSafeAddress(address,address,bytes,bytes32,bytes)": "663c87d8",
    "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "d9ed0e8f",
    "supportsExecutionMode(bytes32)": "d03c7914",
    "supportsModule(uint256)": "f2dc691d",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSetup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUserOperationData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyProxy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreValidationSetupFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Safe7579LaunchpadAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"contractSignature\",\"type\":\"bytes\"}],\"name\":\"WrongContractSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractSignatureLen\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signaturesLen\",\"type\":\"uint256\"}],\"name\":\"WrongContractSignatureFormat\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTRY\",\"outputs\":[{\"internalType\":\"contract IERC7484\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPPORTED_ENTRYPOINT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"addSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"}],\"name\":\"getSafeOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"operationData\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"initSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"initHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preInit\",\"type\":\"bytes\"}],\"name\":\"preValidationSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safeProxyFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"factoryInitializer\",\"type\":\"bytes\"}],\"name\":\"predictSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"safeProxy\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"initData\",\"type\":\"tuple\"}],\"name\":\"setupSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ModeCode\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"rhinestone | zeroknots.eth\",\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account the accountId should be structured like so:        \\\"vendorname.accountname.semver\\\"\"}},\"getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)\":{\"details\":\"Decodes an ERC-4337 user operation into a Safe operation.\",\"params\":{\"userOp\":\"The ERC-4337 user operation.\"},\"returns\":{\"operationData\":\"Encoded EIP-712 Safe operation data bytes used for signature verification.\",\"signatures\":\"The Safe owner signatures extracted from the user operation.\",\"validAfter\":\"The timestamp the user operation is valid from.\",\"validUntil\":\"The timestamp the user operation is valid until.\"}},\"preValidationSetup(bytes32,address,bytes)\":{\"params\":{\"initHash\":\"will be calculated offchain using this.hash(InitData)\",\"preInit\":\"optional parameter for a delegatecall\",\"to\":\"optional parameter for a delegatecall\"}},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"details\":\"factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"params\":{\"initData\":\"initData to initialize the Safe and Safe7579 Adapter\"}},\"supportsExecutionMode(bytes32)\":{\"params\":{\"encodedMode\":\"the encoded mode\"}},\"supportsModule(uint256)\":{\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"amount of gas that has to be paid\",\"userOp\":\"EntryPoint v0.7 userOp.\",\"userOpHash\":\"hash of userOp\"},\"returns\":{\"validationData\":\"4337 packed validation data returned by the validator module\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function allows existing safe accounts to add the Safe7579 adapter to their account\"},\"hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"Create unique InitData hash. Using all params but excluding data.callData from hash\"},\"initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function.\"},\"preValidationSetup(bytes32,address,bytes)\":{\"notice\":\"SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage\"},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"notice\":\"Helper function that can be used offchain to predict the counterfactual Safe address.\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable.\"},\"supportsExecutionMode(bytes32)\":{\"notice\":\"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)\"},\"supportsModule(uint256)\":{\"notice\":\"Function to check if the account supports installation of a certain module type Id\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required.\"}},\"notice\":\"Launchpad to deploy a Safe account and connect the Safe7579 adapter. Check Readme.md for more information. Special thanks to [nlordell (Safe)](https://github.com/nlordell), who came up with [this technique](https://github.com/safe-global/safe-modules/pull/184)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Safe7579Launchpad.sol\":\"Safe7579Launchpad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":safe-singleton-deployer/=node_modules/safe-singleton-deployer/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@rhinestone/checknsignatures/src/CheckNSignatures.sol\":{\"keccak256\":\"0x8392bfc019b80519960685df058636a57011b09925d7a351ae3c63aad40cda73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfafd74f1f0e61b9442436e807529600696eb38559c35b5c10a213bdbf6e2363\",\"dweb:/ipfs/QmXFG4cyBJeZmyENTwGc9xcygCg9qK3SHsN3z6kvSPbnHm\"]},\"node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"node_modules/erc7579/src/interfaces/IERC7579Module.sol\":{\"keccak256\":\"0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5\",\"dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC\"]},\"node_modules/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]},\"node_modules/solady/src/utils/LibSort.sol\":{\"keccak256\":\"0x39ea0fe7c9f2138c890e37df2adbe83e222deda7271e2717f98fa42556ab93ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdeea46531d4e8ccbaa1e4ed33e41b3a3f4c45fc76f54d06f4d4d213cb1d231\",\"dweb:/ipfs/QmckdgpGYChN5YC5AjK2FLXre225nvTixQhDQ8aewrdgMQ\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b\",\"dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3\"]},\"src/ISafe7579.sol\":{\"keccak256\":\"0x68b257c2033b7eee3d99edb15fb2be03a82e8a3f7cd250a584c5e98aff86ca8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5e8f686ddc576f82f9980038e79f9b2768df246fbea928dc6a05068bb9eca98\",\"dweb:/ipfs/QmbbU5EiHJVkzyPgAMj5HfoX6fEuFYcq1SnsZGjHgJU8X9\"]},\"src/Safe7579Launchpad.sol\":{\"keccak256\":\"0xe92c16b1da189f17e6578034b6b6ddb7a9a970378ac028c12d7dc614f90707bf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://87cae95ead2e9c2b1015310c0e0ffb741821736ac5dfb151df1cc96a44d4ff2e\",\"dweb:/ipfs/QmVRJePNMv3ZH9kxg7kSwz7NAuxDjt99tT6BcnG99YTNbJ\"]},\"src/core/SafeOp.sol\":{\"keccak256\":\"0xb6473e02037d90a434fc5ea0717d5e40e5d7da9a490d21772e2942d90e32142e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4ce5dc42ad8033dfa9202b09507818ddae2500b58a491067a73ff0a854e36e04\",\"dweb:/ipfs/QmbXe7jzBmohrpw4SP69m38DTnD4CMPh4LQrErUWLHk8LQ\"]},\"src/core/SupportViewer.sol\":{\"keccak256\":\"0x214e94440a962e25ea949099c508d40464e43630373e76b9836d56c2b1733faf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://afba234e2d09d13cb65ad7d153f0c030f2950a882908e518ee94cbd09d0e1ccd\",\"dweb:/ipfs/QmTvfGKT8EhLJQTJSLow8YGposfdeyhntsNG8C1aRfY3NW\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c\",\"dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F\"]},\"src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d\",\"dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe\"]},\"src/interfaces/ISafe.sol\":{\"keccak256\":\"0x1e8b6e12f66c5ea5609ea89048e9985bc921c69fdfbbf54315c40c64dc5f9a6f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dab4c6c2fdb2418c41e7acce370b9be26b4d66f9654d4f04b6aacdae1aa73457\",\"dweb:/ipfs/QmTbkzmhvMHwhLMpDBEYFscrkAkfEtnkbhGYVVMkVP7Qx4\"]},\"src/interfaces/ISafeOp.sol\":{\"keccak256\":\"0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2\",\"dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc\"]},\"src/lib/ModeLib.sol\":{\"keccak256\":\"0x110ff117c12644827ba62776ef47e3936ee6b233037710907c841c3c7c96b05c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed405d749d1bed879b6c02cc4a4dac096481ffa7348cf9cc91889ec5ee6b61f0\",\"dweb:/ipfs/QmNPySGT6ZLaZBJEnmCDUxEjiMpBx2hByhUW2dwtkr7Pwc\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.25+commit.b61c2a91" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IERC7484",
              "name": "registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "InvalidEntryPoint" },
        { "inputs": [], "type": "error", "name": "InvalidInitHash" },
        { "inputs": [], "type": "error", "name": "InvalidSetup" },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "InvalidUserOperationData" },
        { "inputs": [], "type": "error", "name": "OnlyDelegatecall" },
        { "inputs": [], "type": "error", "name": "OnlyProxy" },
        { "inputs": [], "type": "error", "name": "PreValidationSetupFailed" },
        {
          "inputs": [],
          "type": "error",
          "name": "Safe7579LaunchpadAlreadyInitialized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "contractSignature",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "WrongContractSignature"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "s", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "contractSignatureLen",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signaturesLen",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WrongContractSignatureFormat"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInstalled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleUninstalled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REGISTRY",
          "outputs": [
            {
              "internalType": "contract IERC7484",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SUPPORTED_ENTRYPOINT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "accountId",
          "outputs": [
            {
              "internalType": "string",
              "name": "accountImplementationId",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe7579",
              "type": "address"
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "validators",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "executors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "fallbacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "hooks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            { "internalType": "uint8", "name": "threshold", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSafe7579"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInitHash",
          "outputs": [
            { "internalType": "bytes32", "name": "value", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafeOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "operationData",
              "type": "bytes"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            { "internalType": "bytes", "name": "signatures", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe7579",
              "type": "address"
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "executors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "fallbacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "hooks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            { "internalType": "uint8", "name": "threshold", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initSafe7579"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "initHash",
              "type": "bytes32"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "bytes", "name": "preInit", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "preValidationSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "singleton",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "safeProxyFactory",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "creationCode",
              "type": "bytes"
            },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "bytes",
              "name": "factoryInitializer",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "predictSafeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "safeProxy",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "initData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupSafe"
        },
        {
          "inputs": [
            {
              "internalType": "ModeCode",
              "name": "encodedMode",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsExecutionMode",
          "outputs": [
            { "internalType": "bool", "name": "supported", "type": "bool" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsModule",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accountId()": {
            "details": "Returns the account id of the smart account",
            "returns": {
              "accountImplementationId": "the account id of the smart account the accountId should be structured like so:        \"vendorname.accountname.semver\""
            }
          },
          "getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)": {
            "details": "Decodes an ERC-4337 user operation into a Safe operation.",
            "params": { "userOp": "The ERC-4337 user operation." },
            "returns": {
              "operationData": "Encoded EIP-712 Safe operation data bytes used for signature verification.",
              "signatures": "The Safe owner signatures extracted from the user operation.",
              "validAfter": "The timestamp the user operation is valid from.",
              "validUntil": "The timestamp the user operation is valid until."
            }
          },
          "preValidationSetup(bytes32,address,bytes)": {
            "params": {
              "initHash": "will be calculated offchain using this.hash(InitData)",
              "preInit": "optional parameter for a delegatecall",
              "to": "optional parameter for a delegatecall"
            }
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "details": "factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));"
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "params": {
              "initData": "initData to initialize the Safe and Safe7579 Adapter"
            }
          },
          "supportsExecutionMode(bytes32)": {
            "params": { "encodedMode": "the encoded mode" }
          },
          "supportsModule(uint256)": {
            "params": {
              "moduleTypeId": "the module type ID according the ERC-7579 spec"
            }
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "params": {
              "missingAccountFunds": "amount of gas that has to be paid",
              "userOp": "EntryPoint v0.7 userOp.",
              "userOpHash": "hash of userOp"
            },
            "returns": {
              "validationData": "4337 packed validation data returned by the validator module"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": {
            "notice": "This function allows existing safe accounts to add the Safe7579 adapter to their account"
          },
          "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "Create unique InitData hash. Using all params but excluding data.callData from hash"
          },
          "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": {
            "notice": "This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function."
          },
          "preValidationSetup(bytes32,address,bytes)": {
            "notice": "SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage"
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "notice": "Helper function that can be used offchain to predict the counterfactual Safe address."
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable."
          },
          "supportsExecutionMode(bytes32)": {
            "notice": "Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)"
          },
          "supportsModule(uint256)": {
            "notice": "Function to check if the account supports installation of a certain module type Id"
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC4337/=node_modules/@ERC4337/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/math/=node_modules/@prb/math/src/",
        "@rhinestone/=node_modules/@rhinestone/",
        "@safe-global/=node_modules/@safe-global/",
        "account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "erc7579/=node_modules/erc7579/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "module-bases/=node_modules/@rhinestone/module-bases/src/",
        "modulekit/=node_modules/@rhinestone/modulekit/src/",
        "safe-singleton-deployer/=node_modules/safe-singleton-deployer/src/",
        "sentinellist/=node_modules/@rhinestone/sentinellist/src/",
        "solady/=node_modules/solady/src/",
        "solarray/=node_modules/solarray/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Safe7579Launchpad.sol": "Safe7579Launchpad" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@rhinestone/checknsignatures/src/CheckNSignatures.sol": {
        "keccak256": "0x8392bfc019b80519960685df058636a57011b09925d7a351ae3c63aad40cda73",
        "urls": [
          "bzz-raw://cfafd74f1f0e61b9442436e807529600696eb38559c35b5c10a213bdbf6e2363",
          "dweb:/ipfs/QmXFG4cyBJeZmyENTwGc9xcygCg9qK3SHsN3z6kvSPbnHm"
        ],
        "license": "MIT"
      },
      "node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/erc7579/src/interfaces/IERC7579Module.sol": {
        "keccak256": "0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604",
        "urls": [
          "bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5",
          "dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/ECDSA.sol": {
        "keccak256": "0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4",
        "urls": [
          "bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc",
          "dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/LibSort.sol": {
        "keccak256": "0x39ea0fe7c9f2138c890e37df2adbe83e222deda7271e2717f98fa42556ab93ce",
        "urls": [
          "bzz-raw://ebdeea46531d4e8ccbaa1e4ed33e41b3a3f4c45fc76f54d06f4d4d213cb1d231",
          "dweb:/ipfs/QmckdgpGYChN5YC5AjK2FLXre225nvTixQhDQ8aewrdgMQ"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d",
        "urls": [
          "bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b",
          "dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3"
        ],
        "license": "GPL-3.0"
      },
      "src/ISafe7579.sol": {
        "keccak256": "0x68b257c2033b7eee3d99edb15fb2be03a82e8a3f7cd250a584c5e98aff86ca8b",
        "urls": [
          "bzz-raw://c5e8f686ddc576f82f9980038e79f9b2768df246fbea928dc6a05068bb9eca98",
          "dweb:/ipfs/QmbbU5EiHJVkzyPgAMj5HfoX6fEuFYcq1SnsZGjHgJU8X9"
        ],
        "license": "MIT"
      },
      "src/Safe7579Launchpad.sol": {
        "keccak256": "0xe92c16b1da189f17e6578034b6b6ddb7a9a970378ac028c12d7dc614f90707bf",
        "urls": [
          "bzz-raw://87cae95ead2e9c2b1015310c0e0ffb741821736ac5dfb151df1cc96a44d4ff2e",
          "dweb:/ipfs/QmVRJePNMv3ZH9kxg7kSwz7NAuxDjt99tT6BcnG99YTNbJ"
        ],
        "license": "GPL-3.0"
      },
      "src/core/SafeOp.sol": {
        "keccak256": "0xb6473e02037d90a434fc5ea0717d5e40e5d7da9a490d21772e2942d90e32142e",
        "urls": [
          "bzz-raw://4ce5dc42ad8033dfa9202b09507818ddae2500b58a491067a73ff0a854e36e04",
          "dweb:/ipfs/QmbXe7jzBmohrpw4SP69m38DTnD4CMPh4LQrErUWLHk8LQ"
        ],
        "license": "GPL-3.0"
      },
      "src/core/SupportViewer.sol": {
        "keccak256": "0x214e94440a962e25ea949099c508d40464e43630373e76b9836d56c2b1733faf",
        "urls": [
          "bzz-raw://afba234e2d09d13cb65ad7d153f0c030f2950a882908e518ee94cbd09d0e1ccd",
          "dweb:/ipfs/QmTvfGKT8EhLJQTJSLow8YGposfdeyhntsNG8C1aRfY3NW"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IERC7484.sol": {
        "keccak256": "0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff",
        "urls": [
          "bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c",
          "dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC7579Account.sol": {
        "keccak256": "0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d",
        "urls": [
          "bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d",
          "dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISafe.sol": {
        "keccak256": "0x1e8b6e12f66c5ea5609ea89048e9985bc921c69fdfbbf54315c40c64dc5f9a6f",
        "urls": [
          "bzz-raw://dab4c6c2fdb2418c41e7acce370b9be26b4d66f9654d4f04b6aacdae1aa73457",
          "dweb:/ipfs/QmTbkzmhvMHwhLMpDBEYFscrkAkfEtnkbhGYVVMkVP7Qx4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/interfaces/ISafeOp.sol": {
        "keccak256": "0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa",
        "urls": [
          "bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2",
          "dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc"
        ],
        "license": "MIT"
      },
      "src/lib/ModeLib.sol": {
        "keccak256": "0x110ff117c12644827ba62776ef47e3936ee6b233037710907c841c3c7c96b05c",
        "urls": [
          "bzz-raw://ed405d749d1bed879b6c02cc4a4dac096481ffa7348cf9cc91889ec5ee6b61f0",
          "dweb:/ipfs/QmNPySGT6ZLaZBJEnmCDUxEjiMpBx2hByhUW2dwtkr7Pwc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 56
}

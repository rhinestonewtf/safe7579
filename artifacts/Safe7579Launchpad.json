{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "entryPoint", "type": "address", "internalType": "address" },
        {
          "name": "registry",
          "type": "address",
          "internalType": "contract IERC7484"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "REGISTRY",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC7484" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SUPPORTED_ENTRYPOINT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "accountId",
      "inputs": [],
      "outputs": [
        {
          "name": "accountImplementationId",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "addSafe7579",
      "inputs": [
        { "name": "safe7579", "type": "address", "internalType": "address" },
        {
          "name": "validators",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "executors",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "fallbacks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "hooks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getInitHash",
      "inputs": [],
      "outputs": [
        { "name": "value", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSafeOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "entryPoint", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "operationData", "type": "bytes", "internalType": "bytes" },
        { "name": "validAfter", "type": "uint48", "internalType": "uint48" },
        { "name": "validUntil", "type": "uint48", "internalType": "uint48" },
        { "name": "signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hash",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initSafe7579",
      "inputs": [
        { "name": "safe7579", "type": "address", "internalType": "address" },
        {
          "name": "executors",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "fallbacks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "hooks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "preValidationSetup",
      "inputs": [
        { "name": "initHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "preInit", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "predictSafeAddress",
      "inputs": [
        { "name": "singleton", "type": "address", "internalType": "address" },
        {
          "name": "safeProxyFactory",
          "type": "address",
          "internalType": "address"
        },
        { "name": "creationCode", "type": "bytes", "internalType": "bytes" },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "factoryInitializer",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        { "name": "safeProxy", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "setupSafe",
      "inputs": [
        {
          "name": "initData",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsExecutionMode",
      "inputs": [
        { "name": "encodedMode", "type": "bytes32", "internalType": "ModeCode" }
      ],
      "outputs": [
        { "name": "supported", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "supportsModule",
      "inputs": [
        { "name": "moduleTypeId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "userOpHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ModuleInstalled",
      "inputs": [
        {
          "name": "moduleTypeId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleUninstalled",
      "inputs": [
        {
          "name": "moduleTypeId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "InvalidEntryPoint", "inputs": [] },
    { "type": "error", "name": "InvalidInitHash", "inputs": [] },
    { "type": "error", "name": "InvalidSetup", "inputs": [] },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "InvalidUserOperationData", "inputs": [] },
    { "type": "error", "name": "OnlyDelegatecall", "inputs": [] },
    { "type": "error", "name": "OnlyProxy", "inputs": [] },
    { "type": "error", "name": "PreValidationSetupFailed", "inputs": [] },
    {
      "type": "error",
      "name": "Safe7579LaunchpadAlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WrongContractSignature",
      "inputs": [
        {
          "name": "contractSignature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "WrongContractSignatureFormat",
      "inputs": [
        { "name": "s", "type": "uint256", "internalType": "uint256" },
        {
          "name": "contractSignatureLen",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signaturesLen",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b50604051612dea380380612dea83398101604081905261002f91610089565b6001600160a01b03821661005657604051632039d3c960e01b815260040160405180910390fd5b306080526001600160a01b0391821660a0521660c0526100c3565b6001600160a01b038116811461008657600080fd5b50565b6000806040838503121561009c57600080fd5b82516100a781610071565b60208401519092506100b881610071565b809150509250929050565b60805160a05160c051612cc161012960003960008181610159015281816104900152610fc60152600081816101aa015281816105be015281816110a701526113ea01526000818160f6015281816105690152818161099301526111100152612cc16000f3fe6080604052600436106100ec5760003560e01c8063663c87d81161008a578063d78343d911610059578063d78343d914610348578063d9ed0e8f14610368578063f2dc691d14610388578063f698da25146103a857600080fd5b8063663c87d81461028c578063928107f9146102ac5780639cfd7cff146102cc578063d03c79141461031857600080fd5b806319822f7c116100c657806319822f7c146101ec5780633c9de1b81461021a5780634fff40e11461023c57806355d559f41461025c57600080fd5b806306433b1b14610147578063137e051e1461019857806315cca638146101cc57600080fd5b36610142576000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116911614610140576040516308e3edd160e41b815260040160405180910390fd5b005b600080fd5b34801561015357600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a457600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d857600080fd5b506101406101e7366004611ab5565b6103bd565b3480156101f857600080fd5b5061020c610207366004611bc2565b610563565b60405190815260200161018f565b34801561022657600080fd5b50600080516020612c6c8339815191525461020c565b34801561024857600080fd5b50610140610257366004611c0f565b61098e565b34801561026857600080fd5b5061027c610277366004611c99565b610abe565b60405161018f9493929190611d3a565b34801561029857600080fd5b5061017b6102a7366004611e94565b610d1b565b3480156102b857600080fd5b5061020c6102c7366004612094565b610df5565b3480156102d857600080fd5b50604080518082018252601a81527f7268696e6573746f6e652e73616665373537392e76312e302e300000000000006020820152905161018f91906121c2565b34801561032457600080fd5b506103386103333660046121dc565b610e47565b604051901515815260200161018f565b34801561035457600080fd5b506101406103633660046121f5565b610ef0565b34801561037457600080fd5b50610140610383366004612321565b61109c565b34801561039457600080fd5b506103386103a33660046121dc565b611324565b3480156103b457600080fd5b5061020c611373565b3330146103dd57604051630a57d61d60e01b815260040160405180910390fd5b60405163610b592560e01b81526001600160a01b038b166004820152309063610b592590602401600060405180830381600087803b15801561041e57600080fd5b505af1158015610432573d6000803e3d6000fd5b50506040805160008082526020820190925230935063540fb4f992509061047c565b6040805180820190915260008152606060208201528152602001906001900390816104545790505b508b8b8b8b8b8b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018d8d8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060ff8c166020909101526040516001600160e01b031960e08b901b16815261052598979695949392919060040161255c565b600060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b5050505050505050505050505050565b600080547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146105b3576040516308e3edd160e41b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fc57604051632039d3c960e01b815260040160405180910390fd5b61060960608501856125cf565b61061891600491600091612615565b6106219161263f565b6001600160e01b03191663d9ed0e8f60e01b146106515760405163c3d40f7760e01b815260040160405180910390fd5b600061066060608601866125cf565b61066e916004908290612615565b81019061067b9190612094565b9050610693600080516020612c6c8339815191525490565b61069c82610df5565b146106ba5760405163278328b160e21b815260040160405180910390fd5b600080866020013590508060601c915060008360a001516001600160a01b03168460c001516040516024016106ef9190612677565b60408051601f19818403018152918152602080830180516001600160e01b0316633cd56b0760e11b1790529051610729929133910161268a565b60408051601f1981840301815290829052610743916126bc565b6000604051808303816000865af19150503d8060008114610780576040519150601f19603f3d011682016040523d82523d6000602084013e610785565b606091505b50509050806107a75760405163c3d40f7760e01b815260040160405180910390fd5b60c084015151600090815b818110156108c95760008760c0015182815181106107d2576107d26126d8565b6020026020010151600001519050806001600160a01b0316636d61fe708960c001518481518110610805576108056126d8565b6020026020010151602001516040518263ffffffff1660e01b815260040161082d91906121c2565b600060405180830381600087803b15801561084757600080fd5b505af115801561085b573d6000803e3d6000fd5b505060408051600181526001600160a01b03851660208201527fd21d0b289f126c4b473ea641963e766833c2f13866e4ff480abd787c100ef123935001905060405180910390a1866001600160a01b0316816001600160a01b0316036108c057600193505b506001016107b2565b50811561094857604051639700320360e01b81526001600160a01b038616906397003203906108fe908d908d906004016127ce565b6020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094191906127f0565b965061096f565b6000806000610957898e6113cc565b92509250925061096983158383611542565b99505050505b8715610981576000806000808b335af1505b5050505050509392505050565b6000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146109dd576040516308e3edd160e41b815260040160405180910390fd5b60006109f5600080516020612c6c8339815191525490565b14610a135760405163d4d496e560e01b815260040160405180910390fd5b610a2984600080516020612c6c83398151915255565b6001600160a01b03831615610ab8576000836001600160a01b03168383604051610a54929190612809565b600060405180830381855af49150503d8060008114610a8f576040519150601f19603f3d011682016040523d82523d6000602084013e610a94565b606091505b5050905080610ab657604051631f57fed560e31b815260040160405180910390fd5b505b50505050565b6060600080823682610ad46101008901896125cf565b9092509050610ae7600660008385612615565b610af091612819565b60d01c9450610b03600c60068385612615565b610b0c91612819565b60d01c9350610b1e81600c8185612615565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516101c081019091527fc03dfc11d8b10bf9cf703d558958c8c42777f785d998c62060d85a4f0ef6ea7f815294975095509293505060208084019250610b9a91508a018a61284f565b6001600160a01b0316815260200188602001358152602001888060400190610bc291906125cf565b604051610bd0929190612809565b6040519081900390208152602001610beb60608a018a6125cf565b604051610bf9929190612809565b60405180910390208152602001610c0f8961157a565b6001600160801b03168152602001610c2689611590565b6001600160801b031681526020018860a001358152602001610c47896115a5565b6001600160801b03168152602001610c5e896115b4565b6001600160801b03168152602001610c7960e08a018a6125cf565b604051610c87929190612809565b6040805191829003909120825265ffffffffffff80881660208401528616908201526001600160a01b0388166060909101526101c08120909150601960f81b600160f81b610cd3611373565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529550505092959194509250565b6000818051906020012083604051602001610d40929190918252602082015260400190565b60405160208183030381529060405280519060200120925060ff60f81b858486896001600160a01b0316604051602001610d7b92919061286c565b60405160208183030381529060405280519060200120604051602001610dd394939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b80516020808301516040808501516060860151608087015160a088015160c08901519451600098610e2a98909796910161288e565b604051602081830303815290604052805190602001209050919050565b600081600881901b6001600160f81b03198216600160f81b03610e6d5760019250610ea9565b6001600160f81b03198216610e855760019250610ea9565b6001600160f81b031980831603610e9f5760019250610ea9565b5060009392505050565b828015610ebe57506001600160f81b03198116155b15610eca575050919050565b828015610ee457506001600160f81b03198116600160f81b145b15610e9f575050919050565b60405163610b592560e01b81526001600160a01b038d166004820152309063610b592590602401600060405180830381600087803b158015610f3157600080fd5b505af1158015610f45573d6000803e3d6000fd5b505060405163f08a032360e01b81526001600160a01b038f16600482015230925063f08a03239150602401600060405180830381600087803b158015610f8a57600080fd5b505af1158015610f9e573d6000803e3d6000fd5b50505050306001600160a01b031663540fb4f98c8c8c8c8c8c8c8c60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018e8e8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060ff8d166020909101526040516001600160e01b031960e08c901b16815261105c9998979695949392919060040161290b565b600060405180830381600087803b15801561107657600080fd5b505af115801561108a573d6000803e3d6000fd5b50505050505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110e557604051632039d3c960e01b815260040160405180910390fd5b6110f2602082018261284f565b600080546001600160a01b0319166001600160a01b039283161790557f000000000000000000000000000000000000000000000000000000000000000016611140608083016060840161284f565b6001600160a01b03161461116757604051633007073760e01b815260040160405180910390fd5b6302b994c760e31b61117c60808301836125cf565b61118b91600491600091612615565b6111949161263f565b6001600160e01b031916146111bc57604051633007073760e01b815260040160405180910390fd5b3063b63e800d6111cf6020840184612980565b60408501356111e4608087016060880161284f565b6111f160808801886125cf565b61120160c08a0160a08b0161284f565b60008060006040518b63ffffffff1660e01b815260040161122b9a999897969594939291906129c9565b600060405180830381600087803b15801561124557600080fd5b505af1158015611259573d6000803e3d6000fd5b50506000600080516020612c6c83398151915255506112759050565b60008061128860c0840160a0850161284f565b6001600160a01b031661129e60e08501856125cf565b306040516020016112b193929190612a80565b60408051601f19818403018152908290526112cb916126bc565b6000604051808303816000865af19150503d8060008114611308576040519150601f19603f3d011682016040523d82523d6000602084013e61130d565b606091505b50915091508161131f57805160208201fd5b505050565b60006001820361133657506001919050565b6002820361134657506001919050565b6003820361135657506001919050565b6004820361136657506001919050565b506000919050565b919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152469181019190915230606082015260009060800160405160208183030381529060405280519060200120905090565b60008060006060808660a001516001600160a01b03166355d559f4877f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611426929190612aa1565b600060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261146b9190810190612b2e565b8351602085012060408c01519298509296509294509192509060009061149490839085906115c9565b905061149f816118c1565b60208901516114ad816118c1565b6114b6816118cd565b80516000805b8281101561152e5760006114f28583815181106114db576114db6126d8565b6020026020010151876118d690919063ffffffff16565b5090508015611525578261150581612bcc565b9350508d6040015183106115255760019b5050505050505050505061153b565b506001016114bc565b5060009950505050505050505b9250925092565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561156a57600061156d565b60015b60ff161717949350505050565b600061158a826080013560801c90565b92915050565b60006001600160801b0360808301351661158a565b600060c082013560801c61158a565b60006001600160801b0360c08301351661158a565b606060006115d8836041612be5565b8451909150836001600160401b038111156115f5576115f5611d86565b60405190808252806020026020018201604052801561161e578160200160208202803683370190505b5092508181101561164257604051638baa579f60e01b815260040160405180910390fd5b60005b848110156118b7576000806000806116758a86604102016020810151604082015160609092015160001a92909190565b9250925092508260ff16600003611816579092508290611696896041612be5565b8110156116cc576040516338a245ff60e11b81526004810182905260006024820181905260448201526064015b60405180910390fd5b856116d8826020612bfc565b1115611708576040516338a245ff60e11b81526004810182905260006024820152604481018790526064016116c3565b6020818b018101519087908290611720908590612bfc565b61172a9190612bfc565b111561175a576040516338a245ff60e11b81526004810183905260248101829052604481018890526064016116c3565b60606020838d01019050631626ba7e60e01b6001600160e01b031916866001600160a01b0316631626ba7e8f846040518363ffffffff1660e01b81526004016117a4929190612c0f565b602060405180830381865afa1580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e59190612c28565b6001600160e01b0319161461180f578060405163605d348960e01b81526004016116c391906121c2565b505061187c565b601e8360ff16111561186d576118666118548c6020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b61185f600486612c52565b84846118f9565b935061187c565b6118798b8484846118f9565b93505b8388868151811061188f5761188f6126d8565b6001600160a01b03909216602092830291909101909101525050600190920191506116459050565b5050509392505050565b6118ca81611937565b50565b6118ca8161198c565b6000806118ee84846001600160a01b031660006119d5565b909590945092505050565b60006040518560005260ff85166020528360405282606052602060406080600060015afa5060006060523d6060185191508060405250949350505050565b8051600082528060051b82016020601f198185015b8201838111611984578051828201805182811161196b5750505061194c565b5b818601528301805182811161196c575084015261194c565b505050915250565b60028151106118ca576020810160408201600183510160051b83015b81518351146119bc57602083019250815183525b6020820191508082036119a857505081900360051c9052565b60008060001960018651600087870197505b81830160011c94508460051b8901518701905087811482841117611a2157808811611a165783850191506119e7565b6001850192506119e7565b84151597148716989290930190950295509350505050565b6001600160a01b03811681146118ca57600080fd5b803561136e81611a39565b60008083601f840112611a6b57600080fd5b5081356001600160401b03811115611a8257600080fd5b6020830191508360208260051b8501011115611a9d57600080fd5b9250929050565b803560ff8116811461136e57600080fd5b60008060008060008060008060008060c08b8d031215611ad457600080fd5b611add8b611a4e565b995060208b01356001600160401b03811115611af857600080fd5b611b048d828e01611a59565b909a5098505060408b01356001600160401b03811115611b2357600080fd5b611b2f8d828e01611a59565b90985096505060608b01356001600160401b03811115611b4e57600080fd5b611b5a8d828e01611a59565b90965094505060808b01356001600160401b03811115611b7957600080fd5b611b858d828e01611a59565b9094509250611b98905060a08c01611aa4565b90509295989b9194979a5092959850565b60006101208284031215611bbc57600080fd5b50919050565b600080600060608486031215611bd757600080fd5b83356001600160401b03811115611bed57600080fd5b611bf986828701611ba9565b9660208601359650604090950135949350505050565b60008060008060608587031215611c2557600080fd5b843593506020850135611c3781611a39565b925060408501356001600160401b03811115611c5257600080fd5b8501601f81018713611c6357600080fd5b80356001600160401b03811115611c7957600080fd5b876020828401011115611c8b57600080fd5b949793965060200194505050565b60008060408385031215611cac57600080fd5b82356001600160401b03811115611cc257600080fd5b611cce85828601611ba9565b9250506020830135611cdf81611a39565b809150509250929050565b60005b83811015611d05578181015183820152602001611ced565b50506000910152565b60008151808452611d26816020860160208601611cea565b601f01601f19169290920160200192915050565b608081526000611d4d6080830187611d0e565b65ffffffffffff8616602084015265ffffffffffff851660408401528281036060840152611d7b8185611d0e565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611dbe57611dbe611d86565b60405290565b60405161010081016001600160401b0381118282101715611dbe57611dbe611d86565b604051601f8201601f191681016001600160401b0381118282101715611e0f57611e0f611d86565b604052919050565b60006001600160401b03821115611e3057611e30611d86565b50601f01601f191660200190565b600082601f830112611e4f57600080fd5b8135611e62611e5d82611e17565b611de7565b818152846020838601011115611e7757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611eac57600080fd5b8535611eb781611a39565b94506020860135611ec781611a39565b935060408601356001600160401b03811115611ee257600080fd5b611eee88828901611e3e565b9350506060860135915060808601356001600160401b03811115611f1157600080fd5b611f1d88828901611e3e565b9150509295509295909350565b60006001600160401b03821115611f4357611f43611d86565b5060051b60200190565b600082601f830112611f5e57600080fd5b8135611f6c611e5d82611f2a565b8082825260208201915060208360051b860101925085831115611f8e57600080fd5b602085015b83811015611fb4578035611fa681611a39565b835260209283019201611f93565b5095945050505050565b600082601f830112611fcf57600080fd5b8135611fdd611e5d82611f2a565b8082825260208201915060208360051b860101925085831115611fff57600080fd5b602085015b83811015611fb45780356001600160401b0381111561202257600080fd5b86016040818903601f1901121561203857600080fd5b612040611d9c565b602082013561204e81611a39565b815260408201356001600160401b0381111561206957600080fd5b6120788a602083860101611e3e565b6020830152508085525050602083019250602081019050612004565b6000602082840312156120a657600080fd5b81356001600160401b038111156120bc57600080fd5b820161010081850312156120cf57600080fd5b6120d7611dc4565b6120e082611a4e565b815260208201356001600160401b038111156120fb57600080fd5b61210786828501611f4d565b6020830152506040828101359082015261212360608301611a4e565b606082015260808201356001600160401b0381111561214157600080fd5b61214d86828501611e3e565b60808301525061215f60a08301611a4e565b60a082015260c08201356001600160401b0381111561217d57600080fd5b61218986828501611fbe565b60c08301525060e08201356001600160401b038111156121a857600080fd5b6121b486828501611e3e565b60e083015250949350505050565b6020815260006121d56020830184611d0e565b9392505050565b6000602082840312156121ee57600080fd5b5035919050565b60008060008060008060008060008060008060e08d8f03121561221757600080fd5b6122208d611a4e565b9b506001600160401b0360208e0135111561223a57600080fd5b61224a8e60208f01358f01611a59565b909b5099506001600160401b0360408e0135111561226757600080fd5b6122778e60408f01358f01611a59565b90995097506001600160401b0360608e0135111561229457600080fd5b6122a48e60608f01358f01611a59565b90975095506001600160401b0360808e013511156122c157600080fd5b6122d18e60808f01358f01611a59565b90955093506001600160401b0360a08e013511156122ee57600080fd5b6122fe8e60a08f01358f01611a59565b909350915061230f60c08e01611aa4565b90509295989b509295989b509295989b565b60006020828403121561233357600080fd5b81356001600160401b0381111561234957600080fd5b820161010081850312156121d557600080fd5b600082825180855260208501945060208160051b8301016020850160005b838110156123cc57848303601f19018852815180516001600160a01b031684526020908101516040918501829052906123b590850182611d0e565b6020998a019990945092909201915060010161237a565b50909695505050505050565b6000808335601e198436030181126123ef57600080fd5b83016020810192503590506001600160401b0381111561240e57600080fd5b803603821315611a9d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208501945060208460051b8201018360005b868110156123cc57838303601f19018852813536879003603e1901811261248557600080fd5b8601803561249281611a39565b6001600160a01b031684526124aa60208201826123d8565b9150604060208601526124c160408601838361241d565b60209a8b019a9095509390930192505060010161245f565b600081518084526020840193506020830160005b828110156125145781516001600160a01b03168652602095860195909101906001016124ed565b5093949350505050565b60018060a01b038151168252600060208201516060602085015261254560608501826124d9565b60409384015160ff16949093019390935250919050565b60a08152600061256f60a083018b61235c565b8281036020840152612582818a8c612446565b9050828103604084015261259781888a612446565b905082810360608401526125ac818688612446565b905082810360808401526125c0818561251e565b9b9a5050505050505050505050565b6000808335601e198436030181126125e657600080fd5b8301803591506001600160401b0382111561260057600080fd5b602001915036819003821315611a9d57600080fd5b6000808585111561262557600080fd5b8386111561263257600080fd5b5050820193919092039150565b80356001600160e01b03198116906004841015612670576001600160e01b0319600485900360031b81901b82161691505b5092915050565b6020815260006121d5602083018461235c565b6000835161269c818460208801611cea565b60609390931b6001600160601b0319169190920190815260140192915050565b600082516126ce818460208701611cea565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b612708826126fb83611a4e565b6001600160a01b03169052565b60208181013590830152600061272160408301836123d8565b61012060408601526127386101208601828461241d565b91505061274860608401846123d8565b858303606087015261275b83828461241d565b6080868101359088015260a0808701359088015260c08087013590880152925061278b91505060e08401846123d8565b85830360e087015261279e83828461241d565b925050506127b06101008401846123d8565b8583036101008701526127c483828461241d565b9695505050505050565b6040815260006127e160408301856126ee565b90508260208301529392505050565b60006020828403121561280257600080fd5b5051919050565b8183823760009101908152919050565b80356001600160d01b03198116906006841015612670576001600160d01b031960069490940360031b84901b1690921692915050565b60006020828403121561286157600080fd5b81356121d581611a39565b6000835161287e818460208801611cea565b9190910191825250602001919050565b6001600160a01b038816815260e0602082018190526000906128b2908301896124d9565b604083018890526001600160a01b038716606084015282810360808401526128da8187611d0e565b6001600160a01b03861660a085015283810360c085015290506128fd818561235c565b9a9950505050505050505050565b60a08152600061291f60a083018b8d612446565b8281036020840152612932818a8c612446565b9050828103604084015261294781888a612446565b9050828103606084015261295c818688612446565b90508281036080840152612970818561251e565b9c9b505050505050505050505050565b6000808335601e1984360301811261299757600080fd5b8301803591506001600160401b038211156129b157600080fd5b6020019150600581901b3603821315611a9d57600080fd5b61010080825281018a905260008b6101208301825b8d811015612a0e5782356129f181611a39565b6001600160a01b03168252602092830192909101906001016129de565b508b6020850152612a2a604085018c6001600160a01b03169052565b8381036060850152612a3d818a8c61241d565b92505050612a5660808301876001600160a01b03169052565b6001600160a01b03851660a08301528360c08301526125c060e08301846001600160a01b03169052565b8284823760609190911b6001600160601b0319169101908152601401919050565b604081526000612ab460408301856126ee565b905060018060a01b03831660208301529392505050565b600082601f830112612adc57600080fd5b8151612aea611e5d82611e17565b818152846020838601011115612aff57600080fd5b612b10826020830160208701611cea565b949350505050565b805165ffffffffffff8116811461136e57600080fd5b60008060008060808587031215612b4457600080fd5b84516001600160401b03811115612b5a57600080fd5b612b6687828801612acb565b945050612b7560208601612b18565b9250612b8360408601612b18565b915060608501516001600160401b03811115612b9e57600080fd5b612baa87828801612acb565b91505092959194509250565b634e487b7160e01b600052601160045260246000fd5b600060018201612bde57612bde612bb6565b5060010190565b808202811582820484141761158a5761158a612bb6565b8082018082111561158a5761158a612bb6565b828152604060208201526000612b106040830184611d0e565b600060208284031215612c3a57600080fd5b81516001600160e01b0319811681146121d557600080fd5b60ff828116828216039081111561158a5761158a612bb656fe982e06ee6a56dfc0f1ac189a5d23506361ca0a3ce45a9c7b8d33d65d43746a24a2646970667358221220b8570cdd622e1fbbf9414238ac24ec7629c0bf87595f396efe2bec7415eff9ce64736f6c634300081a0033",
    "sourceMap": "1487:15193:114:-:0;;;2604:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2669:24:114;;2665:56;;2702:19;;-1:-1:-1;;;2702:19:114;;;;;;;;;;;2665:56;2747:4;2732:20;;-1:-1:-1;;;;;2762:33:114;;;;;2805:19;;;1487:15193;;14:131:153;-1:-1:-1;;;;;89:31:153;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:403::-;247:6;255;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;356:9;350:16;375:31;400:5;375:31;:::i;:::-;475:2;460:18;;454:25;425:5;;-1:-1:-1;488:33:153;454:25;488:33;:::i;:::-;540:7;530:17;;;150:403;;;;;:::o;:::-;1487:15193:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ec5760003560e01c8063663c87d81161008a578063d78343d911610059578063d78343d914610348578063d9ed0e8f14610368578063f2dc691d14610388578063f698da25146103a857600080fd5b8063663c87d81461028c578063928107f9146102ac5780639cfd7cff146102cc578063d03c79141461031857600080fd5b806319822f7c116100c657806319822f7c146101ec5780633c9de1b81461021a5780634fff40e11461023c57806355d559f41461025c57600080fd5b806306433b1b14610147578063137e051e1461019857806315cca638146101cc57600080fd5b36610142576000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116911614610140576040516308e3edd160e41b815260040160405180910390fd5b005b600080fd5b34801561015357600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a457600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d857600080fd5b506101406101e7366004611ab5565b6103bd565b3480156101f857600080fd5b5061020c610207366004611bc2565b610563565b60405190815260200161018f565b34801561022657600080fd5b50600080516020612c6c8339815191525461020c565b34801561024857600080fd5b50610140610257366004611c0f565b61098e565b34801561026857600080fd5b5061027c610277366004611c99565b610abe565b60405161018f9493929190611d3a565b34801561029857600080fd5b5061017b6102a7366004611e94565b610d1b565b3480156102b857600080fd5b5061020c6102c7366004612094565b610df5565b3480156102d857600080fd5b50604080518082018252601a81527f7268696e6573746f6e652e73616665373537392e76312e302e300000000000006020820152905161018f91906121c2565b34801561032457600080fd5b506103386103333660046121dc565b610e47565b604051901515815260200161018f565b34801561035457600080fd5b506101406103633660046121f5565b610ef0565b34801561037457600080fd5b50610140610383366004612321565b61109c565b34801561039457600080fd5b506103386103a33660046121dc565b611324565b3480156103b457600080fd5b5061020c611373565b3330146103dd57604051630a57d61d60e01b815260040160405180910390fd5b60405163610b592560e01b81526001600160a01b038b166004820152309063610b592590602401600060405180830381600087803b15801561041e57600080fd5b505af1158015610432573d6000803e3d6000fd5b50506040805160008082526020820190925230935063540fb4f992509061047c565b6040805180820190915260008152606060208201528152602001906001900390816104545790505b508b8b8b8b8b8b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018d8d8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060ff8c166020909101526040516001600160e01b031960e08b901b16815261052598979695949392919060040161255c565b600060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b5050505050505050505050505050565b600080547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146105b3576040516308e3edd160e41b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fc57604051632039d3c960e01b815260040160405180910390fd5b61060960608501856125cf565b61061891600491600091612615565b6106219161263f565b6001600160e01b03191663d9ed0e8f60e01b146106515760405163c3d40f7760e01b815260040160405180910390fd5b600061066060608601866125cf565b61066e916004908290612615565b81019061067b9190612094565b9050610693600080516020612c6c8339815191525490565b61069c82610df5565b146106ba5760405163278328b160e21b815260040160405180910390fd5b600080866020013590508060601c915060008360a001516001600160a01b03168460c001516040516024016106ef9190612677565b60408051601f19818403018152918152602080830180516001600160e01b0316633cd56b0760e11b1790529051610729929133910161268a565b60408051601f1981840301815290829052610743916126bc565b6000604051808303816000865af19150503d8060008114610780576040519150601f19603f3d011682016040523d82523d6000602084013e610785565b606091505b50509050806107a75760405163c3d40f7760e01b815260040160405180910390fd5b60c084015151600090815b818110156108c95760008760c0015182815181106107d2576107d26126d8565b6020026020010151600001519050806001600160a01b0316636d61fe708960c001518481518110610805576108056126d8565b6020026020010151602001516040518263ffffffff1660e01b815260040161082d91906121c2565b600060405180830381600087803b15801561084757600080fd5b505af115801561085b573d6000803e3d6000fd5b505060408051600181526001600160a01b03851660208201527fd21d0b289f126c4b473ea641963e766833c2f13866e4ff480abd787c100ef123935001905060405180910390a1866001600160a01b0316816001600160a01b0316036108c057600193505b506001016107b2565b50811561094857604051639700320360e01b81526001600160a01b038616906397003203906108fe908d908d906004016127ce565b6020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094191906127f0565b965061096f565b6000806000610957898e6113cc565b92509250925061096983158383611542565b99505050505b8715610981576000806000808b335af1505b5050505050509392505050565b6000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146109dd576040516308e3edd160e41b815260040160405180910390fd5b60006109f5600080516020612c6c8339815191525490565b14610a135760405163d4d496e560e01b815260040160405180910390fd5b610a2984600080516020612c6c83398151915255565b6001600160a01b03831615610ab8576000836001600160a01b03168383604051610a54929190612809565b600060405180830381855af49150503d8060008114610a8f576040519150601f19603f3d011682016040523d82523d6000602084013e610a94565b606091505b5050905080610ab657604051631f57fed560e31b815260040160405180910390fd5b505b50505050565b6060600080823682610ad46101008901896125cf565b9092509050610ae7600660008385612615565b610af091612819565b60d01c9450610b03600c60068385612615565b610b0c91612819565b60d01c9350610b1e81600c8185612615565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516101c081019091527fc03dfc11d8b10bf9cf703d558958c8c42777f785d998c62060d85a4f0ef6ea7f815294975095509293505060208084019250610b9a91508a018a61284f565b6001600160a01b0316815260200188602001358152602001888060400190610bc291906125cf565b604051610bd0929190612809565b6040519081900390208152602001610beb60608a018a6125cf565b604051610bf9929190612809565b60405180910390208152602001610c0f8961157a565b6001600160801b03168152602001610c2689611590565b6001600160801b031681526020018860a001358152602001610c47896115a5565b6001600160801b03168152602001610c5e896115b4565b6001600160801b03168152602001610c7960e08a018a6125cf565b604051610c87929190612809565b6040805191829003909120825265ffffffffffff80881660208401528616908201526001600160a01b0388166060909101526101c08120909150601960f81b600160f81b610cd3611373565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529550505092959194509250565b6000818051906020012083604051602001610d40929190918252602082015260400190565b60405160208183030381529060405280519060200120925060ff60f81b858486896001600160a01b0316604051602001610d7b92919061286c565b60405160208183030381529060405280519060200120604051602001610dd394939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b80516020808301516040808501516060860151608087015160a088015160c08901519451600098610e2a98909796910161288e565b604051602081830303815290604052805190602001209050919050565b600081600881901b6001600160f81b03198216600160f81b03610e6d5760019250610ea9565b6001600160f81b03198216610e855760019250610ea9565b6001600160f81b031980831603610e9f5760019250610ea9565b5060009392505050565b828015610ebe57506001600160f81b03198116155b15610eca575050919050565b828015610ee457506001600160f81b03198116600160f81b145b15610e9f575050919050565b60405163610b592560e01b81526001600160a01b038d166004820152309063610b592590602401600060405180830381600087803b158015610f3157600080fd5b505af1158015610f45573d6000803e3d6000fd5b505060405163f08a032360e01b81526001600160a01b038f16600482015230925063f08a03239150602401600060405180830381600087803b158015610f8a57600080fd5b505af1158015610f9e573d6000803e3d6000fd5b50505050306001600160a01b031663540fb4f98c8c8c8c8c8c8c8c60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018e8e8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060ff8d166020909101526040516001600160e01b031960e08c901b16815261105c9998979695949392919060040161290b565b600060405180830381600087803b15801561107657600080fd5b505af115801561108a573d6000803e3d6000fd5b50505050505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110e557604051632039d3c960e01b815260040160405180910390fd5b6110f2602082018261284f565b600080546001600160a01b0319166001600160a01b039283161790557f000000000000000000000000000000000000000000000000000000000000000016611140608083016060840161284f565b6001600160a01b03161461116757604051633007073760e01b815260040160405180910390fd5b6302b994c760e31b61117c60808301836125cf565b61118b91600491600091612615565b6111949161263f565b6001600160e01b031916146111bc57604051633007073760e01b815260040160405180910390fd5b3063b63e800d6111cf6020840184612980565b60408501356111e4608087016060880161284f565b6111f160808801886125cf565b61120160c08a0160a08b0161284f565b60008060006040518b63ffffffff1660e01b815260040161122b9a999897969594939291906129c9565b600060405180830381600087803b15801561124557600080fd5b505af1158015611259573d6000803e3d6000fd5b50506000600080516020612c6c83398151915255506112759050565b60008061128860c0840160a0850161284f565b6001600160a01b031661129e60e08501856125cf565b306040516020016112b193929190612a80565b60408051601f19818403018152908290526112cb916126bc565b6000604051808303816000865af19150503d8060008114611308576040519150601f19603f3d011682016040523d82523d6000602084013e61130d565b606091505b50915091508161131f57805160208201fd5b505050565b60006001820361133657506001919050565b6002820361134657506001919050565b6003820361135657506001919050565b6004820361136657506001919050565b506000919050565b919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152469181019190915230606082015260009060800160405160208183030381529060405280519060200120905090565b60008060006060808660a001516001600160a01b03166355d559f4877f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611426929190612aa1565b600060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261146b9190810190612b2e565b8351602085012060408c01519298509296509294509192509060009061149490839085906115c9565b905061149f816118c1565b60208901516114ad816118c1565b6114b6816118cd565b80516000805b8281101561152e5760006114f28583815181106114db576114db6126d8565b6020026020010151876118d690919063ffffffff16565b5090508015611525578261150581612bcc565b9350508d6040015183106115255760019b5050505050505050505061153b565b506001016114bc565b5060009950505050505050505b9250925092565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561156a57600061156d565b60015b60ff161717949350505050565b600061158a826080013560801c90565b92915050565b60006001600160801b0360808301351661158a565b600060c082013560801c61158a565b60006001600160801b0360c08301351661158a565b606060006115d8836041612be5565b8451909150836001600160401b038111156115f5576115f5611d86565b60405190808252806020026020018201604052801561161e578160200160208202803683370190505b5092508181101561164257604051638baa579f60e01b815260040160405180910390fd5b60005b848110156118b7576000806000806116758a86604102016020810151604082015160609092015160001a92909190565b9250925092508260ff16600003611816579092508290611696896041612be5565b8110156116cc576040516338a245ff60e11b81526004810182905260006024820181905260448201526064015b60405180910390fd5b856116d8826020612bfc565b1115611708576040516338a245ff60e11b81526004810182905260006024820152604481018790526064016116c3565b6020818b018101519087908290611720908590612bfc565b61172a9190612bfc565b111561175a576040516338a245ff60e11b81526004810183905260248101829052604481018890526064016116c3565b60606020838d01019050631626ba7e60e01b6001600160e01b031916866001600160a01b0316631626ba7e8f846040518363ffffffff1660e01b81526004016117a4929190612c0f565b602060405180830381865afa1580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e59190612c28565b6001600160e01b0319161461180f578060405163605d348960e01b81526004016116c391906121c2565b505061187c565b601e8360ff16111561186d576118666118548c6020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b61185f600486612c52565b84846118f9565b935061187c565b6118798b8484846118f9565b93505b8388868151811061188f5761188f6126d8565b6001600160a01b03909216602092830291909101909101525050600190920191506116459050565b5050509392505050565b6118ca81611937565b50565b6118ca8161198c565b6000806118ee84846001600160a01b031660006119d5565b909590945092505050565b60006040518560005260ff85166020528360405282606052602060406080600060015afa5060006060523d6060185191508060405250949350505050565b8051600082528060051b82016020601f198185015b8201838111611984578051828201805182811161196b5750505061194c565b5b818601528301805182811161196c575084015261194c565b505050915250565b60028151106118ca576020810160408201600183510160051b83015b81518351146119bc57602083019250815183525b6020820191508082036119a857505081900360051c9052565b60008060001960018651600087870197505b81830160011c94508460051b8901518701905087811482841117611a2157808811611a165783850191506119e7565b6001850192506119e7565b84151597148716989290930190950295509350505050565b6001600160a01b03811681146118ca57600080fd5b803561136e81611a39565b60008083601f840112611a6b57600080fd5b5081356001600160401b03811115611a8257600080fd5b6020830191508360208260051b8501011115611a9d57600080fd5b9250929050565b803560ff8116811461136e57600080fd5b60008060008060008060008060008060c08b8d031215611ad457600080fd5b611add8b611a4e565b995060208b01356001600160401b03811115611af857600080fd5b611b048d828e01611a59565b909a5098505060408b01356001600160401b03811115611b2357600080fd5b611b2f8d828e01611a59565b90985096505060608b01356001600160401b03811115611b4e57600080fd5b611b5a8d828e01611a59565b90965094505060808b01356001600160401b03811115611b7957600080fd5b611b858d828e01611a59565b9094509250611b98905060a08c01611aa4565b90509295989b9194979a5092959850565b60006101208284031215611bbc57600080fd5b50919050565b600080600060608486031215611bd757600080fd5b83356001600160401b03811115611bed57600080fd5b611bf986828701611ba9565b9660208601359650604090950135949350505050565b60008060008060608587031215611c2557600080fd5b843593506020850135611c3781611a39565b925060408501356001600160401b03811115611c5257600080fd5b8501601f81018713611c6357600080fd5b80356001600160401b03811115611c7957600080fd5b876020828401011115611c8b57600080fd5b949793965060200194505050565b60008060408385031215611cac57600080fd5b82356001600160401b03811115611cc257600080fd5b611cce85828601611ba9565b9250506020830135611cdf81611a39565b809150509250929050565b60005b83811015611d05578181015183820152602001611ced565b50506000910152565b60008151808452611d26816020860160208601611cea565b601f01601f19169290920160200192915050565b608081526000611d4d6080830187611d0e565b65ffffffffffff8616602084015265ffffffffffff851660408401528281036060840152611d7b8185611d0e565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611dbe57611dbe611d86565b60405290565b60405161010081016001600160401b0381118282101715611dbe57611dbe611d86565b604051601f8201601f191681016001600160401b0381118282101715611e0f57611e0f611d86565b604052919050565b60006001600160401b03821115611e3057611e30611d86565b50601f01601f191660200190565b600082601f830112611e4f57600080fd5b8135611e62611e5d82611e17565b611de7565b818152846020838601011115611e7757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611eac57600080fd5b8535611eb781611a39565b94506020860135611ec781611a39565b935060408601356001600160401b03811115611ee257600080fd5b611eee88828901611e3e565b9350506060860135915060808601356001600160401b03811115611f1157600080fd5b611f1d88828901611e3e565b9150509295509295909350565b60006001600160401b03821115611f4357611f43611d86565b5060051b60200190565b600082601f830112611f5e57600080fd5b8135611f6c611e5d82611f2a565b8082825260208201915060208360051b860101925085831115611f8e57600080fd5b602085015b83811015611fb4578035611fa681611a39565b835260209283019201611f93565b5095945050505050565b600082601f830112611fcf57600080fd5b8135611fdd611e5d82611f2a565b8082825260208201915060208360051b860101925085831115611fff57600080fd5b602085015b83811015611fb45780356001600160401b0381111561202257600080fd5b86016040818903601f1901121561203857600080fd5b612040611d9c565b602082013561204e81611a39565b815260408201356001600160401b0381111561206957600080fd5b6120788a602083860101611e3e565b6020830152508085525050602083019250602081019050612004565b6000602082840312156120a657600080fd5b81356001600160401b038111156120bc57600080fd5b820161010081850312156120cf57600080fd5b6120d7611dc4565b6120e082611a4e565b815260208201356001600160401b038111156120fb57600080fd5b61210786828501611f4d565b6020830152506040828101359082015261212360608301611a4e565b606082015260808201356001600160401b0381111561214157600080fd5b61214d86828501611e3e565b60808301525061215f60a08301611a4e565b60a082015260c08201356001600160401b0381111561217d57600080fd5b61218986828501611fbe565b60c08301525060e08201356001600160401b038111156121a857600080fd5b6121b486828501611e3e565b60e083015250949350505050565b6020815260006121d56020830184611d0e565b9392505050565b6000602082840312156121ee57600080fd5b5035919050565b60008060008060008060008060008060008060e08d8f03121561221757600080fd5b6122208d611a4e565b9b506001600160401b0360208e0135111561223a57600080fd5b61224a8e60208f01358f01611a59565b909b5099506001600160401b0360408e0135111561226757600080fd5b6122778e60408f01358f01611a59565b90995097506001600160401b0360608e0135111561229457600080fd5b6122a48e60608f01358f01611a59565b90975095506001600160401b0360808e013511156122c157600080fd5b6122d18e60808f01358f01611a59565b90955093506001600160401b0360a08e013511156122ee57600080fd5b6122fe8e60a08f01358f01611a59565b909350915061230f60c08e01611aa4565b90509295989b509295989b509295989b565b60006020828403121561233357600080fd5b81356001600160401b0381111561234957600080fd5b820161010081850312156121d557600080fd5b600082825180855260208501945060208160051b8301016020850160005b838110156123cc57848303601f19018852815180516001600160a01b031684526020908101516040918501829052906123b590850182611d0e565b6020998a019990945092909201915060010161237a565b50909695505050505050565b6000808335601e198436030181126123ef57600080fd5b83016020810192503590506001600160401b0381111561240e57600080fd5b803603821315611a9d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208501945060208460051b8201018360005b868110156123cc57838303601f19018852813536879003603e1901811261248557600080fd5b8601803561249281611a39565b6001600160a01b031684526124aa60208201826123d8565b9150604060208601526124c160408601838361241d565b60209a8b019a9095509390930192505060010161245f565b600081518084526020840193506020830160005b828110156125145781516001600160a01b03168652602095860195909101906001016124ed565b5093949350505050565b60018060a01b038151168252600060208201516060602085015261254560608501826124d9565b60409384015160ff16949093019390935250919050565b60a08152600061256f60a083018b61235c565b8281036020840152612582818a8c612446565b9050828103604084015261259781888a612446565b905082810360608401526125ac818688612446565b905082810360808401526125c0818561251e565b9b9a5050505050505050505050565b6000808335601e198436030181126125e657600080fd5b8301803591506001600160401b0382111561260057600080fd5b602001915036819003821315611a9d57600080fd5b6000808585111561262557600080fd5b8386111561263257600080fd5b5050820193919092039150565b80356001600160e01b03198116906004841015612670576001600160e01b0319600485900360031b81901b82161691505b5092915050565b6020815260006121d5602083018461235c565b6000835161269c818460208801611cea565b60609390931b6001600160601b0319169190920190815260140192915050565b600082516126ce818460208701611cea565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b612708826126fb83611a4e565b6001600160a01b03169052565b60208181013590830152600061272160408301836123d8565b61012060408601526127386101208601828461241d565b91505061274860608401846123d8565b858303606087015261275b83828461241d565b6080868101359088015260a0808701359088015260c08087013590880152925061278b91505060e08401846123d8565b85830360e087015261279e83828461241d565b925050506127b06101008401846123d8565b8583036101008701526127c483828461241d565b9695505050505050565b6040815260006127e160408301856126ee565b90508260208301529392505050565b60006020828403121561280257600080fd5b5051919050565b8183823760009101908152919050565b80356001600160d01b03198116906006841015612670576001600160d01b031960069490940360031b84901b1690921692915050565b60006020828403121561286157600080fd5b81356121d581611a39565b6000835161287e818460208801611cea565b9190910191825250602001919050565b6001600160a01b038816815260e0602082018190526000906128b2908301896124d9565b604083018890526001600160a01b038716606084015282810360808401526128da8187611d0e565b6001600160a01b03861660a085015283810360c085015290506128fd818561235c565b9a9950505050505050505050565b60a08152600061291f60a083018b8d612446565b8281036020840152612932818a8c612446565b9050828103604084015261294781888a612446565b9050828103606084015261295c818688612446565b90508281036080840152612970818561251e565b9c9b505050505050505050505050565b6000808335601e1984360301811261299757600080fd5b8301803591506001600160401b038211156129b157600080fd5b6020019150600581901b3603821315611a9d57600080fd5b61010080825281018a905260008b6101208301825b8d811015612a0e5782356129f181611a39565b6001600160a01b03168252602092830192909101906001016129de565b508b6020850152612a2a604085018c6001600160a01b03169052565b8381036060850152612a3d818a8c61241d565b92505050612a5660808301876001600160a01b03169052565b6001600160a01b03851660a08301528360c08301526125c060e08301846001600160a01b03169052565b8284823760609190911b6001600160601b0319169101908152601401919050565b604081526000612ab460408301856126ee565b905060018060a01b03831660208301529392505050565b600082601f830112612adc57600080fd5b8151612aea611e5d82611e17565b818152846020838601011115612aff57600080fd5b612b10826020830160208701611cea565b949350505050565b805165ffffffffffff8116811461136e57600080fd5b60008060008060808587031215612b4457600080fd5b84516001600160401b03811115612b5a57600080fd5b612b6687828801612acb565b945050612b7560208601612b18565b9250612b8360408601612b18565b915060608501516001600160401b03811115612b9e57600080fd5b612baa87828801612acb565b91505092959194509250565b634e487b7160e01b600052601160045260246000fd5b600060018201612bde57612bde612bb6565b5060010190565b808202811582820484141761158a5761158a612bb6565b8082018082111561158a5761158a612bb6565b828152604060208201526000612b106040830184611d0e565b600060208284031215612c3a57600080fd5b81516001600160e01b0319811681146121d557600080fd5b60ff828116828216039081111561158a5761158a612bb656fe982e06ee6a56dfc0f1ac189a5d23506361ca0a3ce45a9c7b8d33d65d43746a24a2646970667358221220b8570cdd622e1fbbf9414238ac24ec7629c0bf87595f396efe2bec7415eff9ce64736f6c634300081a0033",
    "sourceMap": "1487:15193:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:114;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:114;;;;;;;;;;;2992:41;1487:15193;;;;;2298:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;196:32:153;;;178:51;;166:2;151:18;2298:34:114;;;;;;;;2247:45;;;;;;;;;;;;;;;3486:655;;;;;;;;;;-1:-1:-1;3486:655:114;;;;;:::i;:::-;;:::i;7367:3339::-;;;;;;;;;;-1:-1:-1;7367:3339:114;;;;;:::i;:::-;;:::i;:::-;;;4073:25:153;;;4061:2;4046:18;7367:3339:114;3927:177:153;14600:210:114;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;14773:21:114;14600:210;;5403:552;;;;;;;;;;-1:-1:-1;5403:552:114;;;;;:::i;:::-;;:::i;976:3275:120:-;;;;;;;;;;-1:-1:-1;976:3275:120;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;15307:892:114:-;;;;;;;;;;-1:-1:-1;15307:892:114;;;;;:::i;:::-;;:::i;16312:366::-;;;;;;;;;;-1:-1:-1;16312:366:114;;;;;:::i;:::-;;:::i;541:135:122:-;;;;;;;;;;-1:-1:-1;634:35:122;;;;;;;;;;;;;;;;541:135;;;;634:35;541:135;:::i;682:712::-;;;;;;;;;;-1:-1:-1;682:712:122;;;;;:::i;:::-;;:::i;:::-;;;13712:14:153;;13705:22;13687:41;;13675:2;13660:18;682:712:122;13547:187:153;4259:719:114;;;;;;;;;;-1:-1:-1;4259:719:114;;;;;:::i;:::-;;:::i;12839:1710::-;;;;;;;;;;-1:-1:-1;12839:1710:114;;;;;:::i;:::-;;:::i;1400:373:122:-;;;;;;;;;;-1:-1:-1;1400:373:122;;;;;:::i;:::-;;:::i;4257:150:120:-;;;;;;;;;;;;;:::i;3486:655:114:-;2883:10;2905:4;2883:27;2879:58;;2919:18;;-1:-1:-1;;;2919:18:114;;;;;;;;;;;2879:58;3780:43:::1;::::0;-1:-1:-1;;;3780:43:114;;-1:-1:-1;;;;;196:32:153;;3780:43:114::1;::::0;::::1;178:51:153::0;3794:4:114::1;::::0;3780:33:::1;::::0;151:18:153;;3780:43:114::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3902:19:114::1;::::0;;3919:1:::1;3902:19:::0;;;::::1;::::0;::::1;::::0;;;3851:4:::1;::::0;-1:-1:-1;3833:42:114::1;::::0;-1:-1:-1;3902:19:114;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;3902:19:114::1;;;;;;;;;;;;;;;;3946:9;;3980;;4010:5;;4043:80;;;;;;;;4068:8;-1:-1:-1::0;;;;;4043:80:114::1;;;;;4089:9;;4043:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;4043:80:114;;;-1:-1:-1;4043:80:114::1;::::0;::::1;;::::0;;::::1;::::0;3833:301:::1;::::0;-1:-1:-1;;;;;;3833:301:114::1;::::0;;;;;;::::1;::::0;;;;;;;;;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3486:655:::0;;;;;;;;;;:::o;7367:3339::-;7623:22;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:114;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:114;;;;;;;;;;;2992:41;3106:10:::1;-1:-1:-1::0;;;;;3120:20:114::1;3106:34;;3102:66;;3149:19;;-1:-1:-1::0;;;3149:19:114::1;;;;;;;;;;;3102:66;7699:15:::2;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;7716:1:::2;::::0;7699:19:::2;::::0;::::2;:::i;:::-;7692:27;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;7665:54:114::2;-1:-1:-1::0;;;7665:54:114::2;7661:118;;7742:26;;-1:-1:-1::0;;;7742:26:114::2;;;;;;;;;;;7661:118;7789:24;7827:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;7843:1:::2;::::0;7827:19;;::::2;:::i;:::-;7816:43;;;;;;;:::i;:::-;7789:70;;7989:13;-1:-1:-1::0;;;;;;;;;;;14773:21:114;;14600:210;7989:13:::2;7971:14;7976:8;7971:4;:14::i;:::-;:31;7967:61;;8011:17;;-1:-1:-1::0;;;8011:17:114::2;;;;;;;;;;;7967:61;8084:17;8111:13:::0;8127:6:::2;:12;;;8111:28;;8249:5;8245:2;8241:14;8228:27;;8620:12;8645:8;:17;;;-1:-1:-1::0;;;;;8637:31:114::2;8775:8;:19;;;8716:80;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8716:80:114;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8716:80:114::2;-1:-1:-1::0;;;8716:80:114::2;::::0;;8682:196;;::::2;::::0;8716:80;8828:10:::2;::::0;8682:196:::2;;:::i;:::-;;::::0;;-1:-1:-1;;8682:196:114;;::::2;::::0;;;;;;;8637:251:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8619:269;;;8951:7;8946:47;;8967:26;;-1:-1:-1::0;;;8967:26:114::2;;;;;;;;;;;8946:47;9297:19;::::0;::::2;::::0;:26;9231:29:::2;::::0;;9333:361:::2;9353:16;9349:1;:20;9333:361;;;9390:23;9416:8;:19;;;9436:1;9416:22;;;;;;;;:::i;:::-;;;;;;;:29;;;9390:55;;9470:15;-1:-1:-1::0;;;;;9459:37:114::2;;9497:8;:19;;;9517:1;9497:22;;;;;;;;:::i;:::-;;;;;;;:31;;;9459:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9548:55:114::2;::::0;;276:1:76::2;24290:25:153::0;;-1:-1:-1;;;;;24351:32:153;;24346:2;24331:18;;24324:60;9548:55:114::2;::::0;-1:-1:-1;24263:18:153;;-1:-1:-1;9548:55:114::2;;;;;;;9641:9;-1:-1:-1::0;;;;;9622:28:114::2;:15;-1:-1:-1::0;;;;;9622:28:114::2;::::0;9618:65:::2;;9679:4;9652:31;;9618:65;-1:-1:-1::0;9371:3:114::2;;9333:361;;;;9825:24;9821:602;;;9946:56;::::0;-1:-1:-1;;;9946:56:114;;-1:-1:-1;;;;;9946:36:114;::::2;::::0;::::2;::::0;:56:::2;::::0;9983:6;;9991:10;;9946:56:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9929:73;;9821:602;;;10119:13;10134:17:::0;10153::::2;10190:37;10210:8;10220:6;10190:19;:37::i;:::-;10118:109;;;;;;10259:153;10309:8;10308:9;10347:10;10387;10259:19;:153::i;:::-;10242:170;;10019:404;;;9821:602;10475:23:::0;;10471:229:::2;;10673:1;10670::::0;10667::::2;10664::::0;10643:19:::2;10633:8;10626:5;10621:54;10617:59;10471:229;7651:3055;;;;;;7367:3339:::0;;;;;:::o;5403:552::-;2996:9;;3009:4;-1:-1:-1;;;;;2996:17:114;;;:9;;:17;2992:41;;3022:11;;-1:-1:-1;;;3022:11:114;;;;;;;;;;;2992:41;5593:1:::1;5568:13;-1:-1:-1::0;;;;;;;;;;;14773:21:114;;14600:210;5568:13:::1;:27;5564:77;;5604:37;;-1:-1:-1::0;;;5604:37:114::1;;;;;;;;;;;5564:77;5679:22;5692:8;-1:-1:-1::0;;;;;;;;;;;15010:29:114;14859:196;5679:22:::1;-1:-1:-1::0;;;;;5803:16:114;::::1;::::0;5799:150:::1;;5836:12;5853:2;-1:-1:-1::0;;;;;5853:15:114::1;5869:7;;5853:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5835:42;;;5896:7;5891:47;;5912:26;;-1:-1:-1::0;;;5912:26:114::1;;;;;;;;;;;5891:47;5821:128;5799:150;5403:552:::0;;;;:::o;976:3275:120:-;1132:26;1172:17;;1132:26;1480:18;1172:17;1501:16;;;;:6;:16;:::i;:::-;1480:37;;-1:-1:-1;1480:37:120;-1:-1:-1;1558:8:120;1564:1;1562;1480:37;;1558:8;:::i;:::-;1551:16;;;:::i;:::-;1544:24;;;-1:-1:-1;1609:9:120;1615:2;1613:1;1609:3;;:9;:::i;:::-;1602:17;;;:::i;:::-;1595:25;;;-1:-1:-1;1647:8:120;:3;1651:2;1647:3;;:8;:::i;:::-;1634:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2706:830:120;;;;;;;;;193:66:128;2706:830:120;;1634:21;;-1:-1:-1;1634:21:120;-1:-1:-1;2706:830:120;;-1:-1:-1;;2706:830:120;;;;;-1:-1:-1;2794:13:120;;-1:-1:-1;2794:13:120;;:6;:13;:::i;:::-;-1:-1:-1;;;;;2706:830:120;;;;;2832:6;:12;;;2706:830;;;;2886:6;:15;;;;;;;;:::i;:::-;2876:26;;;;;;;:::i;:::-;;;;;;;;;2706:830;;;;2944:15;;;;:6;:15;:::i;:::-;2934:26;;;;;;;:::i;:::-;;;;;;;;2706:830;;;;3008:35;:6;:33;:35::i;:::-;-1:-1:-1;;;;;2706:830:120;;;;;3084:27;:6;:25;:27::i;:::-;-1:-1:-1;;;;;2706:830:120;;;;;3150:6;:25;;;2706:830;;;;3223:35;:6;:33;:35::i;:::-;-1:-1:-1;;;;;2706:830:120;;;;;3299:27;:6;:25;:27::i;:::-;-1:-1:-1;;;;;2706:830:120;;;;;3377:23;;;;:6;:23;:::i;:::-;3367:34;;;;;;;:::i;:::-;;;;;;;;;;;2706:830;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2706:830:120;;;;;;;4089:3;4064:29;;2663:873;;-1:-1:-1;;;;;;;4198:17:120;:15;:17::i;:::-;4153:81;;-1:-1:-1;;;;;;27618:26:153;;;4153:81:120;;;27606:39:153;27674:26;;;;27661:11;;;27654:47;27717:11;;;27710:27;27753:12;;;27746:28;;;27790:12;;4153:81:120;;;;;;;;;;;;4121:113;;2185:2060;;976:3275;;;;;;;:::o;15307:892:114:-;15547:17;15624:18;15614:29;;;;;;15645:4;15597:53;;;;;;;;27970:19:153;;;28014:2;28005:12;;27998:28;28051:2;28042:12;;27813:247;15597:53:114;;;;;;;;;;;;;15587:64;;;;;;15580:71;;15837:4;15830:12;;15880:16;15927:4;16021:12;16059:9;-1:-1:-1;;;;;16035:36:114;16004:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15961:141;;;;;;15784:344;;;;;;;;;;-1:-1:-1;;;;;;28676:26:153;;;;28664:39;;28740:2;28736:15;;;;-1:-1:-1;;;;;;28732:53:153;28728:1;28719:11;;28712:74;28811:2;28802:12;;28795:28;28848:2;28839:12;;28832:28;28885:2;28876:12;;28453:441;15784:344:114;;;;-1:-1:-1;;15784:344:114;;;;;;;;;15749:401;;15784:344;15749:401;;;;;15307:892;-1:-1:-1;;;;;;15307:892:114:o;16312:366::-;16446:14;;16478:11;;;;;16507:14;;;;;16539:12;;;;16569:14;;;;16601:13;;;;16632:15;;;;16418:243;;16369:7;;16418:243;;16446:14;;16478:11;16632:15;16418:243;;:::i;:::-;;;;;;;;;;;;;16395:276;;;;;;16388:283;;16312:366;;;:::o;682:712:122:-;758:14;929:11;969:1;965:19;;;-1:-1:-1;;;;;;5542:40:131;;-1:-1:-1;;;5542:40:131;1003:209:122;;1047:4;1035:16;;1003:209;;;-1:-1:-1;;;;;;5542:40:131;;1066:146:122;;1111:4;1099:16;;1066:146;;;-1:-1:-1;;;;;;5542:40:131;;;;1130:82:122;;1181:4;1169:16;;1130:82;;;-1:-1:-1;1207:5:122;;682:712;-1:-1:-1;;;682:712:122:o;1130:82::-;1227:9;:41;;;;-1:-1:-1;;;;;;;5542:40:131;;;1240:28:122;1223:164;;;1270:16;;682:712;;;:::o;1223:164::-;1305:9;:37;;;;-1:-1:-1;;;;;;;5542:40:131;;-1:-1:-1;;;5542:40:131;1318:24:122;1301:86;;;1344:16;;682:712;;;:::o;4259:719:114:-;4567:43;;-1:-1:-1;;;4567:43:114;;-1:-1:-1;;;;;196:32:153;;4567:43:114;;;178:51:153;4581:4:114;;4567:33;;151:18:153;;4567:43:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4620:49:114;;-1:-1:-1;;;4620:49:114;;-1:-1:-1;;;;;196:32:153;;4620:49:114;;;178:51:153;4634:4:114;;-1:-1:-1;4620:39:114;;-1:-1:-1;151:18:153;;4620:49:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:4;-1:-1:-1;;;;;4679:42:114;;4748:10;;4783:9;;4817;;4847:5;;4880:80;;;;;;;;4905:8;-1:-1:-1;;;;;4880:80:114;;;;;4926:9;;4880:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4880:80:114;;;-1:-1:-1;4880:80:114;;;;;;;;4679:292;;-1:-1:-1;;;;;;4679:292:114;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:719;;;;;;;;;;;;:::o;12839:1710::-;3106:10;-1:-1:-1;;;;;3120:20:114;3106:34;;3102:66;;3149:19;;-1:-1:-1;;;3149:19:114;;;;;;;;;;;3102:66;13085:18:::1;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;13061:21;:42:::0;;-1:-1:-1;;;;;;13061:42:114::1;-1:-1:-1::0;;;;;13061:42:114;;::::1;;::::0;;13182:4:::1;13162:24;:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;13162:24:114::1;;13158:51;;13195:14;;-1:-1:-1::0;;;13195:14:114::1;;;;;;;;;;;13158:51;-1:-1:-1::0;;;13294:18:114::1;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;:22;::::0;13314:1:::1;::::0;13294:22:::1;::::0;::::1;:::i;:::-;13287:30;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;13287:60:114::1;;13283:87;;13356:14;;-1:-1:-1::0;;;13356:14:114::1;;;;;;;;;;;13283:87;13423:4;13409:26;13459:15;;::::0;::::1;:8:::0;:15:::1;:::i;:::-;13500:18;::::0;::::1;;13536:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;13572:18;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;13629:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;13683:1;13708::::0;13756::::1;13409:361;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13820:1:114::1;-1:-1:-1::0;;;;;;;;;;;15010:29:114;-1:-1:-1;13807:15:114::1;::::0;-1:-1:-1;14859:196:114;13807:15:::1;14052:12;::::0;14101:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;14093:31:114::1;14172:17;;::::0;::::1;:8:::0;:17:::1;:::i;:::-;14275:4;14138:182;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;14138:182:114;;::::1;::::0;;;;;;;14093:237:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14051:279;;;;14345:7;14340:203;;14507:10;14501:17;14494:4;14482:10;14478:21;14471:48;14340:203;12919:1630;;12839:1710:::0;:::o;1400:373:122:-;1469:4;276:1:76;1489:12:122;:37;1485:281;;-1:-1:-1;1535:4:122;;1400:373;-1:-1:-1;1400:373:122:o;1485:281::-;319:1:76;1558:12:122;:36;1554:212;;-1:-1:-1;1603:4:122;;1400:373;-1:-1:-1;1400:373:122:o;1554:212::-;362:1:76;1626:12:122;:36;1622:144;;-1:-1:-1;1671:4:122;;1400:373;-1:-1:-1;1400:373:122:o;1622:144::-;401:1:76;1694:12:122;:32;1690:76;;-1:-1:-1;1735:4:122;;1400:373;-1:-1:-1;1400:373:122:o;1690:76::-;-1:-1:-1;1761:5:122;;1400:373;-1:-1:-1;1400:373:122:o;1690:76::-;1400:373;;;:::o;4257:150:120:-;4341:58;;;420:66;4341:58;;;34265:25:153;4379:13:120;34306:18:153;;;34299:34;;;;4394:4:120;34349:18:153;;;34342:60;4305:7:120;;34238:18:153;;4341:58:120;;;;;;;;;;;;4331:69;;;;;;4324:76;;4257:150;:::o;10712:1353:114:-;10882:13;10897:17;10916;10949:26;10985:23;11146:17;:26;;;-1:-1:-1;;;;;11138:45:114;;11184:6;11192:20;11138:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11138:75:114;;;;;;;;;;;;:::i;:::-;11239:24;;;;;;11338:27;;;;11072:141;;-1:-1:-1;11072:141:114;;-1:-1:-1;11072:141:114;;-1:-1:-1;11072:141:114;;-1:-1:-1;11239:24:114;11223:13;;11301:65;;11239:24;;11072:141;;11301:24;:65::i;:::-;11274:92;;11376:23;:7;:21;:23::i;:::-;11436:24;;;;11551:22;11436:24;11551:20;:22::i;:::-;11583:23;:6;:21;:23::i;:::-;11640:13;;11617:20;;11691:320;11711:12;11707:1;:16;11691:320;;;11745:10;11760:31;11781:6;11788:1;11781:9;;;;;;;;:::i;:::-;;;;;;;11760:7;:20;;:31;;;;:::i;:::-;11744:47;;;11809:5;11805:196;;;11834:11;;;;:::i;:::-;;;;11880:17;:27;;;11867:9;:40;11863:124;;11939:4;11931:37;;;;;;;;;;;;;11863:124;-1:-1:-1;11725:3:114;;11691:320;;;;12028:5;12020:38;;;;;;;;;10712:1353;;;;;;:::o;2448:248:9:-;2559:7;2683:8;2667:10;2659:19;;:33;;2643:3;2628:10;2620:19;;:26;;2590:9;:17;;2606:1;2590:17;;;2602:1;2590:17;2589:58;;;:104;;2448:248;-1:-1:-1;;;;2448:248:9:o;3410:171:13:-;3510:7;3536:38;3550:6;:23;;;2887:3;2868:22;;2780:117;3536:38;3529:45;3410:171;-1:-1:-1;;3410:171:13:o;3587:162::-;3679:7;-1:-1:-1;;;;;3718:23:13;;;;3039:31;3705:37;2959:118;3083:162;3183:7;3223:14;;;;2887:3;2868:22;3209:29;2780:117;3251:153;3343:7;-1:-1:-1;;;;;3382:14:13;;;;3039:31;3369:28;2959:118;904:3530:27;1080:33;1129:31;1163:23;:18;1184:2;1163:23;:::i;:::-;1223:17;;1129:57;;-1:-1:-1;1283:18:27;-1:-1:-1;;;;;1269:33:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1269:33:27;;1250:52;;1335:23;1316:16;:42;1312:73;;;1367:18;;-1:-1:-1;;;1367:18:27;;;;;;;;;;;1312:73;1401:9;1396:3032;1416:18;1412:1;:22;1396:3032;;;1498:15;1528:7;1537:9;1548;1561:50;1590:10;1607:1;5504:4;5500:14;5538:40;5572:4;5538:40;;5532:47;5637:4;5603:40;;5597:47;5710:4;5676:40;;;5670:47;5313:7;5662:56;;5532:47;;5597;5182:552;1561:50;1527:84;;;;;;1630:1;:6;;1635:1;1630:6;1626:2749;;1876:1;;-1:-1:-1;1876:1:27;;2180:23;2185:18;2180:2;:23;:::i;:::-;2167:36;;2163:136;;;2234:46;;-1:-1:-1;;;2234:46:27;;;;;36850:25:153;;;2263:10:27;36891:18:153;;;36884:34;;;36934:18;;;36927:34;36823:18;;2234:46:27;;;;;;;;2163:136;2339:16;2321:15;2329:1;2334:2;2321:15;:::i;:::-;:34;2317:149;;;2386:61;;-1:-1:-1;;;2386:61:27;;;;;36850:25:153;;;2415:10:27;36891:18:153;;;36884:34;36934:18;;;36927:34;;;36823:18;;2386:61:27;36632:335:153;2317:149:27;2823:4;2803:18;;;2799:29;;2793:36;;2909:16;;2793:36;;2868:15;;2803:18;;2868:15;:::i;:::-;:38;;;;:::i;:::-;:57;2864:237;;;2956:126;;-1:-1:-1;;;2956:126:27;;;;;36850:25:153;;;36891:18;;;36884:34;;;36934:18;;;36927:34;;;36823:18;;2956:126:27;36632:335:153;2864:237:27;3154:30;3504:4;3500:1;3488:10;3484:18;3480:29;3459:50;;168:10;3671:19;;-1:-1:-1;;;;;3569:121:27;;3589:7;-1:-1:-1;;;;;3569:45:27;;3615:8;3625:17;3569:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3569:121:27;;3544:213;;3739:17;3716:41;;-1:-1:-1;;;3716:41:27;;;;;;;;:::i;3544:213::-;1638:2134;;1626:2749;;;3786:2;3782:1;:6;;;3778:597;;;4073:184;4118:38;4147:8;15824:4:105;15817:18;15904:50;15725:14;15891:64;16007:4;16001;15991:21;;15656:409;4118:38:27;4181:5;4185:1;4181;:5;:::i;:::-;4211:1;4237;4073:16;:184::i;:::-;4063:194;;3778:597;;;4306:54;4331:8;4344:1;4350;4356;4306:16;:54::i;:::-;4296:64;;3778:597;4410:7;4388:16;4405:1;4388:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4388:29:27;;;:19;;;;;;;;;;;:29;-1:-1:-1;;1436:3:27;;;;;-1:-1:-1;1396:3032:27;;-1:-1:-1;1396:3032:27;;;1119:3315;;904:3530;;;;;:::o;2083:100:107:-;2150:26;2173:1;2150:13;:26::i;:::-;2083:100;:::o;10119:102::-;10187:27;10211:1;10187:14;:27::i;11107:225::-;11212:10;;11270:55;11293:1;11313:6;-1:-1:-1;;;;;11297:24:107;11323:1;11270:13;:55::i;:::-;11253:72;;;;-1:-1:-1;11107:225:107;-1:-1:-1;;;11107:225:107:o;14080:1040:105:-;14192:14;14303:4;14297:11;14368:4;14362;14355:18;14406:4;14403:1;14399:12;14393:4;14386:26;14438:1;14432:4;14425:15;14466:1;14460:4;14453:15;14789:4;14743;14699;14654;14604:1;14534:5;14502:328;14481:363;14870:1;14864:4;14857:15;15022:16;15016:4;15012:27;15006:34;14996:44;;15066:1;15060:4;15053:15;;14080:1040;;;;;;:::o;776:1034:107:-;924:1;918:8;967:1;964;957:12;1054:1;1051;1047:9;1044:1;1040:17;1093:4;1123;1119:9;1163:1;1160;1156:9;1141:598;1196:9;;1225:8;;;1236:5;1222:21;1275:1;1269:8;1318:1;1315;1311:9;1389:1;1383:8;1445:1;1442;1439:8;1429:32;;1451:8;;;1141:598;;1429:32;1478:210;1519:9;;;1512:20;1558:9;;1612:8;;1651;;;1478:210;1641:29;-1:-1:-1;1712:9:107;;1705:20;1141:598;;;-1:-1:-1;;;1752:12:107;;-1:-1:-1;776:1034:107:o;9124:722::-;9336:1;9332;9326:8;9323:15;9313:517;;9374:4;9371:1;9367:12;9412:4;9409:1;9405:12;9473:1;9469;9463:8;9459:16;9456:1;9452:24;9449:1;9445:32;9494:277;9557:1;9551:8;9547:1;9541:8;9538:22;9528:143;;9600:4;9597:1;9593:12;9588:17;;9646:1;9640:8;9637:1;9630:19;9528:143;9704:4;9701:1;9697:12;9692:17;;9739:3;9736:1;9733:10;9494:277;9730:23;-1:-1:-1;;9805:9:107;;;9802:1;9798:17;9788:28;;9124:722::o;21300:1099::-;21421:10;21433:13;21541:1;21537:6;21565:1;21594;21588:8;21618:1;21660:6;21652;21648:19;21638:29;;21632:453;21716:1;21713;21709:9;21706:1;21702:17;21693:26;;21773:5;21770:1;21766:13;21763:1;21759:21;21753:28;21745:6;21741:41;21736:46;;21821:6;21818:1;21815:13;21811:1;21808;21805:8;21802:27;21832:5;21799:40;21945:1;21937:6;21934:13;21924:112;;21987:1;21980:5;21976:13;21971:18;;21632:453;;21924:112;22069:1;22062:5;22058:13;22053:18;;21632:453;;;22291:13;;22284:21;22253:13;;22370;;;22331;;;;22327:21;;;;-1:-1:-1;21300:1099:107;-1:-1:-1;;;;21300:1099:107:o;557:131:153:-;-1:-1:-1;;;;;632:31:153;;622:42;;612:70;;678:1;675;668:12;693:134;761:20;;790:31;761:20;790:31;:::i;832:386::-;914:8;924:6;978:3;971:4;963:6;959:17;955:27;945:55;;996:1;993;986:12;945:55;-1:-1:-1;1019:20:153;;-1:-1:-1;;;;;1051:30:153;;1048:50;;;1094:1;1091;1084:12;1048:50;1131:4;1123:6;1119:17;1107:29;;1191:3;1184:4;1174:6;1171:1;1167:14;1159:6;1155:27;1151:38;1148:47;1145:67;;;1208:1;1205;1198:12;1145:67;832:386;;;;;:::o;1223:156::-;1289:20;;1349:4;1338:16;;1328:27;;1318:55;;1369:1;1366;1359:12;1384:1746;1687:6;1695;1703;1711;1719;1727;1735;1743;1751;1759;1812:3;1800:9;1791:7;1787:23;1783:33;1780:53;;;1829:1;1826;1819:12;1780:53;1852:29;1871:9;1852:29;:::i;:::-;1842:39;;1932:2;1921:9;1917:18;1904:32;-1:-1:-1;;;;;1951:6:153;1948:30;1945:50;;;1991:1;1988;1981:12;1945:50;2030:89;2111:7;2102:6;2091:9;2087:22;2030:89;:::i;:::-;2138:8;;-1:-1:-1;2004:115:153;-1:-1:-1;;2226:2:153;2211:18;;2198:32;-1:-1:-1;;;;;2242:32:153;;2239:52;;;2287:1;2284;2277:12;2239:52;2326:91;2409:7;2398:8;2387:9;2383:24;2326:91;:::i;:::-;2436:8;;-1:-1:-1;2300:117:153;-1:-1:-1;;2524:2:153;2509:18;;2496:32;-1:-1:-1;;;;;2540:32:153;;2537:52;;;2585:1;2582;2575:12;2537:52;2624:91;2707:7;2696:8;2685:9;2681:24;2624:91;:::i;:::-;2734:8;;-1:-1:-1;2598:117:153;-1:-1:-1;;2822:3:153;2807:19;;2794:33;-1:-1:-1;;;;;2839:32:153;;2836:52;;;2884:1;2881;2874:12;2836:52;2923:91;3006:7;2995:8;2984:9;2980:24;2923:91;:::i;:::-;3033:8;;-1:-1:-1;2897:117:153;-1:-1:-1;3087:37:153;;-1:-1:-1;3119:3:153;3104:19;;3087:37;:::i;:::-;3077:47;;1384:1746;;;;;;;;;;;;;:::o;3135:168::-;3207:5;3252:3;3243:6;3238:3;3234:16;3230:26;3227:46;;;3269:1;3266;3259:12;3227:46;-1:-1:-1;3291:6:153;3135:168;-1:-1:-1;3135:168:153:o;3308:614::-;3424:6;3432;3440;3493:2;3481:9;3472:7;3468:23;3464:32;3461:52;;;3509:1;3506;3499:12;3461:52;3549:9;3536:23;-1:-1:-1;;;;;3574:6:153;3571:30;3568:50;;;3614:1;3611;3604:12;3568:50;3637:79;3708:7;3699:6;3688:9;3684:22;3637:79;:::i;:::-;3627:89;3785:2;3770:18;;3757:32;;-1:-1:-1;3886:2:153;3871:18;;;3858:32;;3308:614;-1:-1:-1;;;;3308:614:153:o;4291:841::-;4379:6;4387;4395;4403;4456:2;4444:9;4435:7;4431:23;4427:32;4424:52;;;4472:1;4469;4462:12;4424:52;4517:23;;;-1:-1:-1;4616:2:153;4601:18;;4588:32;4629:33;4588:32;4629:33;:::i;:::-;4681:7;-1:-1:-1;4739:2:153;4724:18;;4711:32;-1:-1:-1;;;;;4755:30:153;;4752:50;;;4798:1;4795;4788:12;4752:50;4821:22;;4874:4;4866:13;;4862:27;-1:-1:-1;4852:55:153;;4903:1;4900;4893:12;4852:55;4943:2;4930:16;-1:-1:-1;;;;;4961:6:153;4958:30;4955:50;;;5001:1;4998;4991:12;4955:50;5046:7;5041:2;5032:6;5028:2;5024:15;5020:24;5017:37;5014:57;;;5067:1;5064;5057:12;5014:57;4291:841;;;;-1:-1:-1;5098:2:153;5090:11;;-1:-1:-1;;;4291:841:153:o;5137:515::-;5244:6;5252;5305:2;5293:9;5284:7;5280:23;5276:32;5273:52;;;5321:1;5318;5311:12;5273:52;5361:9;5348:23;-1:-1:-1;;;;;5386:6:153;5383:30;5380:50;;;5426:1;5423;5416:12;5380:50;5449:79;5520:7;5511:6;5500:9;5496:22;5449:79;:::i;:::-;5439:89;;;5578:2;5567:9;5563:18;5550:32;5591:31;5616:5;5591:31;:::i;:::-;5641:5;5631:15;;;5137:515;;;;;:::o;5657:250::-;5742:1;5752:113;5766:6;5763:1;5760:13;5752:113;;;5842:11;;;5836:18;5823:11;;;5816:39;5788:2;5781:10;5752:113;;;-1:-1:-1;;5899:1:153;5881:16;;5874:27;5657:250::o;5912:270::-;5953:3;5991:5;5985:12;6018:6;6013:3;6006:19;6034:76;6103:6;6096:4;6091:3;6087:14;6080:4;6073:5;6069:16;6034:76;:::i;:::-;6164:2;6143:15;-1:-1:-1;;6139:29:153;6130:39;;;;6171:4;6126:50;;5912:270;-1:-1:-1;;5912:270:153:o;6187:559::-;6432:3;6421:9;6414:22;6395:4;6459:45;6499:3;6488:9;6484:19;6476:6;6459:45;:::i;:::-;6552:14;6544:6;6540:27;6535:2;6524:9;6520:18;6513:55;6616:14;6608:6;6604:27;6599:2;6588:9;6584:18;6577:55;6680:9;6672:6;6668:22;6663:2;6652:9;6648:18;6641:50;6708:32;6733:6;6725;6708:32;:::i;:::-;6700:40;6187:559;-1:-1:-1;;;;;;;6187:559:153:o;6751:127::-;6812:10;6807:3;6803:20;6800:1;6793:31;6843:4;6840:1;6833:15;6867:4;6864:1;6857:15;6883:257;6955:4;6949:11;;;6987:17;;-1:-1:-1;;;;;7019:34:153;;7055:22;;;7016:62;7013:88;;;7081:18;;:::i;:::-;7117:4;7110:24;6883:257;:::o;7145:255::-;7217:2;7211:9;7259:6;7247:19;;-1:-1:-1;;;;;7281:34:153;;7317:22;;;7278:62;7275:88;;;7343:18;;:::i;7405:275::-;7476:2;7470:9;7541:2;7522:13;;-1:-1:-1;;7518:27:153;7506:40;;-1:-1:-1;;;;;7561:34:153;;7597:22;;;7558:62;7555:88;;;7623:18;;:::i;:::-;7659:2;7652:22;7405:275;;-1:-1:-1;7405:275:153:o;7685:186::-;7733:4;-1:-1:-1;;;;;7758:6:153;7755:30;7752:56;;;7788:18;;:::i;:::-;-1:-1:-1;7854:2:153;7833:15;-1:-1:-1;;7829:29:153;7860:4;7825:40;;7685:186::o;7876:486::-;7918:5;7971:3;7964:4;7956:6;7952:17;7948:27;7938:55;;7989:1;7986;7979:12;7938:55;8029:6;8016:20;8060:52;8076:35;8104:6;8076:35;:::i;:::-;8060:52;:::i;:::-;8137:6;8128:7;8121:23;8191:3;8184:4;8175:6;8167;8163:19;8159:30;8156:39;8153:59;;;8208:1;8205;8198:12;8153:59;8273:6;8266:4;8258:6;8254:17;8247:4;8238:7;8234:18;8221:59;8329:1;8300:20;;;8322:4;8296:31;8289:42;;;;8304:7;7876:486;-1:-1:-1;;;7876:486:153:o;8367:932::-;8480:6;8488;8496;8504;8512;8565:3;8553:9;8544:7;8540:23;8536:33;8533:53;;;8582:1;8579;8572:12;8533:53;8621:9;8608:23;8640:31;8665:5;8640:31;:::i;:::-;8690:5;-1:-1:-1;8747:2:153;8732:18;;8719:32;8760:33;8719:32;8760:33;:::i;:::-;8812:7;-1:-1:-1;8870:2:153;8855:18;;8842:32;-1:-1:-1;;;;;8886:30:153;;8883:50;;;8929:1;8926;8919:12;8883:50;8952:49;8993:7;8984:6;8973:9;8969:22;8952:49;:::i;:::-;8942:59;-1:-1:-1;;9074:2:153;9059:18;;9046:32;;-1:-1:-1;9157:3:153;9142:19;;9129:33;-1:-1:-1;;;;;9174:32:153;;9171:52;;;9219:1;9216;9209:12;9171:52;9242:51;9285:7;9274:8;9263:9;9259:24;9242:51;:::i;:::-;9232:61;;;8367:932;;;;;;;;:::o;9304:183::-;9364:4;-1:-1:-1;;;;;9389:6:153;9386:30;9383:56;;;9419:18;;:::i;:::-;-1:-1:-1;9464:1:153;9460:14;9476:4;9456:25;;9304:183::o;9492:744::-;9546:5;9599:3;9592:4;9584:6;9580:17;9576:27;9566:55;;9617:1;9614;9607:12;9566:55;9657:6;9644:20;9684:64;9700:47;9740:6;9700:47;:::i;9684:64::-;9772:3;9796:6;9791:3;9784:19;9828:4;9823:3;9819:14;9812:21;;9889:4;9879:6;9876:1;9872:14;9864:6;9860:27;9856:38;9842:52;;9917:3;9909:6;9906:15;9903:35;;;9934:1;9931;9924:12;9903:35;9970:4;9962:6;9958:17;9984:221;10000:6;9995:3;9992:15;9984:221;;;10082:3;10069:17;10099:31;10124:5;10099:31;:::i;:::-;10143:18;;10190:4;10181:14;;;;10017;9984:221;;;-1:-1:-1;10223:7:153;9492:744;-1:-1:-1;;;;;9492:744:153:o;10241:1296::-;10305:5;10358:3;10351:4;10343:6;10339:17;10335:27;10325:55;;10376:1;10373;10366:12;10325:55;10416:6;10403:20;10443:64;10459:47;10499:6;10459:47;:::i;10443:64::-;10531:3;10555:6;10550:3;10543:19;10587:4;10582:3;10578:14;10571:21;;10648:4;10638:6;10635:1;10631:14;10623:6;10619:27;10615:38;10601:52;;10676:3;10668:6;10665:15;10662:35;;;10693:1;10690;10683:12;10662:35;10729:4;10721:6;10717:17;10743:763;10759:6;10754:3;10751:15;10743:763;;;10847:3;10834:17;-1:-1:-1;;;;;10870:11:153;10867:35;10864:55;;;10915:1;10912;10905:12;10864:55;10942:24;;11014:4;10990:12;;;-1:-1:-1;;10986:26:153;10982:37;10979:57;;;11032:1;11029;11022:12;10979:57;11062:22;;:::i;:::-;11133:4;11129:2;11125:13;11112:27;11152:33;11177:7;11152:33;:::i;:::-;11198:22;;11270:4;11262:13;;11249:27;-1:-1:-1;;;;;11292:32:153;;11289:52;;;11337:1;11334;11327:12;11289:52;11379:51;11426:3;11419:4;11408:8;11404:2;11400:17;11396:28;11379:51;:::i;:::-;11372:4;11365:5;11361:16;11354:77;;11456:5;11451:3;11444:18;;;11491:4;11486:3;11482:14;11475:21;;10785:4;10780:3;10776:14;10769:21;;10743:763;;11542:1515;11628:6;11681:2;11669:9;11660:7;11656:23;11652:32;11649:52;;;11697:1;11694;11687:12;11649:52;11737:9;11724:23;-1:-1:-1;;;;;11762:6:153;11759:30;11756:50;;;11802:1;11799;11792:12;11756:50;11825:22;;11881:6;11863:16;;;11859:29;11856:49;;;11901:1;11898;11891:12;11856:49;11927:22;;:::i;:::-;11972;11991:2;11972:22;:::i;:::-;11965:5;11958:37;12041:2;12037;12033:11;12020:25;-1:-1:-1;;;;;12060:8:153;12057:32;12054:52;;;12102:1;12099;12092:12;12054:52;12138:56;12186:7;12175:8;12171:2;12167:17;12138:56;:::i;:::-;12133:2;12122:14;;12115:80;-1:-1:-1;12261:2:153;12253:11;;;12240:25;12281:14;;;12274:31;12337;12364:2;12356:11;;12337:31;:::i;:::-;12332:2;12325:5;12321:14;12314:55;12415:3;12411:2;12407:12;12394:26;-1:-1:-1;;;;;12435:8:153;12432:32;12429:52;;;12477:1;12474;12467:12;12429:52;12514:44;12550:7;12539:8;12535:2;12531:17;12514:44;:::i;:::-;12508:3;12501:5;12497:15;12490:69;;12592:32;12619:3;12615:2;12611:12;12592:32;:::i;:::-;12586:3;12579:5;12575:15;12568:57;12671:3;12667:2;12663:12;12650:26;-1:-1:-1;;;;;12691:8:153;12688:32;12685:52;;;12733:1;12730;12723:12;12685:52;12770:66;12828:7;12817:8;12813:2;12809:17;12770:66;:::i;:::-;12764:3;12757:5;12753:15;12746:91;;12883:3;12879:2;12875:12;12862:26;-1:-1:-1;;;;;12903:8:153;12900:32;12897:52;;;12945:1;12942;12935:12;12897:52;12982:44;13018:7;13007:8;13003:2;12999:17;12982:44;:::i;:::-;12976:3;12965:15;;12958:69;-1:-1:-1;12969:5:153;11542:1515;-1:-1:-1;;;;11542:1515:153:o;13062:219::-;13211:2;13200:9;13193:21;13174:4;13231:44;13271:2;13260:9;13256:18;13248:6;13231:44;:::i;:::-;13223:52;13062:219;-1:-1:-1;;;13062:219:153:o;13286:256::-;13375:6;13428:2;13416:9;13407:7;13403:23;13399:32;13396:52;;;13444:1;13441;13434:12;13396:52;-1:-1:-1;13489:23:153;;13286:256;-1:-1:-1;13286:256:153:o;13739:2097::-;14109:6;14117;14125;14133;14141;14149;14157;14165;14173;14181;14189:7;14198;14252:3;14240:9;14231:7;14227:23;14223:33;14220:53;;;14269:1;14266;14259:12;14220:53;14292:29;14311:9;14292:29;:::i;:::-;14282:39;;-1:-1:-1;;;;;14364:2:153;14353:9;14349:18;14336:32;14333:56;14330:76;;;14402:1;14399;14392:12;14330:76;14441:115;14548:7;14541:2;14530:9;14526:18;14513:32;14502:9;14498:48;14441:115;:::i;:::-;14575:8;;-1:-1:-1;14602:8:153;-1:-1:-1;;;;;;14653:2:153;14638:18;;14625:32;14622:56;14619:76;;;14691:1;14688;14681:12;14619:76;14730:115;14837:7;14830:2;14819:9;14815:18;14802:32;14791:9;14787:48;14730:115;:::i;:::-;14864:8;;-1:-1:-1;14891:8:153;-1:-1:-1;;;;;;14942:2:153;14927:18;;14914:32;14911:56;14908:76;;;14980:1;14977;14970:12;14908:76;15019:115;15126:7;15119:2;15108:9;15104:18;15091:32;15080:9;15076:48;15019:115;:::i;:::-;15153:8;;-1:-1:-1;15180:8:153;-1:-1:-1;;;;;;15231:3:153;15216:19;;15203:33;15200:57;15197:77;;;15270:1;15267;15260:12;15197:77;15309:116;15417:7;15409:3;15398:9;15394:19;15381:33;15370:9;15366:49;15309:116;:::i;:::-;15444:8;;-1:-1:-1;15471:8:153;-1:-1:-1;;;;;;15522:3:153;15507:19;;15494:33;15491:57;15488:77;;;15561:1;15558;15551:12;15488:77;15601:116;15709:7;15701:3;15690:9;15686:19;15673:33;15662:9;15658:49;15601:116;:::i;:::-;15736:8;;-1:-1:-1;15764:9:153;-1:-1:-1;15793:37:153;15825:3;15810:19;;15793:37;:::i;:::-;15782:48;;13739:2097;;;;;;;;;;;;;;:::o;15841:389::-;15929:6;15982:2;15970:9;15961:7;15957:23;15953:32;15950:52;;;15998:1;15995;15988:12;15950:52;16038:9;16025:23;-1:-1:-1;;;;;16063:6:153;16060:30;16057:50;;;16103:1;16100;16093:12;16057:50;16126:22;;16182:3;16164:16;;;16160:26;16157:46;;;16199:1;16196;16189:12;16466:792;16529:3;16560;16592:5;16586:12;16619:6;16614:3;16607:19;16651:4;16646:3;16642:14;16635:21;;16709:4;16699:6;16696:1;16692:14;16685:5;16681:26;16677:37;16748:4;16741:5;16737:16;16771:1;16781:451;16795:6;16792:1;16789:13;16781:451;;;16860:16;;;-1:-1:-1;;16856:30:153;16844:43;;16910:13;;16953:9;;-1:-1:-1;;;;;16949:35:153;16936:49;;17032:4;17024:13;;;17018:20;17075:4;17058:15;;;17051:29;;;17018:20;17101:47;;17132:15;;17018:20;17101:47;:::i;:::-;17183:4;17208:14;;;;17093:55;;-1:-1:-1;17171:17:153;;;;;-1:-1:-1;16817:1:153;16810:9;16781:451;;;-1:-1:-1;17248:4:153;;16466:792;-1:-1:-1;;;;;;16466:792:153:o;17263:500::-;17321:5;17328:6;17388:3;17375:17;17474:2;17470:7;17459:8;17443:14;17439:29;17435:43;17415:18;17411:68;17401:96;;17493:1;17490;17483:12;17401:96;17521:33;;17625:4;17612:18;;;-1:-1:-1;17573:21:153;;-1:-1:-1;;;;;;17642:30:153;;17639:50;;;17685:1;17682;17675:12;17639:50;17732:6;17716:14;17712:27;17705:5;17701:39;17698:59;;;17753:1;17750;17743:12;17768:266;17856:6;17851:3;17844:19;17908:6;17901:5;17894:4;17889:3;17885:14;17872:43;-1:-1:-1;17960:1:153;17935:16;;;17953:4;17931:27;;;17924:38;;;;18016:2;17995:15;;;-1:-1:-1;;17991:29:153;17982:39;;;17978:50;;17768:266::o;18039:1128::-;18128:3;18159;18183:6;18178:3;18171:19;18215:4;18210:3;18206:14;18199:21;;18273:4;18263:6;18260:1;18256:14;18249:5;18245:26;18241:37;18301:5;18324:1;18334:807;18348:6;18345:1;18342:13;18334:807;;;18413:16;;;-1:-1:-1;;18409:30:153;18397:43;;18479:20;;18554:14;18550:26;;;-1:-1:-1;;18546:40:153;18522:65;;18512:93;;18601:1;18598;18591:12;18512:93;18633:30;;18691:21;;18725:33;18691:21;18725:33;:::i;:::-;-1:-1:-1;;;;;18784:33:153;18771:47;;18865:59;18918:4;18905:18;;18909:7;18865:59;:::i;:::-;18831:93;;18961:4;18954;18948;18944:15;18937:29;18987:70;19051:4;19045;19041:15;19027:12;19013;18987:70;:::i;:::-;19092:4;19117:14;;;;18979:78;;-1:-1:-1;19080:17:153;;;;;-1:-1:-1;;18370:1:153;18363:9;18334:807;;19172:446;19225:3;19263:5;19257:12;19290:6;19285:3;19278:19;19322:4;19317:3;19313:14;19306:21;;19361:4;19354:5;19350:16;19384:1;19394:199;19408:6;19405:1;19402:13;19394:199;;;19473:13;;-1:-1:-1;;;;;19469:39:153;19457:52;;19538:4;19529:14;;;;19566:17;;;;19505:1;19423:9;19394:199;;;-1:-1:-1;19609:3:153;;19172:446;-1:-1:-1;;;;19172:446:153:o;19623:385::-;19743:1;19739;19734:3;19730:11;19726:19;19718:5;19712:12;19708:38;19703:3;19696:51;19678:3;19793:4;19786:5;19782:16;19776:23;19831:4;19824;19819:3;19815:14;19808:28;19857:58;19909:4;19904:3;19900:14;19886:12;19857:58;:::i;:::-;19968:4;19957:16;;;19951:23;19976:4;19947:34;19931:14;;;;19924:58;;;;-1:-1:-1;19845:70:153;19623:385;-1:-1:-1;19623:385:153:o;20013:1480::-;20784:3;20773:9;20766:22;20747:4;20811:67;20873:3;20862:9;20858:19;20850:6;20811:67;:::i;:::-;20926:9;20918:6;20914:22;20909:2;20898:9;20894:18;20887:50;20960:80;21033:6;21025;21017;20960:80;:::i;:::-;20946:94;;21088:9;21080:6;21076:22;21071:2;21060:9;21056:18;21049:50;21122:80;21195:6;21187;21179;21122:80;:::i;:::-;21108:94;;21250:9;21242:6;21238:22;21233:2;21222:9;21218:18;21211:50;21284:80;21357:6;21349;21341;21284:80;:::i;:::-;21270:94;;21413:9;21405:6;21401:22;21395:3;21384:9;21380:19;21373:51;21441:46;21480:6;21472;21441:46;:::i;:::-;21433:54;20013:1480;-1:-1:-1;;;;;;;;;;;20013:1480:153:o;21498:521::-;21575:4;21581:6;21641:11;21628:25;21735:2;21731:7;21720:8;21704:14;21700:29;21696:43;21676:18;21672:68;21662:96;;21754:1;21751;21744:12;21662:96;21781:33;;21833:20;;;-1:-1:-1;;;;;;21865:30:153;;21862:50;;;21908:1;21905;21898:12;21862:50;21941:4;21929:17;;-1:-1:-1;21972:14:153;21968:27;;;21958:38;;21955:58;;;22009:1;22006;21999:12;22024:331;22129:9;22140;22182:8;22170:10;22167:24;22164:44;;;22204:1;22201;22194:12;22164:44;22233:6;22223:8;22220:20;22217:40;;;22253:1;22250;22243:12;22217:40;-1:-1:-1;;22279:23:153;;;22324:25;;;;;-1:-1:-1;22024:331:153:o;22360:338::-;22480:19;;-1:-1:-1;;;;;;22517:29:153;;;22566:1;22558:10;;22555:137;;;-1:-1:-1;;;;;;22627:1:153;22623:11;;;22620:1;22616:19;22612:46;;;22604:55;;22600:82;;-1:-1:-1;22555:137:153;;22360:338;;;;:::o;22703:329::-;22940:2;22929:9;22922:21;22903:4;22960:66;23022:2;23011:9;23007:18;22999:6;22960:66;:::i;23037:428::-;23194:3;23232:6;23226:13;23248:66;23307:6;23302:3;23295:4;23287:6;23283:17;23248:66;:::i;:::-;23383:2;23379:15;;;;-1:-1:-1;;;;;;23375:53:153;23336:16;;;;23361:68;;;23456:2;23445:14;;23037:428;-1:-1:-1;;23037:428:153:o;23470:287::-;23599:3;23637:6;23631:13;23653:66;23712:6;23707:3;23700:4;23692:6;23688:17;23653:66;:::i;:::-;23735:16;;;;;23470:287;-1:-1:-1;;23470:287:153:o;23762:127::-;23823:10;23818:3;23814:20;23811:1;23804:31;23854:4;23851:1;23844:15;23878:4;23875:1;23868:15;24395:1544;24484:50;24530:3;24503:25;24522:5;24503:25;:::i;:::-;-1:-1:-1;;;;;306:31:153;294:44;;240:104;24484:50;24603:4;24592:16;;;24579:30;24625:14;;;24618:31;24466:3;24692:55;24741:4;24730:16;;24596:5;24692:55;:::i;:::-;24779:6;24772:4;24767:3;24763:14;24756:30;24807:71;24870:6;24865:3;24861:16;24847:12;24833;24807:71;:::i;:::-;24795:83;;;24925:55;24974:4;24967:5;24963:16;24956:5;24925:55;:::i;:::-;25022:3;25016:4;25012:14;25005:4;25000:3;24996:14;24989:38;25050:63;25108:4;25092:14;25076;25050:63;:::i;:::-;25182:4;25171:16;;;25158:30;25204:14;;;25197:31;25297:4;25286:16;;;25273:30;25319:14;;;25312:31;25412:4;25401:16;;;25388:30;25434:14;;;25427:31;25036:77;-1:-1:-1;25505:55:153;;-1:-1:-1;;25554:4:153;25543:16;;25175:5;25505:55;:::i;:::-;25604:3;25596:6;25592:16;25585:4;25580:3;25576:14;25569:40;25632:65;25690:6;25674:14;25658;25632:65;:::i;:::-;25618:79;;;;25744:57;25793:6;25786:5;25782:18;25775:5;25744:57;:::i;:::-;25847:3;25839:6;25835:16;25826:6;25821:3;25817:16;25810:42;25868:65;25926:6;25910:14;25894;25868:65;:::i;:::-;25861:72;24395:1544;-1:-1:-1;;;;;;24395:1544:153:o;25944:376::-;26177:2;26166:9;26159:21;26140:4;26197:74;26267:2;26256:9;26252:18;26244:6;26197:74;:::i;:::-;26189:82;;26307:6;26302:2;26291:9;26287:18;26280:34;25944:376;;;;;:::o;26325:184::-;26395:6;26448:2;26436:9;26427:7;26423:23;26419:32;26416:52;;;26464:1;26461;26454:12;26416:52;-1:-1:-1;26487:16:153;;26325:184;-1:-1:-1;26325:184:153:o;26514:271::-;26697:6;26689;26684:3;26671:33;26653:3;26723:16;;26748:13;;;26723:16;26514:271;-1:-1:-1;26514:271:153:o;26790:350::-;26910:19;;-1:-1:-1;;;;;;26947:33:153;;;27000:1;26992:10;;26989:145;;;-1:-1:-1;;;;;;27061:1:153;27057:11;;;;27054:1;27050:19;27046:50;;;27038:59;27034:90;;;;26790:350;-1:-1:-1;;26790:350:153:o;27145:247::-;27204:6;27257:2;27245:9;27236:7;27232:23;27228:32;27225:52;;;27273:1;27270;27263:12;27225:52;27312:9;27299:23;27331:31;27356:5;27331:31;:::i;28065:383::-;28222:3;28260:6;28254:13;28276:66;28335:6;28330:3;28323:4;28315:6;28311:17;28276:66;:::i;:::-;28364:16;;;;28389:21;;;-1:-1:-1;28437:4:153;28426:16;;28065:383;-1:-1:-1;28065:383:153:o;28899:1079::-;-1:-1:-1;;;;;29391:32:153;;29373:51;;29460:3;29455:2;29440:18;;29433:31;;;-1:-1:-1;;29487:57:153;;29524:19;;29516:6;29487:57;:::i;:::-;29575:2;29560:18;;29553:34;;;-1:-1:-1;;;;;29623:32:153;;29618:2;29603:18;;29596:60;29693:22;;;29687:3;29672:19;;29665:51;29739:32;29697:6;29756;29739:32;:::i;:::-;-1:-1:-1;;;;;29808:32:153;;29828:3;29787:19;;29780:61;29878:22;;;29872:3;29857:19;;29850:51;29725:46;-1:-1:-1;29918:54:153;29725:46;29957:6;29918:54;:::i;:::-;29910:62;28899:1079;-1:-1:-1;;;;;;;;;;28899:1079:153:o;29983:1518::-;30766:3;30755:9;30748:22;30729:4;30793:93;30881:3;30870:9;30866:19;30858:6;30850;30793:93;:::i;:::-;30934:9;30926:6;30922:22;30917:2;30906:9;30902:18;30895:50;30968:80;31041:6;31033;31025;30968:80;:::i;:::-;30954:94;;31096:9;31088:6;31084:22;31079:2;31068:9;31064:18;31057:50;31130:80;31203:6;31195;31187;31130:80;:::i;:::-;31116:94;;31258:9;31250:6;31246:22;31241:2;31230:9;31226:18;31219:50;31292:80;31365:6;31357;31349;31292:80;:::i;:::-;31278:94;;31421:9;31413:6;31409:22;31403:3;31392:9;31388:19;31381:51;31449:46;31488:6;31480;31449:46;:::i;:::-;31441:54;29983:1518;-1:-1:-1;;;;;;;;;;;;29983:1518:153:o;31506:545::-;31599:4;31605:6;31665:11;31652:25;31759:2;31755:7;31744:8;31728:14;31724:29;31720:43;31700:18;31696:68;31686:96;;31778:1;31775;31768:12;31686:96;31805:33;;31857:20;;;-1:-1:-1;;;;;;31889:30:153;;31886:50;;;31932:1;31929;31922:12;31886:50;31965:4;31953:17;;-1:-1:-1;32016:1:153;32012:14;;;31996;31992:35;31982:46;;31979:66;;;32041:1;32038;32031:12;32327:1350;32775:3;32788:22;;;32760:19;;32845:22;;;32727:4;32925:6;32898:3;32883:19;;32727:4;32959:281;32973:6;32970:1;32967:13;32959:281;;;33048:6;33035:20;33068:31;33093:5;33068:31;:::i;:::-;-1:-1:-1;;;;;33124:31:153;33112:44;;33185:4;33213:17;;;;33176:14;;;;33152:1;32988:9;32959:281;;;32963:3;33278:6;33271:4;33260:9;33256:20;33249:36;33294:46;33336:2;33325:9;33321:18;33313:6;-1:-1:-1;;;;;306:31:153;294:44;;240:104;33294:46;33385:9;33380:3;33376:19;33371:2;33360:9;33356:18;33349:47;33413:46;33455:3;33447:6;33439;33413:46;:::i;:::-;33405:54;;;;33468:47;33510:3;33499:9;33495:19;33487:6;-1:-1:-1;;;;;306:31:153;294:44;;240:104;33468:47;-1:-1:-1;;;;;306:31:153;;33566:3;33551:19;;294:44;33608:6;33602:3;33591:9;33587:19;33580:35;33624:47;33666:3;33655:9;33651:19;33643:6;-1:-1:-1;;;;;306:31:153;294:44;;240:104;33682:360;33893:6;33885;33880:3;33867:33;33963:2;33959:15;;;;-1:-1:-1;;;;;;33955:53:153;33919:16;;33944:65;;;34033:2;34025:11;;33682:360;-1:-1:-1;33682:360:153:o;34413:402::-;34646:2;34635:9;34628:21;34609:4;34666:74;34736:2;34725:9;34721:18;34713:6;34666:74;:::i;:::-;34658:82;;34805:1;34801;34796:3;34792:11;34788:19;34780:6;34776:32;34771:2;34760:9;34756:18;34749:60;34413:402;;;;;:::o;34820:461::-;34873:5;34926:3;34919:4;34911:6;34907:17;34903:27;34893:55;;34944:1;34941;34934:12;34893:55;34977:6;34971:13;35008:52;35024:35;35052:6;35024:35;:::i;35008:52::-;35085:6;35076:7;35069:23;35139:3;35132:4;35123:6;35115;35111:19;35107:30;35104:39;35101:59;;;35156:1;35153;35146:12;35101:59;35169:81;35243:6;35236:4;35227:7;35223:18;35216:4;35208:6;35204:17;35169:81;:::i;:::-;35268:7;34820:461;-1:-1:-1;;;;34820:461:153:o;35286:171::-;35364:13;;35417:14;35406:26;;35396:37;;35386:65;;35447:1;35444;35437:12;35462:720;35575:6;35583;35591;35599;35652:3;35640:9;35631:7;35627:23;35623:33;35620:53;;;35669:1;35666;35659:12;35620:53;35702:9;35696:16;-1:-1:-1;;;;;35727:6:153;35724:30;35721:50;;;35767:1;35764;35757:12;35721:50;35790:60;35842:7;35833:6;35822:9;35818:22;35790:60;:::i;:::-;35780:70;;;35869:48;35913:2;35902:9;35898:18;35869:48;:::i;:::-;35859:58;;35936:48;35980:2;35969:9;35965:18;35936:48;:::i;:::-;35926:58;;36030:2;36019:9;36015:18;36009:25;-1:-1:-1;;;;;36049:8:153;36046:32;36043:52;;;36091:1;36088;36081:12;36043:52;36114:62;36168:7;36157:8;36146:9;36142:24;36114:62;:::i;:::-;36104:72;;;35462:720;;;;;;;:::o;36187:127::-;36248:10;36243:3;36239:20;36236:1;36229:31;36279:4;36276:1;36269:15;36303:4;36300:1;36293:15;36319:135;36358:3;36379:17;;;36376:43;;36399:18;;:::i;:::-;-1:-1:-1;36446:1:153;36435:13;;36319:135::o;36459:168::-;36532:9;;;36563;;36580:15;;;36574:22;;36560:37;36550:71;;36601:18;;:::i;36972:125::-;37037:9;;;37058:10;;;37055:36;;;37071:18;;:::i;37758:288::-;37933:6;37922:9;37915:25;37976:2;37971;37960:9;37956:18;37949:30;37896:4;37996:44;38036:2;38025:9;38021:18;38013:6;37996:44;:::i;38051:290::-;38120:6;38173:2;38161:9;38152:7;38148:23;38144:32;38141:52;;;38189:1;38186;38179:12;38141:52;38215:16;;-1:-1:-1;;;;;;38260:32:153;;38250:43;;38240:71;;38307:1;38304;38297:12;38346:151;38436:4;38429:12;;;38415;;;38411:31;;38454:14;;38451:40;;;38471:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "64381": [
        { "start": 246, "length": 32 },
        { "start": 1385, "length": 32 },
        { "start": 2451, "length": 32 },
        { "start": 4368, "length": 32 }
      ],
      "64383": [
        { "start": 426, "length": 32 },
        { "start": 1470, "length": 32 },
        { "start": 4263, "length": 32 },
        { "start": 5098, "length": 32 }
      ],
      "64386": [
        { "start": 345, "length": 32 },
        { "start": 1168, "length": 32 },
        { "start": 4038, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "REGISTRY()": "06433b1b",
    "SUPPORTED_ENTRYPOINT()": "137e051e",
    "accountId()": "9cfd7cff",
    "addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": "d78343d9",
    "domainSeparator()": "f698da25",
    "getInitHash()": "3c9de1b8",
    "getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)": "55d559f4",
    "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "928107f9",
    "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": "15cca638",
    "preValidationSetup(bytes32,address,bytes)": "4fff40e1",
    "predictSafeAddress(address,address,bytes,bytes32,bytes)": "663c87d8",
    "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "d9ed0e8f",
    "supportsExecutionMode(bytes32)": "d03c7914",
    "supportsModule(uint256)": "f2dc691d",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSetup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUserOperationData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyProxy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreValidationSetupFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Safe7579LaunchpadAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"contractSignature\",\"type\":\"bytes\"}],\"name\":\"WrongContractSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractSignatureLen\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signaturesLen\",\"type\":\"uint256\"}],\"name\":\"WrongContractSignatureFormat\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTRY\",\"outputs\":[{\"internalType\":\"contract IERC7484\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPPORTED_ENTRYPOINT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"addSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"}],\"name\":\"getSafeOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"operationData\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"initSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"initHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preInit\",\"type\":\"bytes\"}],\"name\":\"preValidationSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safeProxyFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"factoryInitializer\",\"type\":\"bytes\"}],\"name\":\"predictSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"safeProxy\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"initData\",\"type\":\"tuple\"}],\"name\":\"setupSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ModeCode\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"rhinestone | zeroknots.eth\",\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account the accountId should be structured like so:        \\\"vendorname.accountname.semver\\\"\"}},\"getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)\":{\"details\":\"Decodes an ERC-4337 user operation into a Safe operation.\",\"params\":{\"userOp\":\"The ERC-4337 user operation.\"},\"returns\":{\"operationData\":\"Encoded EIP-712 Safe operation data bytes used for signature verification.\",\"signatures\":\"The Safe owner signatures extracted from the user operation.\",\"validAfter\":\"The timestamp the user operation is valid from.\",\"validUntil\":\"The timestamp the user operation is valid until.\"}},\"preValidationSetup(bytes32,address,bytes)\":{\"params\":{\"initHash\":\"will be calculated offchain using this.hash(InitData)\",\"preInit\":\"optional parameter for a delegatecall\",\"to\":\"optional parameter for a delegatecall\"}},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"details\":\"factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"params\":{\"initData\":\"initData to initialize the Safe and Safe7579 Adapter\"}},\"supportsExecutionMode(bytes32)\":{\"params\":{\"encodedMode\":\"the encoded mode\"}},\"supportsModule(uint256)\":{\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"amount of gas that has to be paid\",\"userOp\":\"EntryPoint v0.7 userOp.\",\"userOpHash\":\"hash of userOp\"},\"returns\":{\"validationData\":\"4337 packed validation data returned by the validator module\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function allows existing safe accounts to add the Safe7579 adapter to their account\"},\"hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"Create unique InitData hash. Using all params but excluding data.callData from hash\"},\"initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function.\"},\"preValidationSetup(bytes32,address,bytes)\":{\"notice\":\"SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage\"},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"notice\":\"Helper function that can be used offchain to predict the counterfactual Safe address.\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable.\"},\"supportsExecutionMode(bytes32)\":{\"notice\":\"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)\"},\"supportsModule(uint256)\":{\"notice\":\"Function to check if the account supports installation of a certain module type Id\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required.\"}},\"notice\":\"Launchpad to deploy a Safe account and connect the Safe7579 adapter. Check Readme.md for more information. Special thanks to [nlordell (Safe)](https://github.com/nlordell), who came up with [this technique](https://github.com/safe-global/safe-modules/pull/184)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Safe7579Launchpad.sol\":\"Safe7579Launchpad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@rhinestone/checknsignatures/src/CheckNSignatures.sol\":{\"keccak256\":\"0x8392bfc019b80519960685df058636a57011b09925d7a351ae3c63aad40cda73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfafd74f1f0e61b9442436e807529600696eb38559c35b5c10a213bdbf6e2363\",\"dweb:/ipfs/QmXFG4cyBJeZmyENTwGc9xcygCg9qK3SHsN3z6kvSPbnHm\"]},\"node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"node_modules/erc7579/src/interfaces/IERC7579Module.sol\":{\"keccak256\":\"0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5\",\"dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC\"]},\"node_modules/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]},\"node_modules/solady/src/utils/LibSort.sol\":{\"keccak256\":\"0x39ea0fe7c9f2138c890e37df2adbe83e222deda7271e2717f98fa42556ab93ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdeea46531d4e8ccbaa1e4ed33e41b3a3f4c45fc76f54d06f4d4d213cb1d231\",\"dweb:/ipfs/QmckdgpGYChN5YC5AjK2FLXre225nvTixQhDQ8aewrdgMQ\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b\",\"dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3\"]},\"src/ISafe7579.sol\":{\"keccak256\":\"0x68b257c2033b7eee3d99edb15fb2be03a82e8a3f7cd250a584c5e98aff86ca8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5e8f686ddc576f82f9980038e79f9b2768df246fbea928dc6a05068bb9eca98\",\"dweb:/ipfs/QmbbU5EiHJVkzyPgAMj5HfoX6fEuFYcq1SnsZGjHgJU8X9\"]},\"src/Safe7579Launchpad.sol\":{\"keccak256\":\"0xe92c16b1da189f17e6578034b6b6ddb7a9a970378ac028c12d7dc614f90707bf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://87cae95ead2e9c2b1015310c0e0ffb741821736ac5dfb151df1cc96a44d4ff2e\",\"dweb:/ipfs/QmVRJePNMv3ZH9kxg7kSwz7NAuxDjt99tT6BcnG99YTNbJ\"]},\"src/core/SafeOp.sol\":{\"keccak256\":\"0xb6473e02037d90a434fc5ea0717d5e40e5d7da9a490d21772e2942d90e32142e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4ce5dc42ad8033dfa9202b09507818ddae2500b58a491067a73ff0a854e36e04\",\"dweb:/ipfs/QmbXe7jzBmohrpw4SP69m38DTnD4CMPh4LQrErUWLHk8LQ\"]},\"src/core/SupportViewer.sol\":{\"keccak256\":\"0x214e94440a962e25ea949099c508d40464e43630373e76b9836d56c2b1733faf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://afba234e2d09d13cb65ad7d153f0c030f2950a882908e518ee94cbd09d0e1ccd\",\"dweb:/ipfs/QmTvfGKT8EhLJQTJSLow8YGposfdeyhntsNG8C1aRfY3NW\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c\",\"dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F\"]},\"src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d\",\"dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe\"]},\"src/interfaces/ISafe.sol\":{\"keccak256\":\"0x1e8b6e12f66c5ea5609ea89048e9985bc921c69fdfbbf54315c40c64dc5f9a6f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dab4c6c2fdb2418c41e7acce370b9be26b4d66f9654d4f04b6aacdae1aa73457\",\"dweb:/ipfs/QmTbkzmhvMHwhLMpDBEYFscrkAkfEtnkbhGYVVMkVP7Qx4\"]},\"src/interfaces/ISafeOp.sol\":{\"keccak256\":\"0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2\",\"dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc\"]},\"src/lib/ModeLib.sol\":{\"keccak256\":\"0x110ff117c12644827ba62776ef47e3936ee6b233037710907c841c3c7c96b05c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed405d749d1bed879b6c02cc4a4dac096481ffa7348cf9cc91889ec5ee6b61f0\",\"dweb:/ipfs/QmNPySGT6ZLaZBJEnmCDUxEjiMpBx2hByhUW2dwtkr7Pwc\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IERC7484",
              "name": "registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "InvalidEntryPoint" },
        { "inputs": [], "type": "error", "name": "InvalidInitHash" },
        { "inputs": [], "type": "error", "name": "InvalidSetup" },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "InvalidUserOperationData" },
        { "inputs": [], "type": "error", "name": "OnlyDelegatecall" },
        { "inputs": [], "type": "error", "name": "OnlyProxy" },
        { "inputs": [], "type": "error", "name": "PreValidationSetupFailed" },
        {
          "inputs": [],
          "type": "error",
          "name": "Safe7579LaunchpadAlreadyInitialized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "contractSignature",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "WrongContractSignature"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "s", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "contractSignatureLen",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signaturesLen",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WrongContractSignatureFormat"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInstalled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleUninstalled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REGISTRY",
          "outputs": [
            {
              "internalType": "contract IERC7484",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SUPPORTED_ENTRYPOINT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "accountId",
          "outputs": [
            {
              "internalType": "string",
              "name": "accountImplementationId",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe7579",
              "type": "address"
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "validators",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "executors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "fallbacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "hooks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            { "internalType": "uint8", "name": "threshold", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSafe7579"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInitHash",
          "outputs": [
            { "internalType": "bytes32", "name": "value", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafeOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "operationData",
              "type": "bytes"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            { "internalType": "bytes", "name": "signatures", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe7579",
              "type": "address"
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "executors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "fallbacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "hooks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            { "internalType": "uint8", "name": "threshold", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initSafe7579"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "initHash",
              "type": "bytes32"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "bytes", "name": "preInit", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "preValidationSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "singleton",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "safeProxyFactory",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "creationCode",
              "type": "bytes"
            },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "bytes",
              "name": "factoryInitializer",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "predictSafeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "safeProxy",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "initData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupSafe"
        },
        {
          "inputs": [
            {
              "internalType": "ModeCode",
              "name": "encodedMode",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsExecutionMode",
          "outputs": [
            { "internalType": "bool", "name": "supported", "type": "bool" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsModule",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accountId()": {
            "details": "Returns the account id of the smart account",
            "returns": {
              "accountImplementationId": "the account id of the smart account the accountId should be structured like so:        \"vendorname.accountname.semver\""
            }
          },
          "getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)": {
            "details": "Decodes an ERC-4337 user operation into a Safe operation.",
            "params": { "userOp": "The ERC-4337 user operation." },
            "returns": {
              "operationData": "Encoded EIP-712 Safe operation data bytes used for signature verification.",
              "signatures": "The Safe owner signatures extracted from the user operation.",
              "validAfter": "The timestamp the user operation is valid from.",
              "validUntil": "The timestamp the user operation is valid until."
            }
          },
          "preValidationSetup(bytes32,address,bytes)": {
            "params": {
              "initHash": "will be calculated offchain using this.hash(InitData)",
              "preInit": "optional parameter for a delegatecall",
              "to": "optional parameter for a delegatecall"
            }
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "details": "factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));"
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "params": {
              "initData": "initData to initialize the Safe and Safe7579 Adapter"
            }
          },
          "supportsExecutionMode(bytes32)": {
            "params": { "encodedMode": "the encoded mode" }
          },
          "supportsModule(uint256)": {
            "params": {
              "moduleTypeId": "the module type ID according the ERC-7579 spec"
            }
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "params": {
              "missingAccountFunds": "amount of gas that has to be paid",
              "userOp": "EntryPoint v0.7 userOp.",
              "userOpHash": "hash of userOp"
            },
            "returns": {
              "validationData": "4337 packed validation data returned by the validator module"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": {
            "notice": "This function allows existing safe accounts to add the Safe7579 adapter to their account"
          },
          "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "Create unique InitData hash. Using all params but excluding data.callData from hash"
          },
          "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": {
            "notice": "This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function."
          },
          "preValidationSetup(bytes32,address,bytes)": {
            "notice": "SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage"
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "notice": "Helper function that can be used offchain to predict the counterfactual Safe address."
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable."
          },
          "supportsExecutionMode(bytes32)": {
            "notice": "Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)"
          },
          "supportsModule(uint256)": {
            "notice": "Function to check if the account supports installation of a certain module type Id"
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC4337/=node_modules/@ERC4337/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/math/=node_modules/@prb/math/src/",
        "@rhinestone/=node_modules/@rhinestone/",
        "@safe-global/=node_modules/@safe-global/",
        "account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "erc7579/=node_modules/erc7579/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "module-bases/=node_modules/@rhinestone/module-bases/src/",
        "modulekit/=node_modules/@rhinestone/modulekit/src/",
        "sentinellist/=node_modules/@rhinestone/sentinellist/src/",
        "solady/=node_modules/solady/src/",
        "solarray/=node_modules/solarray/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Safe7579Launchpad.sol": "Safe7579Launchpad" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@rhinestone/checknsignatures/src/CheckNSignatures.sol": {
        "keccak256": "0x8392bfc019b80519960685df058636a57011b09925d7a351ae3c63aad40cda73",
        "urls": [
          "bzz-raw://cfafd74f1f0e61b9442436e807529600696eb38559c35b5c10a213bdbf6e2363",
          "dweb:/ipfs/QmXFG4cyBJeZmyENTwGc9xcygCg9qK3SHsN3z6kvSPbnHm"
        ],
        "license": "MIT"
      },
      "node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/erc7579/src/interfaces/IERC7579Module.sol": {
        "keccak256": "0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604",
        "urls": [
          "bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5",
          "dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/ECDSA.sol": {
        "keccak256": "0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4",
        "urls": [
          "bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc",
          "dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/LibSort.sol": {
        "keccak256": "0x39ea0fe7c9f2138c890e37df2adbe83e222deda7271e2717f98fa42556ab93ce",
        "urls": [
          "bzz-raw://ebdeea46531d4e8ccbaa1e4ed33e41b3a3f4c45fc76f54d06f4d4d213cb1d231",
          "dweb:/ipfs/QmckdgpGYChN5YC5AjK2FLXre225nvTixQhDQ8aewrdgMQ"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d",
        "urls": [
          "bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b",
          "dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3"
        ],
        "license": "GPL-3.0"
      },
      "src/ISafe7579.sol": {
        "keccak256": "0x68b257c2033b7eee3d99edb15fb2be03a82e8a3f7cd250a584c5e98aff86ca8b",
        "urls": [
          "bzz-raw://c5e8f686ddc576f82f9980038e79f9b2768df246fbea928dc6a05068bb9eca98",
          "dweb:/ipfs/QmbbU5EiHJVkzyPgAMj5HfoX6fEuFYcq1SnsZGjHgJU8X9"
        ],
        "license": "MIT"
      },
      "src/Safe7579Launchpad.sol": {
        "keccak256": "0xe92c16b1da189f17e6578034b6b6ddb7a9a970378ac028c12d7dc614f90707bf",
        "urls": [
          "bzz-raw://87cae95ead2e9c2b1015310c0e0ffb741821736ac5dfb151df1cc96a44d4ff2e",
          "dweb:/ipfs/QmVRJePNMv3ZH9kxg7kSwz7NAuxDjt99tT6BcnG99YTNbJ"
        ],
        "license": "GPL-3.0"
      },
      "src/core/SafeOp.sol": {
        "keccak256": "0xb6473e02037d90a434fc5ea0717d5e40e5d7da9a490d21772e2942d90e32142e",
        "urls": [
          "bzz-raw://4ce5dc42ad8033dfa9202b09507818ddae2500b58a491067a73ff0a854e36e04",
          "dweb:/ipfs/QmbXe7jzBmohrpw4SP69m38DTnD4CMPh4LQrErUWLHk8LQ"
        ],
        "license": "GPL-3.0"
      },
      "src/core/SupportViewer.sol": {
        "keccak256": "0x214e94440a962e25ea949099c508d40464e43630373e76b9836d56c2b1733faf",
        "urls": [
          "bzz-raw://afba234e2d09d13cb65ad7d153f0c030f2950a882908e518ee94cbd09d0e1ccd",
          "dweb:/ipfs/QmTvfGKT8EhLJQTJSLow8YGposfdeyhntsNG8C1aRfY3NW"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IERC7484.sol": {
        "keccak256": "0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff",
        "urls": [
          "bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c",
          "dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC7579Account.sol": {
        "keccak256": "0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d",
        "urls": [
          "bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d",
          "dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISafe.sol": {
        "keccak256": "0x1e8b6e12f66c5ea5609ea89048e9985bc921c69fdfbbf54315c40c64dc5f9a6f",
        "urls": [
          "bzz-raw://dab4c6c2fdb2418c41e7acce370b9be26b4d66f9654d4f04b6aacdae1aa73457",
          "dweb:/ipfs/QmTbkzmhvMHwhLMpDBEYFscrkAkfEtnkbhGYVVMkVP7Qx4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/interfaces/ISafeOp.sol": {
        "keccak256": "0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa",
        "urls": [
          "bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2",
          "dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc"
        ],
        "license": "MIT"
      },
      "src/lib/ModeLib.sol": {
        "keccak256": "0x110ff117c12644827ba62776ef47e3936ee6b233037710907c841c3c7c96b05c",
        "urls": [
          "bzz-raw://ed405d749d1bed879b6c02cc4a4dac096481ffa7348cf9cc91889ec5ee6b61f0",
          "dweb:/ipfs/QmNPySGT6ZLaZBJEnmCDUxEjiMpBx2hByhUW2dwtkr7Pwc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 114
}

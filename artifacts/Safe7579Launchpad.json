{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "entryPoint", "type": "address", "internalType": "address" },
        {
          "name": "registry",
          "type": "address",
          "internalType": "contract IERC7484"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "REGISTRY",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC7484" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SUPPORTED_ENTRYPOINT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "_initHash",
      "inputs": [],
      "outputs": [
        { "name": "value", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hash",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initSafe7579",
      "inputs": [
        { "name": "safe7579", "type": "address", "internalType": "address" },
        {
          "name": "executors",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "fallbacks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "hooks",
          "type": "tuple[]",
          "internalType": "struct ModuleInit[]",
          "components": [
            { "name": "module", "type": "address", "internalType": "address" },
            { "name": "initData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "preValidationSetup",
      "inputs": [
        { "name": "initHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "preInit", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "predictSafeAddress",
      "inputs": [
        { "name": "singleton", "type": "address", "internalType": "address" },
        {
          "name": "safeProxyFactory",
          "type": "address",
          "internalType": "address"
        },
        { "name": "creationCode", "type": "bytes", "internalType": "bytes" },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "factoryInitializer",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        { "name": "safeProxy", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "setupSafe",
      "inputs": [
        {
          "name": "initData",
          "type": "tuple",
          "internalType": "struct Safe7579Launchpad.InitData",
          "components": [
            {
              "name": "singleton",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "owners",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "threshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "setupTo", "type": "address", "internalType": "address" },
            { "name": "setupData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "safe7579",
              "type": "address",
              "internalType": "contract ISafe7579"
            },
            {
              "name": "validators",
              "type": "tuple[]",
              "internalType": "struct ModuleInit[]",
              "components": [
                {
                  "name": "module",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "initData", "type": "bytes", "internalType": "bytes" }
              ]
            },
            { "name": "callData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "userOpHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ModuleInstalled",
      "inputs": [
        {
          "name": "moduleTypeId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "InvalidEntryPoint", "inputs": [] },
    { "type": "error", "name": "InvalidInitHash", "inputs": [] },
    { "type": "error", "name": "InvalidUserOperationData", "inputs": [] },
    { "type": "error", "name": "OnlyDelegatecall", "inputs": [] },
    { "type": "error", "name": "OnlyProxy", "inputs": [] },
    { "type": "error", "name": "PreValidationSetupFailed", "inputs": [] }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "813:12126:97:-:0;;;2187:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2252:24:97;;2248:56;;2285:19;;-1:-1:-1;;;2285:19:97;;;;;;;;;;;2248:56;2330:4;2315:20;;-1:-1:-1;;;;;2345:33:97;;;;;2388:19;;;813:12126;;14:131:130;-1:-1:-1;;;;;89:31:130;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:403::-;247:6;255;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;356:9;350:16;375:31;400:5;375:31;:::i;:::-;475:2;460:18;;454:25;425:5;;-1:-1:-1;488:33:130;454:25;488:33;:::i;:::-;540:7;530:17;;;150:403;;;;;:::o;:::-;813:12126:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "813:12126:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;196:32:130;;;178:51;;166:2;151:18;1956:34:97;;;;;;;;1905:45;;;;;;;;;;;;;;;3055:655;;;;;;;;;;-1:-1:-1;3055:655:97;;;;;:::i;:::-;;:::i;:::-;;6011:2317;;;;;;;;;;-1:-1:-1;6011:2317:97;;;;;:::i;:::-;;:::i;:::-;;;3794:25:130;;;3782:2;3767:18;6011:2317:97;3648:177:130;4135:464:97;;;;;;;;;;-1:-1:-1;4135:464:97;;;;;:::i;:::-;;:::i;11566:892::-;;;;;;;;;;-1:-1:-1;11566:892:97;;;;;:::i;:::-;;:::i;12571:366::-;;;;;;;;;;-1:-1:-1;12571:366:97;;;;;:::i;:::-;;:::i;10861:208::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;11032:21:97;10861:208;;9102:1549;;;;;;;;;;-1:-1:-1;9102:1549:97;;;;;:::i;:::-;;:::i;3055:655::-;2462:10;2484:4;2462:27;2458:58;;2498:18;;-1:-1:-1;;;2498:18:97;;;;;;;;;;;2458:58;3345:43:::1;::::0;-1:-1:-1;;;3345:43:97;;-1:-1:-1;;;;;196:32:130;;3345:43:97::1;::::0;::::1;178:51:130::0;3359:4:97::1;::::0;3345:33:::1;::::0;151:18:130;;3345:43:97::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3471:19:97::1;::::0;;3488:1:::1;3471:19:::0;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;3398:46:97;::::1;::::0;-1:-1:-1;3398:46:97::1;::::0;-1:-1:-1;3471:19:97;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;3471:19:97::1;;;;;;;;;;;;;;;;3515:9;;3549;;3579:5;;3612:80;;;;;;;;3637:8;-1:-1:-1::0;;;;;3612:80:97::1;;;;;3658:9;;3612:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;3612:80:97;;;-1:-1:-1;3612:80:97::1;::::0;::::1;;::::0;;::::1;::::0;3398:305:::1;::::0;-1:-1:-1;;;;;;3398:305:97::1;::::0;;;;;;::::1;::::0;;;;;;;;;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3055:655:::0;;;;;;;;;;:::o;6011:2317::-;6284:22;2575:9;;2588:4;-1:-1:-1;;;;;2575:17:97;;;:9;;:17;2571:41;;2601:11;;-1:-1:-1;;;2601:11:97;;;;;;;;;;;2571:41;2685:10:::1;-1:-1:-1::0;;;;;2699:20:97::1;2685:34;;2681:66;;2728:19;;-1:-1:-1::0;;;2728:19:97::1;;;;;;;;;;;2681:66;6360:15:::2;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;6377:1:::2;::::0;6360:19:::2;::::0;::::2;:::i;:::-;6353:27;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;;6326:54:97::2;-1:-1:-1::0;;;6326:54:97::2;6322:118;;6403:26;;-1:-1:-1::0;;;6403:26:97::2;;;;;;;;;;;6322:118;6450:24;6488:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;:19;::::0;6504:1:::2;::::0;6488:19;;::::2;:::i;:::-;6477:43;;;;;;;:::i;:::-;6450:70;;6650:11;-1:-1:-1::0;;;;;;;;;;;11032:21:97;;10861:208;6650:11:::2;6632:14;6637:8;6632:4;:14::i;:::-;:29;6628:59;;6670:17;;-1:-1:-1::0;;;6670:17:97::2;;;;;;;;;;;6628:59;7006:17;::::0;::::2;::::0;7045:19:::2;::::0;::::2;::::0;6996:69:::2;::::0;-1:-1:-1;;;6996:69:97;;6786:12:::2;::::0;::::2;;6904:2;6900:14:::0;;::::2;::::0;6786:12;;-1:-1:-1;;;;;6996:48:97;;::::2;::::0;::::2;::::0;:69:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;7358:19:97::2;::::0;::::2;::::0;:26;7292:29:::2;::::0;-1:-1:-1;7292:29:97;7394:341:::2;7414:16;7410:1;:20;7394:341;;;7451:23;7477:8;:19;;;7497:1;7477:22;;;;;;;;:::i;:::-;;;;;;;:29;;;7451:55;;7531:15;-1:-1:-1::0;;;;;7520:37:97::2;;7558:8;:19;;;7578:1;7558:22;;;;;;;;:::i;:::-;;;;;;;:31;;;7520:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7609:35:97::2;::::0;;7625:1:::2;19059:25:130::0;;-1:-1:-1;;;;;19120:32:130;;19115:2;19100:18;;19093:60;7609:35:97::2;::::0;-1:-1:-1;19032:18:130;;-1:-1:-1;7609:35:97::2;;;;;;;7682:9;-1:-1:-1::0;;;;;7663:28:97::2;:15;-1:-1:-1::0;;;;;7663:28:97::2;::::0;7659:65:::2;;7720:4;7693:31;;7659:65;-1:-1:-1::0;7432:3:97::2;;7394:341;;;;7866:24;7861:39;;7899:1;7892:8;;;;;;;;;7861:39;7988:56;::::0;-1:-1:-1;;;7988:56:97;;-1:-1:-1;;;;;7988:36:97;::::2;::::0;::::2;::::0;:56:::2;::::0;8025:6;;8033:10;;7988:56:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7971:73:::0;-1:-1:-1;8097:23:97;;8093:229:::2;;8295:1;8292::::0;8289::::2;8286::::0;8265:19:::2;8255:8;8248:5;8243:54;8239:59;8093:229;6312:2016;;;;;2757:1;6011:2317:::0;;;;;:::o;4135:464::-;2575:9;;2588:4;-1:-1:-1;;;;;2575:17:97;;;:9;;:17;2571:41;;2601:11;;-1:-1:-1;;;2601:11:97;;;;;;;;;;;2571:41;4323:22:::1;4336:8;-1:-1:-1::0;;;;;;;;;;;11269:29:97;11118:196;4323:22:::1;-1:-1:-1::0;;;;;4447:16:97;::::1;::::0;4443:150:::1;;4480:12;4497:2;-1:-1:-1::0;;;;;4497:15:97::1;4513:7;;4497:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:42;;;4540:7;4535:47;;4556:26;;-1:-1:-1::0;;;4556:26:97::1;;;;;;;;;;;4535:47;4465:128;4443:150;4135:464:::0;;;;:::o;11566:892::-;11806:17;11883:18;11873:29;;;;;;11904:4;11856:53;;;;;;;;21503:19:130;;;21547:2;21538:12;;21531:28;21584:2;21575:12;;21346:247;11856:53:97;;;;;;;;;;;;;11846:64;;;;;;11839:71;;12096:4;12089:12;;12139:16;12186:4;12280:12;12318:9;-1:-1:-1;;;;;12294:36:97;12263:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12220:141;;;;;;12043:344;;;;;;;;;;-1:-1:-1;;;;;;22209:26:130;;;;22197:39;;22273:2;22269:15;;;;-1:-1:-1;;22265:53:130;22261:1;22252:11;;22245:74;22344:2;22335:12;;22328:28;22381:2;22372:12;;22365:28;22418:2;22409:12;;21986:441;12043:344:97;;;;-1:-1:-1;;12043:344:97;;;;;;;;;12008:401;;12043:344;12008:401;;;;;11566:892;-1:-1:-1;;;;;;11566:892:97:o;12571:366::-;12705:14;;12737:11;;;;;12766:14;;;;;12798:12;;;;12828:14;;;;12860:13;;;;12891:15;;;;12677:243;;12628:7;;12677:243;;12705:14;;12737:11;12891:15;12677:243;;:::i;:::-;;;;;;;;;;;;;12654:276;;;;;;12647:283;;12571:366;;;:::o;9102:1549::-;2685:10;-1:-1:-1;;;;;2699:20:97;2685:34;;2681:66;;2728:19;;-1:-1:-1;;;2728:19:97;;;;;;;;;;;2681:66;9348:18:::1;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;9324:21;:42:::0;;-1:-1:-1;;;;;;9324:42:97::1;-1:-1:-1::0;;;;;9324:42:97;;;::::1;::::0;;;::::1;::::0;;9525:4:::1;9511:26;9561:15;;::::0;::::1;::::0;::::1;:::i;:::-;9602:18;::::0;::::1;;9638:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;9674:18;;::::0;::::1;:8:::0;:18:::1;:::i;:::-;9731:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;9785:1;9810::::0;9858::::1;9511:361;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9922:1:97::1;-1:-1:-1::0;;;;;;;;;;;11269:29:97;-1:-1:-1;9909:15:97::1;::::0;-1:-1:-1;11118:196:97;9909:15:::1;10154:12;::::0;10203:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10195:31:97::1;10274:17;;::::0;::::1;:8:::0;:17:::1;:::i;:::-;10377:4;10240:182;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;10240:182:97;;::::1;::::0;;;;;;;10195:237:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10153:279;;;;10447:7;10442:203;;10609:10;10603:17;10596:4;10584:10;10580:21;10573:48;10442:203;9182:1469;;9102:1549:::0;:::o;557:131:130:-;-1:-1:-1;;;;;632:31:130;;622:42;;612:70;;678:1;675;668:12;612:70;557:131;:::o;693:134::-;761:20;;790:31;761:20;790:31;:::i;:::-;693:134;;;:::o;832:386::-;914:8;924:6;978:3;971:4;963:6;959:17;955:27;945:55;;996:1;993;986:12;945:55;-1:-1:-1;1019:20:130;;-1:-1:-1;;;;;1051:30:130;;1048:50;;;1094:1;1091;1084:12;1048:50;1131:4;1123:6;1119:17;1107:29;;1191:3;1184:4;1174:6;1171:1;1167:14;1159:6;1155:27;1151:38;1148:47;1145:67;;;1208:1;1205;1198:12;1145:67;832:386;;;;;:::o;1223:156::-;1289:20;;1349:4;1338:16;;1328:27;;1318:55;;1369:1;1366;1359:12;1384:1719;1687:6;1695;1703;1711;1719;1727;1735;1743;1751;1759;1812:3;1800:9;1791:7;1787:23;1783:33;1780:53;;;1829:1;1826;1819:12;1780:53;1852:29;1871:9;1852:29;:::i;:::-;1842:39;;1932:2;1921:9;1917:18;1904:32;-1:-1:-1;;;;;1996:2:130;1988:6;1985:14;1982:34;;;2012:1;2009;2002:12;1982:34;2051:89;2132:7;2123:6;2112:9;2108:22;2051:89;:::i;:::-;2159:8;;-1:-1:-1;2025:115:130;-1:-1:-1;2247:2:130;2232:18;;2219:32;;-1:-1:-1;2263:16:130;;;2260:36;;;2292:1;2289;2282:12;2260:36;2331:91;2414:7;2403:8;2392:9;2388:24;2331:91;:::i;:::-;2441:8;;-1:-1:-1;2305:117:130;-1:-1:-1;2529:2:130;2514:18;;2501:32;;-1:-1:-1;2545:16:130;;;2542:36;;;2574:1;2571;2564:12;2542:36;2613:91;2696:7;2685:8;2674:9;2670:24;2613:91;:::i;:::-;2723:8;;-1:-1:-1;2587:117:130;-1:-1:-1;2811:3:130;2796:19;;2783:33;;-1:-1:-1;2828:16:130;;;2825:36;;;2857:1;2854;2847:12;2825:36;;2896:91;2979:7;2968:8;2957:9;2953:24;2896:91;:::i;:::-;3006:8;;-1:-1:-1;2870:117:130;-1:-1:-1;3060:37:130;;-1:-1:-1;3092:3:130;3077:19;;3060:37;:::i;:::-;3050:47;;1384:1719;;;;;;;;;;;;;:::o;3108:535::-;3224:6;3232;3240;3293:2;3281:9;3272:7;3268:23;3264:32;3261:52;;;3309:1;3306;3299:12;3261:52;3349:9;3336:23;-1:-1:-1;;;;;3374:6:130;3371:30;3368:50;;;3414:1;3411;3404:12;3368:50;3437:22;;3493:3;3475:16;;;3471:26;3468:46;;;3510:1;3507;3500:12;3468:46;3533:2;3582;3567:18;;3554:32;;-1:-1:-1;3633:2:130;3618:18;;;3605:32;;3108:535;-1:-1:-1;;;3108:535:130:o;3830:794::-;3918:6;3926;3934;3942;3995:2;3983:9;3974:7;3970:23;3966:32;3963:52;;;4011:1;4008;4001:12;3963:52;4047:9;4034:23;4024:33;;4107:2;4096:9;4092:18;4079:32;4120:31;4145:5;4120:31;:::i;:::-;4170:5;-1:-1:-1;4226:2:130;4211:18;;4198:32;-1:-1:-1;;;;;4279:14:130;;;4276:34;;;4306:1;4303;4296:12;4276:34;4344:6;4333:9;4329:22;4319:32;;4389:7;4382:4;4378:2;4374:13;4370:27;4360:55;;4411:1;4408;4401:12;4360:55;4451:2;4438:16;4477:2;4469:6;4466:14;4463:34;;;4493:1;4490;4483:12;4463:34;4538:7;4533:2;4524:6;4520:2;4516:15;4512:24;4509:37;4506:57;;;4559:1;4556;4549:12;4506:57;3830:794;;;;-1:-1:-1;;4590:2:130;4582:11;;-1:-1:-1;;;3830:794:130:o;4629:127::-;4690:10;4685:3;4681:20;4678:1;4671:31;4721:4;4718:1;4711:15;4745:4;4742:1;4735:15;4761:257;4833:4;4827:11;;;4865:17;;-1:-1:-1;;;;;4897:34:130;;4933:22;;;4894:62;4891:88;;;4959:18;;:::i;:::-;4995:4;4988:24;4761:257;:::o;5023:255::-;5095:2;5089:9;5137:6;5125:19;;-1:-1:-1;;;;;5159:34:130;;5195:22;;;5156:62;5153:88;;;5221:18;;:::i;5283:275::-;5354:2;5348:9;5419:2;5400:13;;-1:-1:-1;;5396:27:130;5384:40;;-1:-1:-1;;;;;5439:34:130;;5475:22;;;5436:62;5433:88;;;5501:18;;:::i;:::-;5537:2;5530:22;5283:275;;-1:-1:-1;5283:275:130:o;5563:530::-;5605:5;5658:3;5651:4;5643:6;5639:17;5635:27;5625:55;;5676:1;5673;5666:12;5625:55;5712:6;5699:20;-1:-1:-1;;;;;5734:2:130;5731:26;5728:52;;;5760:18;;:::i;:::-;5804:55;5847:2;5828:13;;-1:-1:-1;;5824:27:130;5853:4;5820:38;5804:55;:::i;:::-;5884:2;5875:7;5868:19;5930:3;5923:4;5918:2;5910:6;5906:15;5902:26;5899:35;5896:55;;;5947:1;5944;5937:12;5896:55;6012:2;6005:4;5997:6;5993:17;5986:4;5977:7;5973:18;5960:55;6060:1;6035:16;;;6053:4;6031:27;6024:38;;;;6039:7;5563:530;-1:-1:-1;;;5563:530:130:o;6098:885::-;6211:6;6219;6227;6235;6243;6296:3;6284:9;6275:7;6271:23;6267:33;6264:53;;;6313:1;6310;6303:12;6264:53;6352:9;6339:23;6371:31;6396:5;6371:31;:::i;:::-;6421:5;-1:-1:-1;6478:2:130;6463:18;;6450:32;6491:33;6450:32;6491:33;:::i;:::-;6543:7;-1:-1:-1;6601:2:130;6586:18;;6573:32;-1:-1:-1;;;;;6654:14:130;;;6651:34;;;6681:1;6678;6671:12;6651:34;6704:49;6745:7;6736:6;6725:9;6721:22;6704:49;:::i;:::-;6694:59;;6800:2;6789:9;6785:18;6772:32;6762:42;;6857:3;6846:9;6842:19;6829:33;6813:49;;6887:2;6877:8;6874:16;6871:36;;;6903:1;6900;6893:12;6871:36;;6926:51;6969:7;6958:8;6947:9;6943:24;6926:51;:::i;:::-;6916:61;;;6098:885;;;;;;;;:::o;6988:183::-;7048:4;-1:-1:-1;;;;;7073:6:130;7070:30;7067:56;;;7103:18;;:::i;:::-;-1:-1:-1;7148:1:130;7144:14;7160:4;7140:25;;6988:183::o;7176:743::-;7230:5;7283:3;7276:4;7268:6;7264:17;7260:27;7250:55;;7301:1;7298;7291:12;7250:55;7337:6;7324:20;7363:4;7387:60;7403:43;7443:2;7403:43;:::i;:::-;7387:60;:::i;:::-;7469:3;7493:2;7488:3;7481:15;7521:4;7516:3;7512:14;7505:21;;7578:4;7572:2;7569:1;7565:10;7557:6;7553:23;7549:34;7535:48;;7606:3;7598:6;7595:15;7592:35;;;7623:1;7620;7613:12;7592:35;7659:4;7651:6;7647:17;7673:217;7689:6;7684:3;7681:15;7673:217;;;7769:3;7756:17;7786:31;7811:5;7786:31;:::i;:::-;7830:18;;7868:12;;;;7706;;7673:217;;;-1:-1:-1;7908:5:130;7176:743;-1:-1:-1;;;;;;7176:743:130:o;7924:1525::-;7988:5;8041:3;8034:4;8026:6;8022:17;8018:27;8008:55;;8059:1;8056;8049:12;8008:55;8095:6;8082:20;8121:4;8145:60;8161:43;8201:2;8161:43;:::i;8145:60::-;8239:15;;;8325:1;8321:10;;;;8309:23;;8305:32;;;8270:12;;;;8349:15;;;8346:35;;;8377:1;8374;8367:12;8346:35;8413:2;8405:6;8401:15;8425:995;8441:6;8436:3;8433:15;8425:995;;;8527:3;8514:17;-1:-1:-1;;;;;8604:2:130;8591:11;8588:19;8585:109;;;8648:1;8677:2;8673;8666:14;8585:109;8717:24;;;;8764:4;8792:12;;;-1:-1:-1;;8788:26:130;8784:35;-1:-1:-1;8781:125:130;;;8860:1;8889:2;8885;8878:14;8781:125;8932:22;;:::i;:::-;9003:2;8999;8995:11;8982:25;9020:33;9045:7;9020:33;:::i;:::-;9066:22;;9130:11;;;9117:25;;9158:16;;;9155:106;;;9215:1;9244:2;9240;9233:14;9155:106;9297:49;9342:3;9337:2;9326:8;9322:2;9318:17;9314:26;9297:49;:::i;:::-;9281:14;;;9274:73;9360:18;;-1:-1:-1;;;9398:12:130;;;;8458;;8425:995;;9454:1420;9540:6;9593:2;9581:9;9572:7;9568:23;9564:32;9561:52;;;9609:1;9606;9599:12;9561:52;9649:9;9636:23;-1:-1:-1;;;;;9719:2:130;9711:6;9708:14;9705:34;;;9735:1;9732;9725:12;9705:34;9758:22;;;;9814:6;9796:16;;;9792:29;9789:49;;;9834:1;9831;9824:12;9789:49;9860:22;;:::i;:::-;9905;9924:2;9905:22;:::i;:::-;9898:5;9891:37;9974:2;9970;9966:11;9953:25;10003:2;9993:8;9990:16;9987:36;;;10019:1;10016;10009:12;9987:36;10055:56;10103:7;10092:8;10088:2;10084:17;10055:56;:::i;:::-;10050:2;10043:5;10039:14;10032:80;;10165:2;10161;10157:11;10144:25;10139:2;10132:5;10128:14;10121:49;10202:31;10229:2;10225;10221:11;10202:31;:::i;:::-;10197:2;10190:5;10186:14;10179:55;10280:3;10276:2;10272:12;10259:26;10310:2;10300:8;10297:16;10294:36;;;10326:1;10323;10316:12;10294:36;10363:44;10399:7;10388:8;10384:2;10380:17;10363:44;:::i;:::-;10357:3;10350:5;10346:15;10339:69;;10441:32;10468:3;10464:2;10460:12;10441:32;:::i;:::-;10435:3;10428:5;10424:15;10417:57;10520:3;10516:2;10512:12;10499:26;10550:2;10540:8;10537:16;10534:36;;;10566:1;10563;10556:12;10534:36;10603:66;10661:7;10650:8;10646:2;10642:17;10603:66;:::i;:::-;10597:3;10590:5;10586:15;10579:91;;10716:3;10712:2;10708:12;10695:26;10746:2;10736:8;10733:16;10730:36;;;10762:1;10759;10752:12;10730:36;10799:44;10835:7;10824:8;10820:2;10816:17;10799:44;:::i;:::-;10793:3;10782:15;;10775:69;-1:-1:-1;10786:5:130;9454:1420;-1:-1:-1;;;;;9454:1420:130:o;11061:389::-;11149:6;11202:2;11190:9;11181:7;11177:23;11173:32;11170:52;;;11218:1;11215;11208:12;11170:52;11258:9;11245:23;-1:-1:-1;;;;;11283:6:130;11280:30;11277:50;;;11323:1;11320;11313:12;11277:50;11346:22;;11402:3;11384:16;;;11380:26;11377:46;;;11419:1;11416;11409:12;11455:250;11540:1;11550:113;11564:6;11561:1;11558:13;11550:113;;;11640:11;;;11634:18;11621:11;;;11614:39;11586:2;11579:10;11550:113;;;-1:-1:-1;;11697:1:130;11679:16;;11672:27;11455:250::o;11710:270::-;11751:3;11789:5;11783:12;11816:6;11811:3;11804:19;11832:76;11901:6;11894:4;11889:3;11885:14;11878:4;11871:5;11867:16;11832:76;:::i;:::-;11962:2;11941:15;-1:-1:-1;;11937:29:130;11928:39;;;;11969:4;11924:50;;11710:270;-1:-1:-1;;11710:270:130:o;11985:824::-;12048:3;12079;12111:5;12105:12;12138:6;12133:3;12126:19;12164:4;12193:2;12188:3;12184:12;12177:19;;12249:2;12239:6;12236:1;12232:14;12225:5;12221:26;12217:35;12286:2;12279:5;12275:14;12307:1;12317:466;12331:6;12328:1;12325:13;12317:466;;;12396:16;;;-1:-1:-1;;12392:30:130;12380:43;;12446:13;;12516:9;;-1:-1:-1;;;;;12512:35:130;12499:49;;12587:11;;12581:18;12482:4;12619:13;;;12612:25;;;12658:45;12689:13;;;12581:18;12658:45;:::i;:::-;12761:12;;;;12650:53;-1:-1:-1;;;12726:15:130;;;;12353:1;12346:9;12317:466;;;-1:-1:-1;12799:4:130;;11985:824;-1:-1:-1;;;;;;;11985:824:130:o;12814:500::-;12872:5;12879:6;12939:3;12926:17;13025:2;13021:7;13010:8;12994:14;12990:29;12986:43;12966:18;12962:68;12952:96;;13044:1;13041;13034:12;12952:96;13072:33;;13176:4;13163:18;;;-1:-1:-1;13124:21:130;;-1:-1:-1;;;;;;13193:30:130;;13190:50;;;13236:1;13233;13226:12;13190:50;13283:6;13267:14;13263:27;13256:5;13252:39;13249:59;;;13304:1;13301;13294:12;13319:266;13407:6;13402:3;13395:19;13459:6;13452:5;13445:4;13440:3;13436:14;13423:43;-1:-1:-1;13511:1:130;13486:16;;;13504:4;13482:27;;;13475:38;;;;13567:2;13546:15;;;-1:-1:-1;;13542:29:130;13533:39;;;13529:50;;13319:266::o;13590:1189::-;13679:3;13710;13734:6;13729:3;13722:19;13760:4;13789:2;13784:3;13780:12;13773:19;;13845:2;13835:6;13832:1;13828:14;13821:5;13817:26;13813:35;13871:5;13894:1;13915;13925:828;13941:6;13936:3;13933:15;13925:828;;;14010:16;;;-1:-1:-1;;14006:30:130;13994:43;;14076:20;;14151:14;14147:26;;;-1:-1:-1;;14143:40:130;14119:65;;14109:93;;14198:1;14195;14188:12;14109:93;14230:30;;14283:4;14315:21;;14349:33;14315:21;14349:33;:::i;:::-;-1:-1:-1;;;;;14408:33:130;14395:47;;14489:57;14529:16;;;14533:7;14489:57;:::i;:::-;14455:91;;14581:2;14576;14570:4;14566:13;14559:25;14605:68;14669:2;14663:4;14659:13;14645:12;14631;14605:68;:::i;:::-;14731:12;;;;14597:76;-1:-1:-1;;;14696:15:130;;;;-1:-1:-1;13967:1:130;13958:11;13925:828;;;-1:-1:-1;14769:4:130;;13590:1189;-1:-1:-1;;;;;;;;13590:1189:130:o;14784:465::-;14837:3;14875:5;14869:12;14902:6;14897:3;14890:19;14928:4;14957;14952:3;14948:14;14941:21;;14996:4;14989:5;14985:16;15019:1;15029:195;15043:6;15040:1;15037:13;15029:195;;;15108:13;;-1:-1:-1;;;;;15104:39:130;15092:52;;15164:12;;;;15199:15;;;;15140:1;15058:9;15029:195;;;-1:-1:-1;15240:3:130;;14784:465;-1:-1:-1;;;;;14784:465:130:o;15254:1740::-;16025:3;16014:9;16007:22;15988:4;16052:67;16114:3;16103:9;16099:19;16091:6;16052:67;:::i;:::-;16167:9;16159:6;16155:22;16150:2;16139:9;16135:18;16128:50;16201:80;16274:6;16266;16258;16201:80;:::i;:::-;16187:94;;16329:9;16321:6;16317:22;16312:2;16301:9;16297:18;16290:50;16363:80;16436:6;16428;16420;16363:80;:::i;:::-;16349:94;;16491:9;16483:6;16479:22;16474:2;16463:9;16459:18;16452:50;16525:80;16598:6;16590;16582;16525:80;:::i;:::-;16511:94;;16654:9;16646:6;16642:22;16636:3;16625:9;16621:19;16614:51;16725:1;16721;16716:3;16712:11;16708:19;16699:6;16693:13;16689:39;16681:6;16674:55;16776:2;16768:6;16764:15;16758:22;16813:2;16808;16800:6;16796:15;16789:27;16839:59;16894:2;16886:6;16882:15;16868:12;16839:59;:::i;:::-;16825:73;;16959:4;16953:2;16945:6;16941:15;16935:22;16931:33;16926:2;16918:6;16914:15;16907:58;16982:6;16974:14;;;;15254:1740;;;;;;;;;;;:::o;16999:521::-;17076:4;17082:6;17142:11;17129:25;17236:2;17232:7;17221:8;17205:14;17201:29;17197:43;17177:18;17173:68;17163:96;;17255:1;17252;17245:12;17163:96;17282:33;;17334:20;;;-1:-1:-1;;;;;;17366:30:130;;17363:50;;;17409:1;17406;17399:12;17363:50;17442:4;17430:17;;-1:-1:-1;17473:14:130;17469:27;;;17459:38;;17456:58;;;17510:1;17507;17500:12;17525:331;17630:9;17641;17683:8;17671:10;17668:24;17665:44;;;17705:1;17702;17695:12;17665:44;17734:6;17724:8;17721:20;17718:40;;;17754:1;17751;17744:12;17718:40;-1:-1:-1;;17780:23:130;;;17825:25;;;;;-1:-1:-1;17525:331:130:o;17861:323::-;-1:-1:-1;;;;;;17981:19:130;;18057:11;;;;18088:1;18080:10;;18077:101;;;18165:2;18159;18152:3;18149:1;18145:11;18142:1;18138:19;18134:28;18130:2;18126:37;18122:46;18113:55;;18077:101;;;17861:323;;;;:::o;18189:329::-;18426:2;18415:9;18408:21;18389:4;18446:66;18508:2;18497:9;18493:18;18485:6;18446:66;:::i;18523:127::-;18584:10;18579:3;18575:20;18572:1;18565:31;18615:4;18612:1;18605:15;18639:4;18636:1;18629:15;18655:217;18802:2;18791:9;18784:21;18765:4;18822:44;18862:2;18851:9;18847:18;18839:6;18822:44;:::i;19164:1712::-;19397:2;19386:9;19379:21;19409:66;19471:2;19460:9;19456:18;19428:26;19447:6;19428:26;:::i;:::-;-1:-1:-1;;;;;306:31:130;294:44;;240:104;19409:66;19536:4;19528:6;19524:17;19511:31;19506:2;19495:9;19491:18;19484:59;19360:4;19586:55;19637:2;19629:6;19625:15;19617:6;19586:55;:::i;:::-;19660:6;19703:2;19697:3;19686:9;19682:19;19675:31;19729:74;19798:3;19787:9;19783:19;19769:12;19755;19729:74;:::i;:::-;19715:88;;19850:55;19901:2;19893:6;19889:15;19881:6;19850:55;:::i;:::-;19812:93;;19928:2;19924:7;19996:2;19984:9;19976:6;19972:22;19968:31;19962:3;19951:9;19947:19;19940:60;20023:65;20081:6;20065:14;20049;20023:65;:::i;:::-;20009:79;;20150:3;20142:6;20138:16;20125:30;20119:3;20108:9;20104:19;20097:59;20218:3;20210:6;20206:16;20193:30;20187:3;20176:9;20172:19;20165:59;20243:3;20233:13;;20307:3;20299:6;20295:16;20282:30;20277:2;20266:9;20262:18;20255:58;20360:56;20411:3;20403:6;20399:16;20391:6;20360:56;:::i;:::-;20322:94;;20480:2;20468:9;20460:6;20456:22;20452:31;20447:2;20436:9;20432:18;20425:59;20507:65;20565:6;20549:14;20533;20507:65;:::i;:::-;20493:79;;;20619:55;20670:2;20662:6;20658:15;20650:6;20619:55;:::i;:::-;20581:93;;;;20739:2;20727:9;20719:6;20715:22;20711:31;20705:3;20694:9;20690:19;20683:60;;;20760:65;20818:6;20802:14;20786;20760:65;:::i;:::-;20752:73;;;;;20863:6;20856:4;20845:9;20841:20;20834:36;19164:1712;;;;;:::o;20881:184::-;20951:6;21004:2;20992:9;20983:7;20979:23;20975:32;20972:52;;;21020:1;21017;21010:12;20972:52;-1:-1:-1;21043:16:130;;20881:184;-1:-1:-1;20881:184:130:o;21070:271::-;21253:6;21245;21240:3;21227:33;21209:3;21279:16;;21304:13;;;21279:16;21070:271;-1:-1:-1;21070:271:130:o;21598:383::-;21755:3;21793:6;21787:13;21809:66;21868:6;21863:3;21856:4;21848:6;21844:17;21809:66;:::i;:::-;21897:16;;;;21922:21;;;-1:-1:-1;21970:4:130;21959:16;;21598:383;-1:-1:-1;21598:383:130:o;22432:1066::-;22887:4;22933:1;22929;22924:3;22920:11;22916:19;22974:2;22966:6;22962:15;22951:9;22944:34;23014:3;23009:2;22998:9;22994:18;22987:31;23041:57;23093:3;23082:9;23078:19;23070:6;23041:57;:::i;:::-;23134:6;23129:2;23118:9;23114:18;23107:34;23189:2;23181:6;23177:15;23172:2;23161:9;23157:18;23150:43;23242:9;23234:6;23230:22;23224:3;23213:9;23209:19;23202:51;23276:32;23301:6;23293;23276:32;:::i;:::-;23262:46;;23357:2;23349:6;23345:15;23339:3;23328:9;23324:19;23317:44;23410:9;23402:6;23398:22;23392:3;23381:9;23377:19;23370:51;23438:54;23485:6;23477;23438:54;:::i;:::-;23430:62;22432:1066;-1:-1:-1;;;;;;;;;;;22432:1066:130:o;23503:247::-;23562:6;23615:2;23603:9;23594:7;23590:23;23586:32;23583:52;;;23631:1;23628;23621:12;23583:52;23670:9;23657:23;23689:31;23714:5;23689:31;:::i;23755:545::-;23848:4;23854:6;23914:11;23901:25;24008:2;24004:7;23993:8;23977:14;23973:29;23969:43;23949:18;23945:68;23935:96;;24027:1;24024;24017:12;23935:96;24054:33;;24106:20;;;-1:-1:-1;;;;;;24138:30:130;;24135:50;;;24181:1;24178;24171:12;24135:50;24214:4;24202:17;;-1:-1:-1;24265:1:130;24261:14;;;24245;24241:35;24231:46;;24228:66;;;24290:1;24287;24280:12;24576:1393;25005:3;25058:21;;;25031:18;;25114:22;;;24976:4;25167:3;25152:19;;25194:6;24976:4;25228:304;25242:6;25239:1;25236:13;25228:304;;;25317:6;25304:20;25337:31;25362:5;25337:31;:::i;:::-;-1:-1:-1;;;;;25393:31:130;25381:44;;25448:4;25472:12;;;;25507:15;;;;;25421:1;25257:9;25228:304;;;25232:3;;25570:6;25563:4;25552:9;25548:20;25541:36;25586:46;25628:2;25617:9;25613:18;25605:6;-1:-1:-1;;;;;306:31:130;294:44;;240:104;25586:46;25677:9;25672:3;25668:19;25663:2;25652:9;25648:18;25641:47;25705:46;25747:3;25739:6;25731;25705:46;:::i;:::-;25697:54;;;25760:47;25802:3;25791:9;25787:19;25779:6;-1:-1:-1;;;;;306:31:130;294:44;;240:104;25760:47;-1:-1:-1;;;;;306:31:130;;25858:3;25843:19;;294:44;25900:6;25894:3;25883:9;25879:19;25872:35;25916:47;25958:3;25947:9;25943:19;25935:6;-1:-1:-1;;;;;306:31:130;294:44;;240:104;25974:360;26185:6;26177;26172:3;26159:33;26255:2;26251:15;;;;-1:-1:-1;;26247:53:130;26211:16;;26236:65;;;26325:2;26317:11;;25974:360;-1:-1:-1;25974:360:130:o;26339:287::-;26468:3;26506:6;26500:13;26522:66;26581:6;26576:3;26569:4;26561:6;26557:17;26522:66;:::i;:::-;26604:16;;;;;26339:287;-1:-1:-1;;26339:287:130:o",
    "linkReferences": {},
    "immutableReferences": {
      "69017": [
        { "start": 962, "length": 32 },
        { "start": 1876, "length": 32 }
      ],
      "69019": [
        { "start": 249, "length": 32 },
        { "start": 1047, "length": 32 },
        { "start": 2437, "length": 32 }
      ],
      "69022": [
        { "start": 168, "length": 32 },
        { "start": 745, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "REGISTRY()": "06433b1b",
    "SUPPORTED_ENTRYPOINT()": "137e051e",
    "_initHash()": "c67e2d2a",
    "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "928107f9",
    "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": "15cca638",
    "preValidationSetup(bytes32,address,bytes)": "4fff40e1",
    "predictSafeAddress(address,address,bytes,bytes32,bytes)": "663c87d8",
    "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": "d9ed0e8f",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUserOperationData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyProxy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreValidationSetupFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTRY\",\"outputs\":[{\"internalType\":\"contract IERC7484\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPPORTED_ENTRYPOINT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_initHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"initSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"initHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preInit\",\"type\":\"bytes\"}],\"name\":\"preValidationSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safeProxyFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"factoryInitializer\",\"type\":\"bytes\"}],\"name\":\"predictSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"safeProxy\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Safe7579Launchpad.InitData\",\"name\":\"initData\",\"type\":\"tuple\"}],\"name\":\"setupSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"rhinestone | zeroknots.eth\",\"kind\":\"dev\",\"methods\":{\"preValidationSetup(bytes32,address,bytes)\":{\"params\":{\"initHash\":\"will be calculated offchain using this.hash(InitData)\",\"preInit\":\"optional parameter for a delegatecall\",\"to\":\"optional parameter for a delegatecall\"}},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"details\":\"factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"params\":{\"initData\":\"initData to initialize the Safe and Safe7579 Adapter\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"amount of gas that has to be paid\",\"userOp\":\"EntryPoint v0.7 userOp.\",\"userOpHash\":\"hash of userOp\"},\"returns\":{\"validationData\":\"4337 packed validation data returned by the validator module\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"Create unique InitData hash. Using all params but excluding data.callData from hash\"},\"initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function.\"},\"preValidationSetup(bytes32,address,bytes)\":{\"notice\":\"SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage\"},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"notice\":\"Helper function that can be used offchain to predict the counterfactual Safe address.\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required.\"}},\"notice\":\"Launchpad to deploy a Safe account and connect the Safe7579 adapter. Check Readme.md for more information. Special thanks to [nlordell (Safe)](https://github.com/nlordell), who came up with [this technique](https://github.com/safe-global/safe-modules/pull/184)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Safe7579Launchpad.sol\":\"Safe7579Launchpad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"node_modules/erc7579/src/interfaces/IERC7579Module.sol\":{\"keccak256\":\"0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5\",\"dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b\",\"dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3\"]},\"src/ISafe7579.sol\":{\"keccak256\":\"0xf2f621ab10522eaf81c4da924ff29b3db5973629aa116fcba9b48de1222c3c33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aae76cac26fb78a60cd26ca31f8c24c4a40a4621dba02321488a7a4279d08bb0\",\"dweb:/ipfs/QmYfMkugVKtYJH5VAP7fDjHh3qJFogr7dGrGn7hkA4YJSe\"]},\"src/Safe7579Launchpad.sol\":{\"keccak256\":\"0x1a5157361285715382b76bf4acc293b97dbf5336377e3a5ca1ccfec35e009658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55aec289d90026d439252636e64149485cd46bf7ec9f8a2144be08a1c4fe47d1\",\"dweb:/ipfs/QmRaZw8XorJRHj6XgFtmoXxNkLGB9kkoFEpBKh2xp1iJbF\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xb4c149815fe8a943201d145d5ba6bd494560785db764b180559c8cd11a8048fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1687a18731256611519cef74491665a4ec374c3185a56b0fa5f250ce70bb850\",\"dweb:/ipfs/QmRvSU1drCoC94jUZZh5eG3gaRLR29zAAvyGxHRRAnbWme\"]},\"src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xe8ac49ab954d16da642ff7535660511ab4d5ed386478555fc39cbdd2a959235b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9d8a59405680f30c5129a0190d57229436f154ec797e5f3b560959263b2656b\",\"dweb:/ipfs/QmPzTygKn4qsxGaKnPX6f5qXncRCTgeACxDUKp1zWSy5va\"]},\"src/interfaces/ISafe.sol\":{\"keccak256\":\"0xdccfe11a20e4af55188ef2532a293fa61fe81a73749aa01bd58ea4fbdfea6d0a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1ab0c728dc88e99600ca1e719d67d0f897b6159d5662dcee2a10e194c7deef\",\"dweb:/ipfs/QmZ6QBbHswoYW9bzDro1WXr9dw6L99sSMoEak395KR6UHZ\"]},\"src/lib/ModeLib.sol\":{\"keccak256\":\"0xcfd7f705b61c9e23c6847c964719b7ccd62773692777a4be9b473cf5209c89fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f162d11756651400ea69cd89f2d1c3e9fe9a2e7ff0115e404c0434075f866a1d\",\"dweb:/ipfs/QmcvsguFTqFkNmBekzLcGZ3FQ1Wsx1JNPXeiPwe7sMVaBN\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.25+commit.b61c2a91" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IERC7484",
              "name": "registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "InvalidEntryPoint" },
        { "inputs": [], "type": "error", "name": "InvalidInitHash" },
        { "inputs": [], "type": "error", "name": "InvalidUserOperationData" },
        { "inputs": [], "type": "error", "name": "OnlyDelegatecall" },
        { "inputs": [], "type": "error", "name": "OnlyProxy" },
        { "inputs": [], "type": "error", "name": "PreValidationSetupFailed" },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "moduleTypeId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInstalled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REGISTRY",
          "outputs": [
            {
              "internalType": "contract IERC7484",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SUPPORTED_ENTRYPOINT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_initHash",
          "outputs": [
            { "internalType": "bytes32", "name": "value", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe7579",
              "type": "address"
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "executors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "fallbacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "struct ModuleInit[]",
              "name": "hooks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ]
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            { "internalType": "uint8", "name": "threshold", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initSafe7579"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "initHash",
              "type": "bytes32"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "bytes", "name": "preInit", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "preValidationSetup"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "singleton",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "safeProxyFactory",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "creationCode",
              "type": "bytes"
            },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "bytes",
              "name": "factoryInitializer",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "predictSafeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "safeProxy",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Safe7579Launchpad.InitData",
              "name": "initData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "singleton",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupTo",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISafe7579",
                  "name": "safe7579",
                  "type": "address"
                },
                {
                  "internalType": "struct ModuleInit[]",
                  "name": "validators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "module",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initData",
                      "type": "bytes"
                    }
                  ]
                },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupSafe"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "preValidationSetup(bytes32,address,bytes)": {
            "params": {
              "initHash": "will be calculated offchain using this.hash(InitData)",
              "preInit": "optional parameter for a delegatecall",
              "to": "optional parameter for a delegatecall"
            }
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "details": "factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));"
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "params": {
              "initData": "initData to initialize the Safe and Safe7579 Adapter"
            }
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "params": {
              "missingAccountFunds": "amount of gas that has to be paid",
              "userOp": "EntryPoint v0.7 userOp.",
              "userOpHash": "hash of userOp"
            },
            "returns": {
              "validationData": "4337 packed validation data returned by the validator module"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "Create unique InitData hash. Using all params but excluding data.callData from hash"
          },
          "initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)": {
            "notice": "This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function."
          },
          "preValidationSetup(bytes32,address,bytes)": {
            "notice": "SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage"
          },
          "predictSafeAddress(address,address,bytes,bytes32,bytes)": {
            "notice": "Helper function that can be used offchain to predict the counterfactual Safe address."
          },
          "setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))": {
            "notice": "During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable."
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC4337/=node_modules/@ERC4337/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/math/=node_modules/@prb/math/src/",
        "@rhinestone/=node_modules/@rhinestone/",
        "@safe-global/=node_modules/@safe-global/",
        "account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "erc7579/=node_modules/erc7579/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "module-bases/=node_modules/@rhinestone/module-bases/src/",
        "modulekit/=node_modules/@rhinestone/modulekit/src/",
        "sentinellist/=node_modules/@rhinestone/sentinellist/src/",
        "solady/=node_modules/solady/src/",
        "solarray/=node_modules/solarray/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Safe7579Launchpad.sol": "Safe7579Launchpad" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@safe-global/safe-contracts/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/erc7579/src/interfaces/IERC7579Module.sol": {
        "keccak256": "0x78ab984fc364972382a73a0d793c558f52800999d5e0e69c4df326a1de840604",
        "urls": [
          "bzz-raw://b37c25d32fab8b1622838de12f2e4b5744613b95b204262b76efb11a994554e5",
          "dweb:/ipfs/QmPmRkoV2FxQ72mjhZm7BfU1ivN3TMPhdDc6mHEv7hcoUC"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x7b2ece19f0e82036352db8e52c8ca68ee225cf927872848cfdaefac774e0174d",
        "urls": [
          "bzz-raw://1901f64511210507cc87df2d240063890f11ff1025ae61c1cc7594b2e648786b",
          "dweb:/ipfs/QmPqTthdY7rCb1utBCVcX9F5oj3suEUFEb8xJEYvSrQzH3"
        ],
        "license": "GPL-3.0"
      },
      "src/ISafe7579.sol": {
        "keccak256": "0xf2f621ab10522eaf81c4da924ff29b3db5973629aa116fcba9b48de1222c3c33",
        "urls": [
          "bzz-raw://aae76cac26fb78a60cd26ca31f8c24c4a40a4621dba02321488a7a4279d08bb0",
          "dweb:/ipfs/QmYfMkugVKtYJH5VAP7fDjHh3qJFogr7dGrGn7hkA4YJSe"
        ],
        "license": "MIT"
      },
      "src/Safe7579Launchpad.sol": {
        "keccak256": "0x1a5157361285715382b76bf4acc293b97dbf5336377e3a5ca1ccfec35e009658",
        "urls": [
          "bzz-raw://55aec289d90026d439252636e64149485cd46bf7ec9f8a2144be08a1c4fe47d1",
          "dweb:/ipfs/QmRaZw8XorJRHj6XgFtmoXxNkLGB9kkoFEpBKh2xp1iJbF"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IERC7484.sol": {
        "keccak256": "0xb4c149815fe8a943201d145d5ba6bd494560785db764b180559c8cd11a8048fc",
        "urls": [
          "bzz-raw://c1687a18731256611519cef74491665a4ec374c3185a56b0fa5f250ce70bb850",
          "dweb:/ipfs/QmRvSU1drCoC94jUZZh5eG3gaRLR29zAAvyGxHRRAnbWme"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC7579Account.sol": {
        "keccak256": "0xe8ac49ab954d16da642ff7535660511ab4d5ed386478555fc39cbdd2a959235b",
        "urls": [
          "bzz-raw://e9d8a59405680f30c5129a0190d57229436f154ec797e5f3b560959263b2656b",
          "dweb:/ipfs/QmPzTygKn4qsxGaKnPX6f5qXncRCTgeACxDUKp1zWSy5va"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISafe.sol": {
        "keccak256": "0xdccfe11a20e4af55188ef2532a293fa61fe81a73749aa01bd58ea4fbdfea6d0a",
        "urls": [
          "bzz-raw://dd1ab0c728dc88e99600ca1e719d67d0f897b6159d5662dcee2a10e194c7deef",
          "dweb:/ipfs/QmZ6QBbHswoYW9bzDro1WXr9dw6L99sSMoEak395KR6UHZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/lib/ModeLib.sol": {
        "keccak256": "0xcfd7f705b61c9e23c6847c964719b7ccd62773692777a4be9b473cf5209c89fd",
        "urls": [
          "bzz-raw://f162d11756651400ea69cd89f2d1c3e9fe9a2e7ff0115e404c0434075f866a1d",
          "dweb:/ipfs/QmcvsguFTqFkNmBekzLcGZ3FQ1Wsx1JNPXeiPwe7sMVaBN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 97
}
